{
  "hash": "f5091520d27cc480e5decaf6c60038c6",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Bob's Burgers Viewership from Seasons 1 to 14\"\nsubtitle: \"Highlighting the highest viewed episode per season, based on Wikipedia viewership data.\"\nauthor: \"Steven Ponce\"\ndate: \"2024-10-28\"\ncategories: [\"Bob's Burgers\", \"{ bobsburgersR }\", \"#Standalone\"]\nimage: \"thumbnails/sa_2024-10-28.png\"\nformat:\n  html:\n    toc: true\n    toc-depth: 5\n    code-link: true\n    code-fold: true\n    code-tools: true\n    code-summary: \"Show code\"\n    self-contained: true\neditor_options: \n  \n  chunk_output_type: inline\nexecute: \n  \n  error: false\n  message: false\n  warning: false\n  eval: true\nshare:\n  permalink: \"https://stevenponce.netlify.app/data_visualizations.png\"\n  linkedin: true\n  twitter: true\n  email: true\n---\n\n\n\n\n\n![Bob's Burgers Viewership by Season: A dot plot highlighting the highest viewed episode for each season from 1 to 14. Season 1's 'Human Flesh' episode had the highest viewership with 9.38 million viewers.](sa_2024-10-28){#fig-1}\n\n### <mark> __Steps to Create this Graphic__ </mark>\n\n#### 1. Load Packages & Setup \n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## 1. LOAD PACKAGES & SETUP ----\nif (!require(\"pacman\")) install.packages(\"pacman\")\npacman::p_load(\n  tidyverse,         # Easily Install and Load the 'Tidyverse'\n  ggtext,            # Improved Text Rendering Support for 'ggplot2'\n  showtext,          # Using Fonts More Easily in R Graphs\n  janitor,           # Simple Tools for Examining and Cleaning Dirty Data\n  skimr,             # Compact and Flexible Summaries of Data\n  scales,            # Scale Functions for Visualization\n  glue,              # Interpreted String Literals\n  ggrepel,           # Automatically Position Non-Overlapping Text Labels with'ggplot2' \n  ggbeeswarm,        # Categorical Scatter (Violin Point) Plots\n  bobsburgersR       # Bob's Burgers Datasets for Data Visualization\n)    \n\n### |- figure size ----\ncamcorder::gg_record(\n  dir    = here::here(\"temp_plots\"),\n  device = \"png\",\n  width  =  8,\n  height =  8,\n  units  = \"in\",\n  dpi    = 320\n)\n\n### |- resolution ----\nshowtext_opts(dpi = 320, regular.wt = 300, bold.wt = 800)\n```\n:::\n\n\n\n\n\n#### 2. Read in the Data \n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbobsburgersR::imdb_wikipedia_data\n```\n:::\n\n\n\n\n\n#### 3. Examine the Data\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(imdb_wikipedia_data)\nskim(imdb_wikipedia_data)\n```\n:::\n\n\n\n\n\n#### 4. Tidy Data \n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## |- highlight  data ----\n\nhighlight_data <- imdb_wikipedia_data |>\n  group_by(season) |>\n  filter(wikipedia_viewers == max(wikipedia_viewers, na.rm = TRUE)) |>\n  slice(1) |>\n  ungroup() |>\n  mutate(\n    label = paste0(\"Ep: \", episode, \" - \", imdb_title, \"\\nViewers: \", wikipedia_viewers, \" M\")\n  )\n```\n:::\n\n\n\n\n\n\n#### 5. Visualization Parameters \n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### |- plot aesthetics ----\nbkg_col      <- \"#f5f5f2\"     \ntitle_col    <- \"gray20\"           \nsubtitle_col <- \"gray20\"     \ncaption_col  <- \"gray30\"   \ntext_col     <- \"gray20\"    \ncol_palette <- c(\"#b358a6\", \"#762a83\", \"#4d004b\", \"grey50\") \n\n### |-  titles and caption ----\n\n# icons\ntt <- str_glue(\"Source: {{bobsburgersR}}\")\nli <- str_glue(\"<span style='font-family:fa6-brands'>&#xf08c;</span>\")\ngh <- str_glue(\"<span style='font-family:fa6-brands'>&#xf09b;</span>\")\n\n# text\ntitle_text    <- str_glue(\"Bob's Burgers Viewership from Seasons 1 to 14\")\nsubtitle_text <- str_glue(\"Highlighting the highest viewed episode per season, based on Wikipedia viewership data.\")\ncaption_text  <- str_glue(\"{li} stevenponce &bull; {gh} poncest &bull; #rstats #ggplot2 &bull; {tt}\")\n\n### |-  fonts ----\nfont_add(\"fa6-brands\", here::here(\"fonts/6.4.2/Font Awesome 6 Brands-Regular-400.otf\"))\nfont_add_google(\"Oswald\", regular.wt = 400, family = \"title\")\nfont_add_google(\"Merriweather Sans\", regular.wt = 400, family = \"subtitle\")\nfont_add_google(\"Merriweather Sans\", regular.wt = 400, family = \"text\")\nfont_add_google(\"Noto Sans\", regular.wt = 400, family = \"caption\")\nshowtext_auto(enable = TRUE)\n\n### |-  plot theme ----\ntheme_set(theme_minimal(base_size = 14, base_family = \"text\"))                \n\ntheme_update(\n  plot.title.position   = \"plot\",\n  plot.caption.position = \"plot\",\n  legend.position       = 'plot',\n  plot.background       = element_rect(fill = bkg_col, color = bkg_col),\n  panel.background      = element_rect(fill = bkg_col, color = bkg_col),\n  plot.margin           = margin(t = 10, r = 20, b = 10, l = 20),\n  axis.title.x          = element_text(margin = margin(10, 0, 0, 0), size = rel(1.1), \n                                       color = text_col, family = \"text\", face = \"bold\", hjust = 0.5),\n  axis.title.y          = element_text(margin = margin(0, 10, 0, 0), size = rel(1.1), \n                                       color = text_col, family = \"text\", face = \"bold\", hjust = 0.5),\n  axis.text             = element_text(size = rel(0.8), color = text_col, family = \"text\"),\n  panel.grid.major.y    = element_line(color = \"#e0e0e0\", linewidth = 0.6, linetype = 'dotted'),\n  panel.grid.major.x    = element_line(color = \"#d3d3d3\", linewidth = 0.6, linetype = 'dotted'),\n  panel.grid.minor      = element_blank()\n)\n```\n:::\n\n\n\n\n\n\n#### 6. Plot \n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\np <- ggplot(imdb_wikipedia_data, \n            aes(x = wikipedia_viewers, y = factor(season, levels = rev(unique(season))))) +\n\n  # Geoms\n  ggbeeswarm::geom_beeswarm(cex = 1, color = col_palette[2], size = 2, \n                            alpha = 0.5, shape = 21, na.rm = TRUE) +\n  ggbeeswarm::geom_beeswarm(\n    data = highlight_data,\n    aes(color = factor(ifelse(season == 1, \"highlight\", \"normal\"))),\n    cex = 1, size = 2.1, alpha = 0.75, shape = 19, na.rm = TRUE\n  ) +\n  geom_segment(\n    data = highlight_data,\n    aes(\n      x = wikipedia_viewers, xend = wikipedia_viewers + 0.5,\n      y = as.numeric(factor(season, levels = rev(unique(season)))), yend = as.numeric(factor(season, levels = rev(unique(season))))\n    ),\n    color = col_palette[4], size = 0.2, linetype = \"dotted\"\n  ) +\n  geom_text(\n    data = highlight_data, aes(\n      x = wikipedia_viewers + 0.6, y = factor(season, levels = rev(unique(season))),\n      label = label, lineheight = 1, color = factor(ifelse(season == 1, \"highlight\", \"normal\"))\n    ),\n    size = 3, hjust = 0\n  ) +\n\n  # Scales\n  scale_x_continuous(\n    breaks = seq(0, 10, by = 2),\n    limits = c(1, 12)\n  ) +\n  scale_y_discrete() +\n  scale_color_manual(values = c(\"highlight\" = col_palette[3], \"normal\" = col_palette[4])) +\n  coord_cartesian(clip = \"off\") +\n\n  # Labs\n\n  labs(\n    x = \"US Viewers (in millions)\",\n    y = \"Season\",\n    title = title_text,\n    subtitle = subtitle_text,\n    caption = caption_text\n  ) +\n  \n  # Theme\n  theme(\n    plot.margin  = margin(10, 20, 10, 20),\n    plot.title   = element_markdown(\n      size       = rel(1.6),\n      family     = \"title\",\n      face       = \"bold\",\n      color      = title_col,\n      lineheight = 1.1,\n      margin     = margin(t = 10, b = 5)\n    ),\n    plot.subtitle = element_markdown(\n      size       = rel(0.85),\n      family     = \"subtitle\",\n      color      = subtitle_col,\n      lineheight = 1.1,\n      margin     = margin(t = 5, b = 15)\n    ),\n    plot.caption = element_markdown(\n      size       = rel(0.65),\n      family     = \"caption\",\n      color      = caption_col,\n      lineheight = 1.1,\n      hjust      = 0.5,\n      halign     = 0.5,\n      margin     = margin(t = 5, b = 5)\n    ),\n  )\n```\n:::\n\n\n\n\n\n\n\n#### 7. Save\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### |-  plot image ----  \n\n# Save the plot as PNG\nggsave(\n  filename = here::here(\"projects/standalone_visualizations/sa_2024-10-28.png\"), \n  plot = p,\n  width = 8, height = 8, units = \"in\", dpi = 320\n)\n\n### |-  plot thumbnail----  \nmagick::image_read(here::here(\"projects/standalone_visualizations/sa_2024-10-28.png\")) |> \n  magick::image_resize(geometry = \"400\") |> \n  magick::image_write(here::here(\"projects/standalone_visualizations/thumbnails/sa_2024-10-28.png\"))\n```\n:::\n\n\n\n\n\n\n\n#### 8. Session Info\n\n::: {.callout-tip collapse=\"true\"}\n##### Expand for Session Info\n\n\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\nR version 4.4.1 (2024-06-14 ucrt)\nPlatform: x86_64-w64-mingw32/x64\nRunning under: Windows 11 x64 (build 22631)\n\nMatrix products: default\n\n\nlocale:\n[1] LC_COLLATE=English_United States.utf8 \n[2] LC_CTYPE=English_United States.utf8   \n[3] LC_MONETARY=English_United States.utf8\n[4] LC_NUMERIC=C                          \n[5] LC_TIME=English_United States.utf8    \n\ntime zone: America/New_York\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices datasets  utils     methods   base     \n\nother attached packages:\n [1] bobsburgersR_0.0.0.9000 ggbeeswarm_0.7.2        ggrepel_0.9.6          \n [4] glue_1.8.0              scales_1.3.0            skimr_2.1.5            \n [7] janitor_2.2.0           showtext_0.9-7          showtextdb_3.0         \n[10] sysfonts_0.8.9          ggtext_0.1.2            lubridate_1.9.3        \n[13] forcats_1.0.0           stringr_1.5.1           dplyr_1.1.4            \n[16] purrr_1.0.2             readr_2.1.5             tidyr_1.3.1            \n[19] tibble_3.2.1            ggplot2_3.5.1           tidyverse_2.0.0        \n[22] pacman_0.5.1           \n\nloaded via a namespace (and not attached):\n [1] gtable_0.3.5      beeswarm_0.4.0    xfun_0.47         htmlwidgets_1.6.4\n [5] tzdb_0.4.0        vctrs_0.6.5       tools_4.4.0       generics_0.1.3   \n [9] curl_5.2.2        gifski_1.12.0-2   fansi_1.0.6       pkgconfig_2.0.3  \n[13] lifecycle_1.0.4   farver_2.1.2      compiler_4.4.0    textshaping_0.4.0\n[17] munsell_0.5.1     repr_1.1.7        snakecase_0.11.1  vipor_0.4.7      \n[21] htmltools_0.5.8.1 yaml_2.3.10       pillar_1.9.0      camcorder_0.1.0  \n[25] magick_2.8.4      commonmark_1.9.1  tidyselect_1.2.1  digest_0.6.37    \n[29] stringi_1.8.4     rsvg_2.6.0        rprojroot_2.0.4   fastmap_1.2.0    \n[33] grid_4.4.0        here_1.0.1        colorspace_2.1-1  cli_3.6.3        \n[37] magrittr_2.0.3    base64enc_0.1-3   utf8_1.2.4        withr_3.0.1      \n[41] timechange_0.3.0  rmarkdown_2.28    ragg_1.3.2        hms_1.1.3        \n[45] evaluate_0.24.0   knitr_1.48        markdown_1.13     rlang_1.1.4      \n[49] gridtext_0.1.5    Rcpp_1.0.13       xml2_1.3.6        renv_1.0.3       \n[53] svglite_2.1.3     rstudioapi_0.16.0 jsonlite_1.8.8    R6_2.5.1         \n[57] systemfonts_1.1.0\n```\n\n\n:::\n:::\n\n\n\n\n:::\n\n#### 9. GitHub Repository\n\n::: {.callout-tip collapse=\"true\"}\n\n##### Expand for GitHub Repo\n \n[Access the GitHub repository here](https://github.com/poncest/personal-website/)\n:::",
    "supporting": [
      "sa_2024-10-28_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}