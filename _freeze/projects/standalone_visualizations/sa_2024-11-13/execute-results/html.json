{
  "hash": "ac29cd76bf501b8319ae09ddc63ee2b6",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Emotional Flow in Bob's Burgers\"\nsubtitle: \"Tracking the emotional tone throughout each season (Seasons 1-14)\n           Based on dialogue sentiment analysis | Values above 0 indicate positive emotional tone\"\nauthor: \"Steven Ponce\"\ndate: \"2024-11-13\"\ncategories: [\"Bob's Burgers\", \"Standalone\", \"2024\"]\nimage: \"thumbnails/sa_2024-11-13.png\"\nformat:\n  html:\n    \n    toc: true\n    toc-depth: 5\n    code-link: true\n    code-fold: true\n    code-tools: true\n    code-summary: \"Show code\"\n    self-contained: true\n    fig-width: 9\n    fig-height: 10\n    fig-dpi: 320\n    fig-format: \"png\"\n    embed-resources: true\neditor_options: \n  chunk_output_type: inline\nexecute: \n  error: false\n  message: false\n  warning: false\n  eval: true\n# share:\n#   permalink: \"https://stevenponce.netlify.app/projects.html\"\n#   linkedin: true\n#   twitter: true\n#   email: true\n---\n\n\n\n![Emotional Flow in Bob's Burgers Seasons 1–14: A grid of line charts, each showing emotional tone over the progress of each season. Positive tone is above 0, with most seasons ending on an upward trend and mid-season dips in tone. Key patterns are noted below the charts.](sa_2024-11-13){#fig-1}\n\n### <mark> __Steps to Create this Graphic__ </mark>\n\n#### 1. Load Packages & Setup \n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: load\n#| warning: false\n\n## 1. LOAD PACKAGES & SETUP ----\nif (!require(\"pacman\")) install.packages(\"pacman\")\npacman::p_load(\n  tidyverse,         # Easily Install and Load the 'Tidyverse'\n  ggtext,            # Improved Text Rendering Support for 'ggplot2'\n  showtext,          # Using Fonts More Easily in R Graphs\n  janitor,           # Simple Tools for Examining and Cleaning Dirty Data\n  skimr,             # Compact and Flexible Summaries of Data\n  scales,            # Scale Functions for Visualization\n  glue,              # Interpreted String Literals\n  bobsburgersR,      # Bob's Burgers Datasets for Data Visualization\n  tidytext,          # Text Mining using 'dplyr', 'ggplot2', and Other Tidy Tools\n  patchwork,         # The Composer of Plots\n  zoo                # S3 Infrastructure for Regular and Irregular Time Series \n)     \n\n### |- figure size ----\ncamcorder::gg_record(\n  dir    = here::here(\"temp_plots\"),\n  device = \"png\",\n  width  =  9,\n  height =  10,\n  units  = \"in\",\n  dpi    = 320\n)\n\n### |- resolution ----\nshowtext_opts(dpi = 320, regular.wt = 300, bold.wt = 800)\n```\n````\n:::\n\n\n\n#### 2. Read in the Data \n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: read\n#| include: true\n#| eval: true\n#| results: 'hide'\n#| warning: false\n\nbobsburgersR::transcript_data\n```\n````\n:::\n\n\n#### 3. Examine the Data\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: examine\n#| include: true\n#| eval: true\n#| results: 'hide'\n#| warning: false\n\nglimpse(transcript_data)\nskim(transcript_data)\n```\n````\n:::\n\n\n#### 4. Tidy Data \n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: tidy\n#| warning: false\n\n# Sentiment analysis - AFINN Sentiment Lexicon\nsentiment_data <- transcript_data |>\n  filter(!is.na(dialogue)) |>\n  unnest_tokens(word, dialogue) |>\n  inner_join(get_sentiments(\"afinn\")) |>\n  group_by(season, episode) |>\n  mutate(\n    position = line / max(line),\n    rolling_sentiment = zoo::rollmean(value, k = 30, fill = NA)\n  ) |>\n  ungroup()\n```\n````\n:::\n\n\n\n#### 5. Visualization Parameters \n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: params\n#| include: true\n#| warning: false\n\n### |- plot aesthetics ----\nbkg_col      <- \"#f5f5f2\"  \ntitle_col    <- \"gray20\"           \nsubtitle_col <- \"gray30\"     \ntext_col     <- \"gray30\"    \ncaption_col  <- \"gray40\"  \nmain_color   <- \"#2b8cbe\" \n\n### |-  titles and caption ----\n# icons\ntt <- str_glue(\"Source: {{bobsburgersR}}\")\nli <- str_glue(\"<span style='font-family:fa6-brands'>&#xf08c;</span>\")\ngh <- str_glue(\"<span style='font-family:fa6-brands'>&#xf09b;</span>\")\nbs <- str_glue(\"<span style='font-family:fa6-brands'>&#xe671; </span>\")\n\n# text\ntitle_text    <- str_glue(\"Emotional Flow in Bob's Burgers\")\nsubtitle_text <- str_glue(\"Tracking the emotional tone throughout each season (Seasons 1-14)<br>\n                          Based on dialogue sentiment analysis | Values above 0 indicate positive emotional tone\")\ncaption_text  <- str_glue(\"{li} stevenponce &bull; {gh} poncest &bull; #rstats #ggplot2 &bull; {tt}\")\n\n### |-  fonts ----\nfont_add(\"fa6-brands\", here::here(\"fonts/6.4.2/Font Awesome 6 Brands-Regular-400.otf\"))\nfont_add_google(\"Oswald\", regular.wt = 400, family = \"title\")\nfont_add_google(\"Source Sans Pro\", family = \"subtitle\")\nfont_add_google(\"Source Sans Pro\", family = \"text\")  \nfont_add_google(\"Roboto Mono\", family = \"numbers\")  \nfont_add_google(\"Noto Sans\", regular.wt = 400, family = \"caption\")\nshowtext_auto(enable = TRUE)\n\n\n### |-  plot theme ----\ntheme_set(theme_minimal(base_size = 14, base_family = \"text\"))                \n\ntheme_update(\n  plot.title.position   = \"plot\",\n  plot.caption.position = \"plot\",\n  legend.position       = \"plot\",\n  plot.background       = element_rect(fill = bkg_col, color = bkg_col),\n  panel.background      = element_rect(fill = bkg_col, color = bkg_col),\n  plot.margin           = margin(t = 10, r = 10, b = 10, l = 10),\n  axis.title.x          = element_text(margin = margin(10, 0, 0, 0), size = rel(1.1), \n                                       color = text_col, family = \"text\", face = \"bold\", hjust = 0.5),\n  axis.title.y          = element_text(margin = margin(0, 10, 0, 0), size = rel(1.1), \n                                       color = text_col, family = \"text\", face = \"bold\", hjust = 0.5),\n  axis.text             = element_text(size = rel(0.6), color = text_col, family = \"numbers\"),\n  strip.text            = element_text(size = rel(1), face = \"bold\", margin = margin(b = 10), family = \"text\"),\n  panel.grid.major.y    = element_line(color = \"#d3d3d3\", linewidth = 0.2), \n  panel.grid.major.x    = element_blank(), \n  panel.grid.minor      = element_blank(),\n  panel.spacing.x       = unit(2, \"lines\"),  \n  panel.spacing.y       = unit(1, \"lines\"),  \n)\n```\n````\n:::\n\n\n\n#### 6. Plot\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n### |- title & subtitle plot ----\ntitle_plot <- ggplot() +\n  labs(\n    title = title_text,\n    subtitle = subtitle_text\n  ) +\n  theme_void() +\n  theme(\n    plot.title      = element_text(\n      size          = rel(2.4),\n      family        = \"title\",\n      face          = \"bold\",\n      color         = title_col,\n      lineheight    = 1.1,\n      margin        = margin(t = 5, b = 5)\n    ),\n    plot.subtitle   = element_markdown(\n      size          = rel(1.2),\n      family        = \"subtitle\",\n      color         = subtitle_col,\n      lineheight    = 1.1,\n      margin        = margin(t = 5, b = 15)\n    ),\n    plot.background = element_rect(fill = bkg_col, color = bkg_col),\n    plot.margin     = margin(10, 10, 0, 10)\n  )\n  \n### |- main plot ---- \nmain_plot <- sentiment_data |>\n  ggplot(aes(x = position, y = rolling_sentiment)) +\n\n  # Geoms\n  geom_hline(yintercept = 0, linetype = \"dashed\", color = \"gray60\", linewidth = 0.3) +\n  geom_smooth(\n    color = main_color,\n    se = FALSE,\n    size = 1,\n    span = 0.3\n  ) +\n\n  # Scales\n  scale_x_continuous(\n    labels = scales::percent,\n    breaks = seq(0, 1, 0.5)\n  ) +\n  scale_y_continuous(\n    breaks = seq(-1, 1, 0.5),\n    limits = c(-0.1, 1.1)\n  ) +\n  coord_cartesian(clip = \"off\") +\n\n  # Labs\n  labs(\n    x = \"Season Progress\",\n    y = \"Emotional Tone\"\n  ) +\n\n  # Facet\n  facet_wrap(~season,\n    ncol = 4,\n    labeller = labeller(season = function(x) paste(\"Season\", x))\n  ) +\n\n  # Theme\n  theme(\n    plot.margin = margin(0, 0, 0, 0)\n  )\n\n\n### |- key pattern plot ----\nkey_patterns_plot <- ggplot() +\n  annotate(\n    \"richtext\",\n    x = 0.5,\n    y = 0.5,\n    label = glue::glue(\n      \"<span style='font-family:sans;font-size:11pt;color:{title_col}'>**Key Patterns:**</span><br>\n        <span style='font-family:sans;font-size:9pt;color:{text_col}'>\n        • Almost every season ends on an upward trend<br>\n        • Consistent mid-season dips in emotional tone<br>\n        • Overall tone stays mostly positive\n        </span>\"\n    ),\n    fill = NA,\n    label.color = NA,\n    hjust = 0,\n    vjust = 1.2\n  ) +\n  theme_void() +\n  theme(\n    plot.margin = margin(5, 10, 5, 10)\n  )\n\n\n### |- combined plot ----\n\n# Define layout design with adjusted areas\n\n  # Define layout\ndesign <- c(\n  area(1, 1, 1, 6),      # title area\n  area(2, 1, 5, 6),      # main plot area\n  area(4, 2, 6, 6)       # key patterns area \n)\n  \n  # Combine plots\ncombined_plot <- title_plot + main_plot + key_patterns_plot +\n  plot_layout(\n    design = design,\n    heights = c(0.8, 4, 4, 4, 4, .1),\n    widths = c(1, 1, 1, 1)\n  ) +\n  plot_annotation(\n    caption = caption_text,\n    theme = theme(\n      plot.background = element_rect(fill = bkg_col, color = bkg_col),\n      plot.margin     = margin(10, 10, 10, 10),\n      plot.caption    = element_markdown(\n        size          = rel(0.65),\n        family        = \"caption\",\n        color         = caption_col,\n        lineheight    = 1.1,\n        hjust         = 0.5,\n        margin        = margin(t = 5, b = 5)\n      )\n    )\n  )\n```\n````\n:::\n\n\n\n#### 7. Save\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: save\n#| warning: false\n\n# There was some issues between patchwork and ggsave\n\n# Make sure these pkgs are installed\nif (!require(\"ggplotify\")) install.packages(\"ggplotify\")\nif (!require(\"grid\")) install.packages(\"grid\")\n\n# Use Arial (Windows system font)\nwindowsFonts(Arial = windowsFont(\"Arial\"))\n\nfont_add(\"fa6-brands\", here::here(\"fonts/6.4.2/Font Awesome 6 Brands-Regular-400.otf\"))\n\n# Convert patchwork plot to grob\nplot_grob <- as.grob(combined_plot)\n\n# Set up the PNG device with proper font handling\npng(\n  filename = here::here(\"projects/standalone_visualizations/sa_2024-11-13.png\"),\n  width = 9, \n  height = 10, \n  units = \"in\", \n  res = 320,\n  type = \"cairo\" \n)\n\n# Enable showtext with specific settings\nshowtext::showtext_begin()\nshowtext::showtext_opts(dpi = 320, regular.wt = 300, bold.wt = 800)\n\n# Draw the plot\ngrid::grid.draw(plot_grob)\n\n# Clean up\nshowtext::showtext_end()\ninvisible(dev.off())\n\n# Create thumbnail\nmagick::image_read(here::here(\"projects/standalone_visualizations/sa_2024-11-13.png\")) |> \n  magick::image_resize(geometry = \"400\") |> \n  magick::image_write(here::here(\"projects/standalone_visualizations/thumbnails/sa_2024-11-13.png\"))\n```\n````\n:::\n\n\n\n\n#### 8. Session Info\n\n::: {.callout-tip collapse=\"true\"}\n##### Expand for Session Info\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\nR version 4.4.1 (2024-06-14 ucrt)\nPlatform: x86_64-w64-mingw32/x64\nRunning under: Windows 11 x64 (build 22631)\n\nMatrix products: default\n\n\nlocale:\n[1] LC_COLLATE=English_United States.utf8 \n[2] LC_CTYPE=English_United States.utf8   \n[3] LC_MONETARY=English_United States.utf8\n[4] LC_NUMERIC=C                          \n[5] LC_TIME=English_United States.utf8    \n\ntime zone: America/New_York\ntzcode source: internal\n\nattached base packages:\n[1] grid      stats     graphics  grDevices datasets  utils     methods  \n[8] base     \n\nother attached packages:\n [1] ggplotify_0.1.2         zoo_1.8-12              patchwork_1.3.0        \n [4] tidytext_0.4.2          bobsburgersR_0.0.0.9000 glue_1.8.0             \n [7] scales_1.3.0            skimr_2.1.5             janitor_2.2.0          \n[10] showtext_0.9-7          showtextdb_3.0          sysfonts_0.8.9         \n[13] ggtext_0.1.2            lubridate_1.9.3         forcats_1.0.0          \n[16] stringr_1.5.1           dplyr_1.1.4             purrr_1.0.2            \n[19] readr_2.1.5             tidyr_1.3.1             tibble_3.2.1           \n[22] ggplot2_3.5.1           tidyverse_2.0.0         pacman_0.5.1           \n\nloaded via a namespace (and not attached):\n [1] tidyselect_1.2.1   farver_2.1.2       fastmap_1.2.0      janeaustenr_1.0.0 \n [5] digest_0.6.37      timechange_0.3.0   lifecycle_1.0.4    rsvg_2.6.1        \n [9] tokenizers_0.3.0   magrittr_2.0.3     compiler_4.4.0     rlang_1.1.6       \n[13] tools_4.4.0        utf8_1.2.4         yaml_2.3.10        knitr_1.49        \n[17] labeling_0.4.3     htmlwidgets_1.6.4  curl_6.0.0         here_1.0.1        \n[21] xml2_1.3.6         camcorder_0.1.0    repr_1.1.7         withr_3.0.2       \n[25] fansi_1.0.6        colorspace_2.1-1   cli_3.6.4          rmarkdown_2.29    \n[29] generics_0.1.3     rstudioapi_0.17.1  textdata_0.4.5     tzdb_0.5.0        \n[33] commonmark_1.9.2   splines_4.4.0      base64enc_0.1-3    vctrs_0.6.5       \n[37] yulab.utils_0.1.8  Matrix_1.7-0       jsonlite_1.8.9     gridGraphics_0.5-1\n[41] hms_1.1.3          systemfonts_1.1.0  magick_2.8.5       gifski_1.32.0-1   \n[45] codetools_0.2-20   stringi_1.8.4      gtable_0.3.6       munsell_0.5.1     \n[49] pillar_1.9.0       rappdirs_0.3.3     htmltools_0.5.8.1  R6_2.5.1          \n[53] rprojroot_2.0.4    evaluate_1.0.1     lattice_0.22-6     markdown_1.13     \n[57] SnowballC_0.7.1    gridtext_0.1.5     snakecase_0.11.1   renv_1.0.3        \n[61] Rcpp_1.0.13-1      nlme_3.1-164       svglite_2.1.3      mgcv_1.9-1        \n[65] xfun_0.49          fs_1.6.5           pkgconfig_2.0.3   \n```\n\n\n:::\n:::\n\n:::\n\n#### 9. GitHub Repository\n\n::: {.callout-tip collapse=\"true\"}\n\n##### Expand for GitHub Repo\n \n[Access the GitHub repository here](https://github.com/poncest/personal-website/)\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}