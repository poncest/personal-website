{
  "hash": "079a6838a7bb73e3c3282507b197aec8",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"WakeUp Coffee Sales Summary\"\nsubtitle: |\n  Top 10 Accounts by Sales Volume: 4-week sales ending January 31st\nauthor: \"Steven Ponce\"\ndate: \"2024-10-09\"\ndate-modified: last-modified\n\ncategories:\n  - \"#SWDchallenge\"\n  - \"#Exercise\"\nimage: \"thumbnails/swd_2024_10 - Ex_046.png\"\n\nformat:\n  html:\n    toc: true\n    toc-depth: 5\n    code-fold: true\n    code-link: true\n    df_print: kable\n  \neditor_options: \n  chunk_output_type: console\n\nexecute: \n  error: false\n  message: false\n  warning: false\n  eval: false\n\nshare:\n  permalink: \"https://stevenponce.netlify.app/data_visualizations.html\"\n  linkedin: true\n  twitter: true\n  email: true\n---\n\n\n\n\n**Update**: This post has been updated based on valuable feedback from the #SWDchallenge community. The changes include:\n\n- Reordering the table by Sales Volume to bring Account J, which has the largest negative percentage change, to the top for better emphasis.\n- Adjusting the color scheme to differentiate between positive and negative growth values more clearly, ensuring a more intuitive visual representation.\n- Highlighting Accounts J and H to emphasize the largest decrease and the highest growth, respectively.\n\n\n\n### Original\n\nThe goal of this month's Storytelling with Data challenge is to apply emphasis to the table shown below.\n\n![Original table](https://swd-community-media.s3.amazonaws.com/media/Screenshot_2024-10-09_at_12.51.04.png){#fig-1}\n\n\nAdditional information can be found [HERE](https://community.storytellingwithdata.com/exercises/apply-emphasis-to-this-table)\n\n\n### Makeover\n\n![Here is the WakeUp Coffee Sales Summary for the top 10 accounts by sales volume for the 4 weeks ending January 31st. Account H experienced the highest growth (+37.90%) with sales totaling $11,645. Account D had the highest sales volume at $547,265. Accounts J and E both showed significant declines, with -8.70% and -4.70%, respectively. The table includes sales volume, percentage change versus prior period, average number of UPCs, percentage of ACV selling, and price per pound.](swd_2024_10 - Ex_046.png){#fig-2}\n\n### <mark> __Steps to Create this Graphic__ </mark>\n\n#### 1. Load Packages & Setup \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(\n  tidyverse,   # Easily Install and Load the 'Tidyverse'\n  ggtext,      # Improved Text Rendering Support for 'ggplot2'\n  showtext,    # Using Fonts More Easily in R Graphs\n  janitor,     # Simple Tools for Examining and Cleaning Dirty Data\n  skimr,       # Compact and Flexible Summaries of Data\n  scales,      # Scale Functions for Visualization\n  glue,        # Interpreted String Literals\n  gt,          # Easily Create Presentation-Ready Display Tables\n  readxl       # Read Excel Files\n)\n```\n:::\n\n\n\n#### 2. Read in the Data \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsales_data <- read_excel(\n  here::here(\"data/data_ex_046.xlsx\"),\n  range = \"B8:G18\", \n  trim_ws = TRUE\n  ) |> \n  clean_names() |> \n  glimpse()\n```\n:::\n\n\n\n#### 3. Examing the Data \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(sales_data)  \n```\n:::\n\n\n\n\n#### 6. Plot\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### |- Create a gt table ----\nsales_table <- sales_data |>\n  arrange(desc(sales_volume)) |>  # Reorder by Sales Volume descending\n  gt() |>\n  tab_header(\n    title = md(\"**WakeUp Coffee Sales Summary**\"),\n    subtitle = \"Top 10 Accounts by Sales Volume: 4-week sales ending January 31st\"\n  ) |>\n  fmt_currency(\n    columns = c(sales_volume, price_per_pound),\n    currency = \"USD\"\n  ) |>\n  fmt_percent(\n    columns = c(percent_change_vs_prior),\n    scale_values = TRUE\n  ) |>\n  fmt_number(\n    columns = c(avg_number_of_up_cs),\n    decimals = 1\n  ) |>\n  text_transform(\n    locations = cells_body(columns = percent_change_vs_prior),\n    fn = function(x) {\n      dplyr::case_when(\n        x > 0 ~ paste0(\"\\U2191 \", x), # Up arrow for positive values\n        x < 0 ~ paste0(\"\\U2193 \", x), # Down arrow for negative values,\n        TRUE ~ as.character(x)\n      )\n    }\n  ) |>\n  # Emphasize Accounts H and J\n  tab_style(\n    style = list(\n      cell_fill(color = \"#D3E4CD\"),\n      cell_text(color = \"black\")\n    ),\n    locations = cells_body(\n      rows = account %in% c(\"J\",\"H\")\n    )\n  ) |>\n  # Now add the color gradient for the % Change column\n  data_color(\n    columns = c(percent_change_vs_prior),\n    fn = col_bin(\n      bins = c(-0.1, -0.04, 0, 0.065, 0.4), \n      palette = c(\"#CA0020\", \"#F4A582\", \"#92C5DE\", \"#0571B0\"),\n      na.color = \"transparent\"  \n    )\n  ) |>\n  cols_align(\n    align = \"right\",\n    columns = c(sales_volume, percent_change_vs_prior, avg_number_of_up_cs, percent_acv_selling, price_per_pound)\n  ) |>\n  cols_label(\n    account = \"Account\",\n    sales_volume = \"Sales Volume ($)\",\n    percent_change_vs_prior = \"% Change vs Prior\",\n    avg_number_of_up_cs = \"Avg # of UPCs\",\n    percent_acv_selling = \"% ACV Selling\",\n    price_per_pound = \"Price per Pound ($)\"\n  ) |>\n  tab_options(\n    table.font.size = \"small\",\n    data_row.padding = px(5)\n  ) |>\n  tab_source_note(\n    source_note = html(\"<span style='font-size: 10px;'>UPC is the Universal Product Code, the barcode symbology.<br>ACV is All-Commodity Volume, measured as a percentage from 0 to 100.</span>\")\n  ) |>\n  tab_footnote(\n    footnote = md(\"**Account H shows the highest positive growth (+37.90%)**, **Account D has the highest sales volume ($547,265)**, **Account J shows the largest decrease (-8.70%)**</span>\"),\n    locations = cells_title(groups = \"title\")\n  ) |>\n  tab_style(\n    style = cell_text(font = \"Arial\"),\n    locations = list(\n      cells_title(groups = c(\"title\", \"subtitle\")),\n      cells_column_labels(columns = everything()),\n      cells_body(columns = everything()),\n      cells_stub(rows = everything()),\n      cells_source_notes()\n    )\n  ) |>\n  tab_style(\n    style = cell_text(size = px(24)),\n    locations = cells_title(groups = \"title\")\n  ) |>\n  tab_style(\n    style = cell_text(size = px(16)),\n    locations = cells_title(groups = \"subtitle\")\n  ) |>\n  tab_style(\n    style = cell_text(size = px(14)),\n    locations = list(\n      cells_column_labels(columns = everything()), # Column labels\n      cells_body(columns = everything()),          # Data cells\n      cells_stub(rows = everything()),             # Row labels (stub)\n      cells_source_notes()                         # Source notes\n    )\n  )\n\n# Print the table\nsales_table\n```\n:::\n\n\n\n#### 7. Save\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### |-  plot image ----  \n\n# Save the table as a PNG\ngtsave(\n  data = sales_table, \n  path = \"data_visualizations/SWD Challenge/2024/\",\n  filename = \"swd_2024_10 - Ex_046.png\"\n)\n\n### |-  plot thumbnail----  \nmagick::image_read(here::here(\"data_visualizations/SWD Challenge/2024/swd_2024_10 - Ex_046.png\")) |> \n  magick::image_resize(geometry = \"400\") |> \n  magick::image_write(here::here(\"data_visualizations/SWD Challenge/2024/thumbnails/swd_2024_10 - Ex_046.png\"))\n```\n:::\n\n\n\n\n#### 8. Session Info\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsessioninfo::session_info(include_base = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n─ Session info ───────────────────────────────────────────────────────────────\n setting  value\n version  R version 4.4.1 (2024-06-14 ucrt)\n os       Windows 10 x64 (build 19045)\n system   x86_64, mingw32\n ui       RTerm\n language (EN)\n collate  English_United States.utf8\n ctype    English_United States.utf8\n tz       America/New_York\n date     2024-10-11\n pandoc   3.2 @ C:/Program Files/RStudio/resources/app/bin/quarto/bin/tools/ (via rmarkdown)\n\n─ Packages ───────────────────────────────────────────────────────────────────\n ! package     * version date (UTC) lib source\n V base        * 4.4.1   2024-04-24 [2] local (on disk 4.4.0)\n P cli           3.6.3   2024-06-21 [?] RSPM (R 4.4.0)\n P compiler      4.4.0   2024-04-24 [?] local\n P datasets    * 4.4.0   2024-04-24 [?] local\n P digest        0.6.37  2024-08-19 [?] RSPM (R 4.4.0)\n P evaluate      0.24.0  2024-06-10 [?] RSPM (R 4.4.0)\n P fastmap       1.2.0   2024-05-15 [?] RSPM (R 4.4.0)\n P graphics    * 4.4.0   2024-04-24 [?] local\n P grDevices   * 4.4.0   2024-04-24 [?] local\n P htmltools     0.5.8.1 2024-04-04 [?] RSPM (R 4.4.0)\n P htmlwidgets   1.6.4   2023-12-06 [?] CRAN (R 4.4.0)\n P jsonlite      1.8.8   2023-12-04 [?] RSPM (R 4.4.0)\n P knitr         1.48    2024-07-07 [?] RSPM (R 4.4.0)\n P methods     * 4.4.0   2024-04-24 [?] local\n   renv          1.0.3   2023-09-19 [1] CRAN (R 4.4.1)\n P rlang         1.1.4   2024-06-04 [?] RSPM (R 4.4.0)\n P rmarkdown     2.28    2024-08-17 [?] RSPM (R 4.4.0)\n   rstudioapi    0.16.0  2024-03-24 [1] RSPM (R 4.4.0)\n P sessioninfo   1.2.2   2021-12-06 [?] RSPM (R 4.4.0)\n P stats       * 4.4.0   2024-04-24 [?] local\n P tools         4.4.0   2024-04-24 [?] local\n P utils       * 4.4.0   2024-04-24 [?] local\n P xfun          0.47    2024-08-17 [?] RSPM (R 4.4.0)\n P yaml          2.3.10  2024-07-26 [?] RSPM (R 4.4.0)\n\n [1] C:/Users/poncest/OneDrive - Bristol Myers Squibb/RStudio/personal-website/renv/library/R-4.4/x86_64-w64-mingw32\n [2] C:/Users/poncest/AppData/Local/R/cache/R/renv/sandbox/R-4.4/x86_64-w64-mingw32/d6ee0ff8\n\n V ── Loaded and on-disk version mismatch.\n P ── Loaded and on-disk path mismatch.\n\n──────────────────────────────────────────────────────────────────────────────\n```\n\n\n:::\n:::\n\n\n\n\n#### 9. GitHub Repository\n\nI've linked my GitHub repository so you can check out the source code and data behind this visualization. You'll find the full Quarto document, data processing scripts, and other resources used for this project there. Feel free to explore how the analysis was done or even adapt the methods for your own projects.\n \n[Access the GitHub repository here](https://github.com/poncest/personal-website/)\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}