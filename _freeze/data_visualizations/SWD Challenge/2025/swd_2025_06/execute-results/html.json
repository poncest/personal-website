{
  "hash": "d8916aec66949c75f4d4c79a6375601f",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"From 17x Industry Benchmark to Optimized Efficiency: A Data-Driven Supplier Strategy\"\nsubtitle: \"Strategic Sourcing Analysis & Recommendations\"\ndescription: \"A strategic sourcing case study showcasing how to transform supplier performance data into compelling executive presentations. Uses SCQA framework and consistent color strategy to guide from $47M overspend problem to $1.3M savings solution.\"\nauthor: \"Steven Ponce\"\ndate: \"2025-05-02\" \ncategories: [\"SWDchallenge\", \"Data Visualization\", \"R Programming\", \"2025\"]\ntags: [\n  \"storytelling-with-data\", \"business-intelligence\", \"strategic-sourcing\",\n  \"procurement-analytics\", \"executive-presentation\", \"scqa-framework\",\n  \"data-storytelling\", \"cost-optimization\", \"supplier-analysis\",\"quadrant-analysis\",\n  \"scenario-planning\", \"ggplot2\", \"business-strategy\", \"decision-support\"\n]\nimage: \"thumbnails/swd_2025_06.png\"\nformat:\n  html:\n    toc: true\n    toc-depth: 5\n    code-link: true\n    code-fold: true\n    code-tools: true\n    code-summary: \"Show code\"\n    self-contained: true\neditor_options: \n  chunk_output_type: inline\nexecute: \n  freeze: true                                          \n  cache: true                                                   \n  error: false\n  message: false\n  warning: false\n  eval: true\n---\n\n### Original Business Case\n\n> This month's Storytelling with Data exercise aims: Imagine that you work for a regional medical group that manages care facilities across your state. As part of a team responsible for reviewing medical products and evaluating suppliers, your role involves shaping company-wide strategies and policies across various medical centers. Recently, you and your team completed a strategic sourcing project assessing four suppliers (Suppliers A, B, C, and D) for a critical product category (XYZ Products).\n>\n> You have access to robust data, including historical usage and costs by medical center, satisfaction metrics from physicians and patients, and cost projections. The options on the table range from a single-supplier company-side contract to allowing each medical center to continue managing its own purchasing, each with clear trade-offs.\n>\n> You've put together a deck with your team to present the findings to the decision-makers. Your goal is to drive discussion and help the group reach a decision on future strategy. Below are the slides you've prepared.\n\n![Original Slides](https://stwd-prod-static-back.s3.amazonaws.com/media/django-summernote/2025-05-29/3f6f1e40-d4fe-41b8-91b7-cb10e737397c.png){#fig-1}\n\nAdditional information can be found [HERE](https://community.storytellingwithdata.com/challenges/jun-2025-transform-a-graph)\n\n### Makeover Business Case\n\n![Four-slide strategic sourcing presentation showcasing a transformation from a 17x industry benchmark overspend to \\$1.3M in annual savings. **Slide 1** displays a bar chart comparing the current \\$50M spend with the industry standard of \\$2.8M. **Slide** 2 shows a quadrant analysis, identifying Supplier C as the optimal choice (green dot in the bottom-right quadrant, characterized by high performance and low cost). **Slide 3** presents three forecast scenarios through 2028, with a dual supplier strategy (green line) resulting in \\$1.27M in savings compared to the status quo (red line). The **title slide** introduces the data-driven supplier strategy approach.](swd_2025_06.png){#fig-2}\n\n### <mark> **Steps to Create these Graphic** </mark>\n\nNote: The charts were generated using R and ggplot. The slide deck was build using MS PowerPoint.\n\n#### 1. Load Packages & Setup\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: load\n\nif (!require(\"pacman\")) install.packages(\"pacman\")\npacman::p_load(\n  tidyverse,    # Easily Install and Load the 'Tidyverse'\n  ggtext,       # Improved Text Rendering Support for 'ggplot2'\n  showtext,     # Using Fonts More Easily in R Graphs\n  scales,       # Scale Functions for Visualization\n  glue          # Interpreted String Literals\n) \n\n### |- figure size ---- \ncamcorder::gg_record( \n  dir    = here::here(\"temp_plots\"), \n  device = \"png\",\n  width  = 8,\n  height = 8,\n  units  = \"in\",\n  dpi    = 320)\n```\n````\n:::\n\n\n#### 2. Read in the Data\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: read\n\nmarket_share_raw <- readxl::read_excel(\n  here::here(\"data/SWDchallenge/2025/Supplier Sourcing Data.xlsx\"),\n  sheet = \"market_share\",\n  skip = 2, trim_ws = TRUE\n) |>\n  janitor::clean_names()\n\ncost_over_time_raw <- readxl::read_excel(\n  here::here(\"data/SWDchallenge/2025/Supplier Sourcing Data.xlsx\"),\n  sheet = \"cost_over_time\",\n  skip = 2, trim_ws = TRUE\n) |>\n  janitor::clean_names()\n\nspend_by_facility_raw <- readxl::read_excel(\n  here::here(\"data/SWDchallenge/2025/Supplier Sourcing Data.xlsx\"),\n  sheet = \"by_facility\",\n  skip = 2, trim_ws = TRUE\n) |>\n  janitor::clean_names()\n\nevaluations_results_raw <- readxl::read_excel(\n  here::here(\"data/SWDchallenge/2025/Supplier Sourcing Data.xlsx\"),\n  sheet = \"results\",\n  skip = 2, trim_ws = TRUE\n) |>\n  janitor::clean_names()\n```\n````\n:::\n\n\n#### 3. Examine the Data\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: examine\n#| include: true\n#| eval: true\n#| results: 'hide'\n#| warning: false\n\nglimpse(market_share_raw)\nglimpse(cost_over_time_raw)\nglimpse(spend_by_facility_raw)\nglimpse(evaluations_results_raw)\n```\n````\n:::\n\n\n#### 4. Tidy Data\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: tidy\n\n# 1. Clean market share data ----\nmarket_share_clean <- market_share_raw |>\n  filter(supplier != \"Total Spend\") |>\n  mutate(\n    industry_share = as.numeric(industry),\n    us_share = as.numeric(us)\n  ) |>\n  select(supplier, industry_share, us_share)\n\n# Extract spend information separately\ntotal_spend <- tibble(\n  category = c(\"Industry\", \"Us\"),\n  spend = c(\"$2.8M\", \"~$50M\"),\n  spend_numeric = c(2.8, 50)\n)\n\n# 2. Clean cost over time data ----\nyears <- c(\"2022\", \"2023\", \"2024\", \"2025\", \"2026\", \"2027\", \"2028\")\n\n# Clean the supplier cost data (rows 2-6)\nsupplier_costs <- cost_over_time_raw |>\n  slice(2:6) |>\n  rename(supplier = x1) |>\n  mutate(\n    `2025` = case_when(\n      supplier == \"Supplier A\" ~ 163910,\n      supplier == \"Supplier B\" ~ 1481647,\n      supplier == \"Supplier C\" ~ 64041,\n      supplier == \"Supplier D\" ~ 1137230,\n      supplier == \"Total\" ~ 2846828,\n      TRUE ~ NA_real_\n    )\n  ) |>\n  rename(\n    `2022` = actual,\n    `2023` = x3,\n    `2024` = x4,\n    `2026` = forecast,\n    `2027` = x7,\n    `2028` = x8\n  ) |>\n  select(-x5) |>\n  pivot_longer(cols = -supplier, names_to = \"year\", values_to = \"cost\") |>\n  mutate(\n    year = as.numeric(year),\n    cost_millions = cost / 1000000,\n    period = case_when(\n      year <= 2025 ~ \"Actual\",\n      year >= 2026 ~ \"Forecast\",\n      TRUE ~ NA_character_\n    )\n  )\n\n# Extract scenario comparison data\nscenarios <- cost_over_time_raw |>\n  slice(8:10) |>\n  select(x5, forecast, x7, x8) |>\n  rename(\n    scenario = x5,\n    `2026` = forecast,\n    `2027` = x7,\n    `2028` = x8\n  ) |>\n  # Clean scenario names\n  mutate(\n    scenario = case_when(\n      str_detect(scenario, \"Status Quo\") ~ \"Status Quo\",\n      str_detect(scenario, \"Single\") ~ \"Single Supplier\",\n      str_detect(scenario, \"Dual\") ~ \"Dual Supplier\",\n      TRUE ~ scenario\n    )\n  ) |>\n  pivot_longer(cols = -scenario, names_to = \"year\", values_to = \"cost\") |>\n  mutate(\n    year = as.numeric(year),\n    cost_millions = cost / 1000000,\n    period = \"Forecast\"\n  ) |>\n  filter(!is.na(cost))\n\n\n# Clean the spend by facility data ----\nspend_by_facility_clean <- spend_by_facility_raw |>\n  filter(facility != \"Grand Total\") |>\n  pivot_longer(\n    cols = starts_with(\"supplier_\"),\n    names_to = \"supplier\",\n    values_to = \"spend\"\n  ) |>\n  mutate(\n    supplier = str_to_upper(str_remove(supplier, \"supplier_\")),\n    spend_thousands = spend / 1000\n  )\n\n# Extract totals separately\nfacility_totals <- spend_by_facility_raw |>\n  filter(facility != \"Grand Total\") |>\n  select(facility, grand_total) |>\n  mutate(total_thousands = grand_total / 1000)\n\nsupplier_totals <- spend_by_facility_raw |>\n  filter(facility == \"Grand Total\") |>\n  select(-facility, -grand_total) |>\n  pivot_longer(everything(), names_to = \"supplier\", values_to = \"total_spend\") |>\n  mutate(\n    supplier = str_to_upper(str_remove(supplier, \"supplier_\")),\n    total_millions = total_spend / 1000000\n  )\n\n# Clean the evaluations data ----\nevaluations_clean <- evaluations_results_raw |>\n  slice(2:6) |>\n  mutate(\n    metric = str_extract(test_metric, \"^\\\\d+\\\\. .+\"),\n    metric = str_remove(metric, \"^\\\\d+\\\\. \")\n  ) |>\n  rename(\n    supplier_a = suppliers,\n    supplier_b = x3,\n    supplier_c = x4,\n    supplier_d = x5\n  ) |>\n  select(metric, supplier_a:supplier_d) |>\n  mutate(across(supplier_a:supplier_d, as.numeric)) |>\n  pivot_longer(\n    cols = starts_with(\"supplier_\"),\n    names_to = \"supplier\",\n    values_to = \"score\"\n  ) |>\n  mutate(supplier = str_to_upper(str_remove(supplier, \"supplier_\")))\n\n# Extract averages separately\nsupplier_averages <- tribble(\n  ~supplier, ~avg_score,\n  \"A\", 3.64,\n  \"B\", 4.51,\n  \"C\", 3.72,\n  \"D\", 4.42\n)\n```\n````\n:::\n\n\n#### 5. Visualization Parameters\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: params\n\n# https://github.com/poncest/SWDchallenge/tree/main/2025/06_June\nsource(\"../../../../_CHALLENGES/SWDchallenge/2025/06_Jun/chart_1.R\")\nsource(\"../../../../_CHALLENGES/SWDchallenge/2025/06_Jun/chart_2.R\")\nsource(\"../../../../_CHALLENGES/SWDchallenge/2025/06_Jun/chart_3.R\")\n```\n````\n:::\n\n\n#### 6. Plot\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: plot\n\ncreate_benchmark_chart()\ncreate_supplier_performance_chart()\ncreate_strategic_scenario_chart()\n```\n````\n:::\n\n\n#### 7. Session Info\n\n::: {.callout-tip collapse=\"true\"}\n##### Expand for Session Info\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\nR version 4.4.1 (2024-06-14 ucrt)\nPlatform: x86_64-w64-mingw32/x64\nRunning under: Windows 11 x64 (build 22631)\n\nMatrix products: default\n\n\nlocale:\n[1] LC_COLLATE=English_United States.utf8 \n[2] LC_CTYPE=English_United States.utf8   \n[3] LC_MONETARY=English_United States.utf8\n[4] LC_NUMERIC=C                          \n[5] LC_TIME=English_United States.utf8    \n\ntime zone: America/New_York\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices datasets  utils     methods   base     \n\nother attached packages:\n [1] here_1.0.1      glue_1.8.0      scales_1.3.0    showtext_0.9-7 \n [5] showtextdb_3.0  sysfonts_0.8.9  ggtext_0.1.2    lubridate_1.9.3\n [9] forcats_1.0.0   stringr_1.5.1   dplyr_1.1.4     purrr_1.0.2    \n[13] readr_2.1.5     tidyr_1.3.1     tibble_3.2.1    ggplot2_3.5.1  \n[17] tidyverse_2.0.0 pacman_0.5.1   \n\nloaded via a namespace (and not attached):\n [1] gtable_0.3.6      xfun_0.49         htmlwidgets_1.6.4 tzdb_0.5.0       \n [5] vctrs_0.6.5       tools_4.4.0       generics_0.1.3    gifski_1.32.0-1  \n [9] fansi_1.0.6       pkgconfig_2.0.3   readxl_1.4.3      lifecycle_1.0.4  \n[13] farver_2.1.2      compiler_4.4.0    textshaping_0.4.0 munsell_0.5.1    \n[17] janitor_2.2.0     codetools_0.2-20  snakecase_0.11.1  htmltools_0.5.8.1\n[21] yaml_2.3.10       pillar_1.9.0      camcorder_0.1.0   magick_2.8.5     \n[25] tidyselect_1.2.1  digest_0.6.37     stringi_1.8.4     labeling_0.4.3   \n[29] rsvg_2.6.1        rprojroot_2.0.4   fastmap_1.2.0     grid_4.4.0       \n[33] colorspace_2.1-1  cli_3.6.4         magrittr_2.0.3    utf8_1.2.4       \n[37] withr_3.0.2       timechange_0.3.0  rmarkdown_2.29    cellranger_1.1.0 \n[41] ragg_1.3.3        hms_1.1.3         evaluate_1.0.1    knitr_1.49       \n[45] rlang_1.1.6       gridtext_0.1.5    Rcpp_1.0.13-1     xml2_1.3.6       \n[49] renv_1.0.3        svglite_2.1.3     rstudioapi_0.17.1 jsonlite_1.8.9   \n[53] R6_2.5.1          systemfonts_1.1.0\n```\n\n\n:::\n:::\n\n:::\n\n#### 9. GitHub Repository\n\n::: {.callout-tip collapse=\"true\"}\n##### Expand for GitHub Repo\n\nThe complete code for this analysis is available in [`swd_2025_06.qmd`](https://github.com/poncest/personal-website/tree/master/data_visualizations/SWD%20Challenge/2025/swd_2025_06.qmd). For the full repository, [click here](https://github.com/poncest/personal-website/).\n:::\n\n#### 10. References\n\n::: {.callout-tip collapse=\"true\"}\n##### Expand for References\n\nOriginal Slides:\n\n-   Document: [XYZ Products: Strategic Sourcing Plan Document](https://docs.google.com/presentation/d/1zqxsqSE9hfAGQorzDLyVsBU3gltY4Cz1/edit?slide=id.p1#slide=id.p1)\n\nData:\n\n-   Data: [Source Data](https://docs.google.com/spreadsheets/d/12YGQSg6C50wE-QI8L7F9Ghpeu-sNXH4U/edit?gid=2041126443#gid=2041126443)\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}