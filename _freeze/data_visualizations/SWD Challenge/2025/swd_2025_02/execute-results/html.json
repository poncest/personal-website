{
  "hash": "4a728795362b096ba7fb02d162608671",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Five Major U.S. Fresh Vegetable Crops (2000-2022)\"\nsubtitle: \"A streamgraph showing harvested acres across different vegetables\"\ndescription: \"An exploration of USDA agricultural data using streamgraphs to visualize production trends across five major vegetable crops, highlighting the dominance of sweet corn and tomatoes in U.S. fresh market production from 2000 to 2022.\"\nauthor: \"Steven Ponce\"\ndate: \"2025-02-01\"\ndate-modified: last-modified\ncategories: [\"SWDchallenge\", \"Data Visualization\", \"R Programming\", \"2025\"]\ntags: [\n  \"streamgraph\",\n  \"agricultural data\",\n  \"USDA statistics\",\n  \"ggplot2\",\n  \"data storytelling\",\n  \"vegetable production\",\n  \"time series\",\n  \"area charts\",\n  \"crop analysis\",\n  \"tidyverse\"\n]\nimage: \"thumbnails/swd_2025_02.png\"\nformat:\n  html:\n    toc: true\n    toc-depth: 5\n    code-link: true\n    code-fold: true\n    code-tools: true\n    code-summary: \"Show code\"\n    self-contained: true\neditor_options: \n  chunk_output_type: inline\nexecute: \n  freeze: true                                          \n  cache: true                                                   \n  error: false\n  message: false\n  warning: false\n  eval: true\nshare:\n  permalink: \"https://stevenponce.netlify.app/data_visualizations/SWD Challenge/2025/swd_2025_02.html\" \n  description: \"Discover how U.S. fresh vegetable production evolved over two decades through an innovative streamgraph visualization, revealing significant growth in sweet corn and tomato cultivation after 2010.\"\n  linkedin: true\n  twitter: true\n  email: true\n---\n\n\n\n![A streamgraph visualization showing harvested acres of five major U.S. fresh vegetable crops from 2000 to 2022. The graph reveals layers of production with Sweet Corn and Tomatoes dominating at over 60K acres each by 2020. Smaller production areas are shown for Squash, Spinach, and Potatoes. The visualization uses color-coding and connecting lines with dots to identify each vegetable type. An upward trend in overall production is notable after 2010.](swd_2025_02.png){#fig-1}\n\n\n### <mark> __Steps to Create this Graphic__ </mark>\n\n#### 1. Load Packages & Setup \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nif (!require(\"pacman\")) install.packages(\"pacman\")\npacman::p_load(\n  tidyverse,         # Easily Install and Load the 'Tidyverse'\n  ggtext,            # Improved Text Rendering Support for 'ggplot2'\n  showtext,          # Using Fonts More Easily in R Graphs\n  scales,            # Scale Functions for Visualization\n  glue,              # Interpreted String Literals\n  here,              # A Simpler Way to Find Your Files\n  janitor,           # Simple Tools for Examining and Cleaning Dirty Data\n  skimr,             # Compact and Flexible Summaries of Data\n  camcorder,         # Record Your Plot History\n  ggstream           # Create Streamplots in 'ggplot2'\n) \n\n# Source utility functions\nsuppressMessages(source(here::here(\"R/utils/fonts.R\")))\nsource(here::here(\"R/utils/social_icons.R\"))\nsource(here::here(\"R/utils/image_utils.R\"))\nsource(here::here(\"R/themes/base_theme.R\"))\n```\n:::\n\n\n\n#### 2. Read in the Data \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvegatables_raw <- read_csv(\n  here::here(\"data/NASS - 52F3230D-BDBF-3D09-902C-7125CCE63C9F.csv\")\n  ) |> \n  clean_names() \n```\n:::\n\n\n\n#### 3. Examine the Data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(vegatables_raw)\nskim(vegatables_raw)\n```\n:::\n\n\n\n#### 4. Tidy Data \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvegatables_clean <- vegatables_raw |>\n  # Select only the relevant columns \n  select(year, commodity, value) |>\n  # Handle special codes \n  filter(\n    value != \"(D)\",  # Withheld to avoid disclosing data\n    value != \"(Z)\",  # Less than half unit\n    value != \"(S)\",  # Insufficient reports\n    value != \"(NA)\", # Not available\n    value != \"(X)\"   # Not applicable\n  ) |>\n  mutate(\n    value = as.numeric(value),\n    # Format commodity names\n    commodity = case_when(\n      commodity == \"SWEET CORN\" ~ \"Sweet Corn\",\n      commodity == \"POTATOES\" ~ \"Potatoes\",\n      commodity == \"TOMATOES\" ~ \"Tomatoes\",\n      TRUE ~ str_to_title(commodity)\n    )\n  ) |>\n  # Remove any remaining NA values \n  filter(!is.na(value)) |>\n  # Group and summarize\n  group_by(year, commodity) |>\n  summarise(total_acres = sum(value, na.rm = TRUE), .groups = 'drop') |> \n  ungroup()\n\n\n# Tibble for manual label positions\nlabel_positions <- tibble(\n  commodity = c(\"Potatoes\", \"Spinach\", \"Squash\", \"Sweet Corn\", \"Tomatoes\"),\n  # X positions for vertical alignment\n  x_position = c(2002, 2005, 2008, 2011, 2013),\n  # Label positions - extending beyond the streams\n  y_position = c(25000, 35000, 45000, 60000, -60000),  \n  # Stream connection points - where the lines should touch the streams\n  y_start = c(19000, 10000, 8000, 8000, -30000)    \n)\n```\n:::\n\n\n\n\n#### 5. Visualization Parameters \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### |-  plot aesthetics ----\n# Get base colors with custom palette\ncolors <- get_theme_colors(palette = c(\n  \"Potatoes\"   = \"#C4A484\",   \n  \"Spinach\"    = \"#165B33\",     \n  \"Squash\"     = \"#FFB01F\",      \n  \"Sweet Corn\" = \"#F7E03D\",   \n  \"Tomatoes\"   = \"#E41B17\"    \n  )\n)\n\n### |-  titles and caption ----\ntitle_text   <- str_glue(\"Five Major U.S. Fresh Vegetable Crops (2000-2022)\") \nsubtitle_text <- str_glue(\"A streamgraph showing harvested acres across different vegetables\")\n\n# Create caption\ncaption_text <- create_swd_caption(\n    year = 2025,\n    month = \"Feb\",\n    source_text = \"Data Source: USDA Agricultural Statistics Service\"\n  )\n\n\n# |- fonts ----\nsetup_fonts()\nfonts <- get_font_families()\n\n### |-  plot theme ----\n# Start with base theme\nbase_theme <- create_base_theme(colors)\n\n# Add weekly-specific theme elements\nweekly_theme <- extend_weekly_theme(\n  base_theme,\n  theme(\n    # Text styling \n    plot.title = element_text(face = \"bold\", size = rel(1.14), margin = margin(b = 10)),\n    plot.subtitle = element_text(color = colors$text, size = rel(0.78), margin = margin(b = 20)),\n    \n    # Axis formatting\n    axis.title   = element_text(color = colors$text, face = \"bold\", size = rel(0.72)),\n    axis.text    = element_text(color = colors$text, size = rel(0.9)),\n    axis.line.x  = element_line(color = \"#252525\", linewidth = .3),\n    axis.ticks.x = element_line(color = colors$text),  \n\n    # Grid customization\n    panel.grid.minor   = element_blank(),\n    panel.grid.major   = element_blank(),\n    panel.grid.major.y = element_line(color = \"grey85\", linewidth = .4),\n    \n    # Plot margins \n    plot.margin = margin(t = 10, r = 20, b = 10, l = 20),\n    \n  )\n)\n\n# Set theme\ntheme_set(weekly_theme)\n```\n:::\n\n\n\n\n#### 6. Plot\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\np <- ggplot(vegatables_clean, \n       aes(x = year, \n           y = total_acres, \n           fill = commodity, \n           group = commodity)) +\n  geom_stream(\n    type = \"mirror\",\n    bw = 0.85,\n    extra_span = 0.2\n  ) +\n  # Add vertical connecting lines\n  geom_segment(\n    data = label_positions,\n    aes(\n      x = x_position,\n      y = y_start,\n      xend = x_position,\n      yend = y_position\n    ),\n    color = colors$text,\n    linewidth = 0.3,\n    linetype = \"solid\"\n  ) +\n  # Add points at stream intersections\n  geom_point(\n    data = label_positions,\n    aes(\n      x = x_position,\n      y = y_start\n    ),\n    color = colors$text,\n    size = 1.5\n  ) +\n  # Add labels\n  geom_text(\n    data = label_positions,\n    aes(\n      x = x_position,\n      y = y_position,\n      label = commodity\n    ),\n    size = 4.5,\n    fontface = \"bold\",\n    color = colors$text,\n    vjust = ifelse(label_positions$y_position < 0, 1.2, -0.2)  \n  ) +\n  # Add trend annotation\n  annotate(\n    \"text\", \n    x = 1999, \n    y = -53000, \n    label = str_glue(\"Overall vegetable production grew\\n\n                     significantly after 2010,dominated\\n\n                     by sweet corn and tomatoes with\\n\n                     over 60K acres each\"),\n    lineheight = 0.55,\n    size = 4,\n    fontface = \"italic\",\n    hjust = 0\n  ) +\n  # Scales\n  scale_fill_manual(values = colors$palette) +\n  scale_x_continuous(\n    breaks = seq(2000, 2025, 5),\n    expand = c(0.02, 0)\n  ) +\n  scale_y_continuous(\n    labels = scales::label_number(scale = 1/1000, suffix = \"K\"),\n    expand = c(0.02, 0),\n    position = \"right\",\n    sec.axis = dup_axis(  # Add secondary axis for better title placement\n      name = NULL,\n      labels = NULL\n    )\n  ) +\n  # Labs\n  labs(\n    x = \"Year\",\n    y = NULL,\n    title = title_text,\n    subtitle = subtitle_text,\n    caption = caption_text,\n  ) +\n  # Add custom y-axis title using annotate\n  annotate(\n    \"text\",\n    x = 1998,  \n    y = 0,     \n    label = \"Acres Harvested\\n(Thousands)\",\n    angle = 90,\n    fontface = \"bold\", \n    size = 3.5,\n    vjust = 0.5,\n    hjust = 0.5,\n    color = \"gray30\"\n  ) + \n  # Theme\n  theme(\n    plot.title = element_text(\n      size = rel(1.7),\n      family = fonts$title,\n      face   = \"bold\",\n      color  = colors$title,\n      lineheight = 1.1,\n      margin = margin(t = 5, b = 5)\n    ),\n    plot.subtitle = element_text(\n      size = rel(0.95),\n      family = fonts$subtitle,\n      color  = colors$subtitle,\n      lineheight = 1.1,\n      margin = margin(t = 5, b = 20)\n    ),\n    plot.caption = element_markdown(\n      size = rel(0.65),\n      family = fonts$caption,\n      color  = colors$caption,\n      lineheight = 1.1,\n      hjust = 0.5,\n      halign = 0.5,\n      margin = margin(t = 15, b = 5)\n    ),\n  )\n```\n:::\n\n\n\n#### 7. Save\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### |-  plot image ----  \n\nsource(here::here(\"R/image_utils.R\"))\nsave_plot(\n  p, type = 'swd', year = 2025, month = 02, \n  width = 8, height = 8\n  )\n```\n:::\n\n\n\n\n#### 8. Session Info\n\n::: {.callout-tip collapse=\"true\"}\n##### Expand for Session Info\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\nR version 4.4.1 (2024-06-14 ucrt)\nPlatform: x86_64-w64-mingw32/x64\nRunning under: Windows 11 x64 (build 22631)\n\nMatrix products: default\n\n\nlocale:\n[1] LC_COLLATE=English_United States.utf8 \n[2] LC_CTYPE=English_United States.utf8   \n[3] LC_MONETARY=English_United States.utf8\n[4] LC_NUMERIC=C                          \n[5] LC_TIME=English_United States.utf8    \n\ntime zone: America/New_York\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices datasets  utils     methods   base     \n\nother attached packages:\n [1] ggstream_0.1.0  camcorder_0.1.0 skimr_2.1.5     janitor_2.2.0  \n [5] here_1.0.1      glue_1.8.0      scales_1.3.0    showtext_0.9-7 \n [9] showtextdb_3.0  sysfonts_0.8.9  ggtext_0.1.2    lubridate_1.9.3\n[13] forcats_1.0.0   stringr_1.5.1   dplyr_1.1.4     purrr_1.0.2    \n[17] readr_2.1.5     tidyr_1.3.1     tibble_3.2.1    ggplot2_3.5.1  \n[21] tidyverse_2.0.0 pacman_0.5.1   \n\nloaded via a namespace (and not attached):\n [1] gtable_0.3.6      xfun_0.49         htmlwidgets_1.6.4 tzdb_0.4.0       \n [5] vctrs_0.6.5       tools_4.4.0       generics_0.1.3    curl_6.0.0       \n [9] parallel_4.4.0    gifski_1.32.0-1   fansi_1.0.6       pkgconfig_2.0.3  \n[13] lifecycle_1.0.4   farver_2.1.2      compiler_4.4.0    textshaping_0.4.0\n[17] munsell_0.5.1     repr_1.1.7        codetools_0.2-20  snakecase_0.11.1 \n[21] htmltools_0.5.8.1 yaml_2.3.10       crayon_1.5.3      pillar_1.9.0     \n[25] magick_2.8.5      commonmark_1.9.2  tidyselect_1.2.1  digest_0.6.37    \n[29] stringi_1.8.4     labeling_0.4.3    rsvg_2.6.1        rprojroot_2.0.4  \n[33] fastmap_1.2.0     grid_4.4.0        colorspace_2.1-1  cli_3.6.3        \n[37] magrittr_2.0.3    base64enc_0.1-3   utf8_1.2.4        withr_3.0.2      \n[41] bit64_4.5.2       timechange_0.3.0  rmarkdown_2.29    bit_4.5.0        \n[45] ragg_1.3.3        hms_1.1.3         evaluate_1.0.1    knitr_1.49       \n[49] markdown_1.13     rlang_1.1.4       gridtext_0.1.5    Rcpp_1.0.13-1    \n[53] xml2_1.3.6        renv_1.0.3        svglite_2.1.3     rstudioapi_0.17.1\n[57] vroom_1.6.5       jsonlite_1.8.9    R6_2.5.1          systemfonts_1.1.0\n```\n\n\n:::\n:::\n\n\n:::\n\n\n#### 9. GitHub Repository\n::: {.callout-tip collapse=\"true\"}\n##### Expand for GitHub Repo\n \nThe complete code for this analysis is available in [`swd_2025_02.qmd`](https://github.com/poncest/personal-website/tree/master/data_visualizations/SWD%20Challenge/2025/02_Feb/swd_2025_02.qmd).\nFor the full repository, [click here](https://github.com/poncest/personal-website/).\n:::\n\n#### 10. References\n::: {.callout-tip collapse=\"true\"}\n##### Expand for References\n \nData Sources:\n\n- USDA National Agricultural Statistics Service: [`USDA National Agricultural Statistics Service`](https://www.nass.usda.gov/Data_and_Statistics/)\n\n- USDA National Agricultural Statistics Service (Quick Stats): [`USDA National Agricultural Statistics Service (Quick Stats`](https://quickstats.nass.usda.gov/results/3A29A7C1-6D8D-347A-908F-89E54126430F)\n\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}