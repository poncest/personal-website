{
  "hash": "00ef7a9de07c791e584d40a511edd60a",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Health Funding Surges While Education Slips\"\nsubtitle: \"Funder priorities, 2020 -> 2025\"\ndescription: \"An arrow chart redesign avoiding the spaghetti graph problem, showing how non-profit funder support shifted across five categories over five years.\"\nauthor: \"Steven Ponce\"\ndate: \"2025-10-01\" \ncategories: [\"SWDchallenge\", \"Data Visualization\", \"R Programming\", \"2025\"]\ntags: [\n  \"arrow chart\",\n  \"dumbbell chart alternative\",\n  \"ggplot2\",\n  \"data storytelling\",\n  \"non-profit funding\",\n  \"chart redesign\",\n  \"avoiding spaghetti graphs\",\n  \"before and after comparison\",\n  \"slope chart\",\n  \"change over time\"\n]\nimage: \"thumbnails/swd_2025_10.png\"\nformat:\n  html:\n    toc: true\n    toc-depth: 5\n    code-link: true\n    code-fold: true\n    code-tools: true\n    code-summary: \"Show code\"\n    self-contained: true\neditor_options: \n  chunk_output_type: inline\nexecute: \n  freeze: true                                          \n  cache: true                                                   \n  error: false\n  message: false\n  warning: false\n  eval: true\n---\n\n### Original\n\nThis month's Storytelling with Data challenge aims to avoid the spaghetti graph. Line graphs are generally a great way to show data over time. However, when there are too many series in a single chart, it can quickly become what I refer to as a “spaghetti graph”—a tangled mess of overlapping lines that’s hard to read. How would you redesign the following visual to avoid the spaghetti graph? \n\n![Original chart](https://stwd-prod-static-back.s3.amazonaws.com/media/django-summernote/2025-09-28/3d5b7a75-a94e-475d-b6eb-e1bec8ba6946.png){#fig-1}\n\nAdditional information can be found [HERE](https://community.storytellingwithdata.com/challenges/aug-2025-avoid-the-spaghetti-graph)\n\n### Makeover\n\n![Arrow chart showing changes in non-profit funder support from 2020 to 2025. Health increased by 8% to 75%, while Arts & Culture grew by 23% to 43%. Education declined by 13% to 60%, Human Services fell by 5% to 55%, and Other dropped by 23% to 30%. A dashed vertical line marks the 2025 median at 55%.](swd_2025_10.png){#fig-4}\n\n### <mark> **Steps to Create this Graphic** </mark>\n\n#### 1. Load Packages & Setup\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: load\n\nif (!require(\"pacman\")) install.packages(\"pacman\")\npacman::p_load(\n  tidyverse,  # Easily Install and Load the 'Tidyverse'\n  ggtext,     # Improved Text Rendering Support for 'ggplot2'\n  showtext,   # Using Fonts More Easily in R Graphs\n  janitor,    # Simple Tools for Examining and Cleaning Dirty Data\n  scales,     # Scale Functions for Visualization\n  glue        # Interpreted String Literals\n) \n\n### |- figure size ---- \ncamcorder::gg_record( \n dir    = here::here(\"temp_plots\"),\n  device = \"png\",\n  width  =  10,\n  height =  8,\n  units  = \"in\",\n  dpi    = 320\n)\n\n# Source utility functions\nsuppressMessages(source(here::here(\"R/utils/fonts.R\")))\nsource(here::here(\"R/utils/social_icons.R\"))\nsource(here::here(\"R/utils/image_utils.R\"))\nsource(here::here(\"R/themes/base_theme.R\"))\n```\n````\n:::\n\n\n#### 2. Read in the Data\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: read\n\nraw_data <- readxl::read_excel(\n  here::here(\"data/SWDchallenge/2025/SWDchallenge OCT2025.xlsx\"),\n  range = \"C7:I12\") |> \n  clean_names()\n```\n````\n:::\n\n\n#### 3. Examine the Data\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: examine\n#| include: true\n#| eval: true\n#| results: 'hide'\n#| warning: false\n\nglimpse(raw_data)\n```\n````\n:::\n\n\n#### 4. Tidy Data\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: tidy\n\narrow_data <- raw_data |>\n  rename(category = x1) |>\n  select(category, y2020 = x2020, y2025 = x2025) |>\n  mutate(\n    category = str_to_title(category),\n    change = y2025 - y2020,\n    change_pct = change,\n    direction = if_else(change > 0, \"Growth\", \"Decline\")\n  ) |>\n  arrange(desc(y2025))\n\narrow_data <- arrow_data |>\n  mutate(\n    category = factor(category, levels = rev(category)),\n    lab_2020 = label_percent(accuracy = 1)(y2020),\n    lab_2025 = label_percent(accuracy = 1)(y2025),\n    lab_delta = if_else(change >= 0,\n      paste0(\"+\", label_percent(accuracy = 1)(change)),\n      label_percent(accuracy = 1)(change)\n    ),\n    x_mid = (y2020 + y2025) / 2,\n    hjust_2020 = if_else(y2020 <= y2025, 1.15, -0.15),\n    hjust_2025 = if_else(y2020 <= y2025, -0.15, 1.15)\n  )\n\nmedian_2025 <- median(arrow_data$y2025, na.rm = TRUE)\nn_cats <- nrow(arrow_data)\nmax_x <- max(arrow_data$y2020, arrow_data$y2025, na.rm = TRUE)\n```\n````\n:::\n\n\n#### 5. Visualization Parameters\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: params\n\n### |-  plot aesthetics ----\ncolors <- get_theme_colors(\n  palette = c(\n    `TRUE` = \"#1976D2\",   \n    `FALSE` = \"#F57C00\"\n  )\n)\n\n### |-  titles and caption ----\ntitle_text <- str_glue(\"Health Funding Surges While Education Slips\")\nsubtitle_text <- str_glue(\n  \"Funder priorities, 2020 -> 2025 (dashed = 2025 median)\\n\",\n  \"Percentages can exceed 100% because funders choose multiple categories • Data self-reported by funders\"\n  )\n\n# Create caption\ncaption_text <- create_swd_caption(\n  year = 2025,\n  month = \"Oct\",\n  source_text =  \"Storytelling with Data: A Data Visualization Guide for Business Professionals\"\n)\n\n### |-  fonts ----\nsetup_fonts()\nfonts <- get_font_families()\n\n### |-  plot theme ----\n\n# Start with base theme\nbase_theme <- create_base_theme(colors)\n\n# Add weekly-specific theme elements\nweekly_theme <- extend_weekly_theme(\n  base_theme,\n  theme(\n    # Text styling \n    plot.title = element_text(face = \"bold\", family = fonts$title, color = colors$title, size = rel(1.14), margin = margin(b = 10)),\n    plot.subtitle = element_text(family = fonts$subtitle, color = colors$text, size = rel(0.78), margin = margin(b = 20)),\n    \n    # Axis elements\n    axis.title = element_text(color = colors$text, size = rel(0.8)),\n    axis.text = element_text(color = colors$text, size = rel(0.7)),\n    \n    # Grid elements\n    panel.grid.minor = element_blank(),\n    panel.grid.major = element_line(color = \"grey95\", linewidth = 0.1),\n    \n\n    # Legend elements\n    legend.position = \"plot\",\n    legend.title = element_text(family = fonts$text, size = rel(0.8)),\n    legend.text = element_text(family = fonts$text, size = rel(0.7)),\n    \n    # Plot margins \n    plot.margin = margin(t = 10, r = 15, b = 10, l = 15),\n  )\n)\n\n# Set theme\ntheme_set(weekly_theme)\n```\n````\n:::\n\n\n#### 6. Plot\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: plot\n\np <- ggplot(arrow_data, aes(y = category)) +\n\n  # Geoms\n  geom_vline(\n    xintercept = median_2025, linetype = \"dashed\",\n    color = \"gray35\", linewidth = 0.7\n  ) +\n\n  # median tag\n  annotate(\n    \"label\",\n    x = median_2025, y = n_cats + 0.35,\n    label = paste0(\"2025 median: \", label_percent(accuracy = 1)(median_2025)),\n    size = 3.2, fontface = \"bold\",\n    label.size = 0, fill = \"white\", alpha = 0.95, color = \"gray15\"\n  ) +\n\n  # arrows\n  geom_segment(\n    aes(x = y2020, xend = y2025, yend = category, color = change > 0),\n    linewidth = 1.4, lineend = \"round\",\n    arrow = arrow(length = unit(0.28, \"cm\"), type = \"closed\")\n  ) +\n\n  # arrows labels\n  geom_text(aes(x = y2020, label = lab_2020, hjust = hjust_2020),\n    size = 3.2, color = \"gray35\", fontface = \"bold\"\n  ) +\n  geom_text(aes(x = y2025, label = lab_2025, hjust = hjust_2025, color = change > 0),\n    size = 3.2, fontface = \"bold\", show.legend = FALSE\n  ) +\n  geom_text(aes(x = x_mid, label = lab_delta, color = change > 0),\n    vjust = -0.9, size = 3.3, fontface = \"bold\", show.legend = FALSE\n  ) +\n\n  # Scales\n  scale_x_continuous(\n    labels = label_percent(accuracy = 1),\n    limits = c(0, max_x + 0.12),\n    breaks = seq(0, 0.90, by = 0.10),\n    expand = expansion(mult = c(0.01, 0.07))\n  ) +\n  scale_y_discrete() +\n  scale_color_manual(values = colors$palette) +\n  coord_cartesian(clip = \"off\") +\n\n  # Labs\n  labs(\n    title = title_text,\n    subtitle = subtitle_text,\n    x = \"Percent of funders\", y = NULL,\n    caption = caption_text\n  ) +\n\n  # Theme\n  theme(\n    panel.grid.major.y = element_blank(),\n    panel.grid.minor = element_blank(),\n    panel.grid.major.x = element_line(color = \"gray93\", linewidth = 0.4),\n    plot.title = element_text(\n      size = rel(1.8),\n      family = fonts$title,\n      face = \"bold\",\n      color = colors$title,\n      lineheight = 1.1,\n      margin = margin(t = 5, b = 5)\n    ),\n    plot.subtitle = element_text(\n      size = rel(0.95),\n      family = fonts$subtitle,\n      color = alpha(colors$subtitle, 0.9),\n      lineheight = 1.2,\n      margin = margin(t = 5, b = 10)\n    ),\n    plot.caption = element_markdown(\n      size = rel(0.65),\n      family = fonts$caption,\n      color = colors$caption,\n      hjust = 0.5,\n      margin = margin(t = 10)\n    )\n  )\n```\n````\n:::\n\n\n#### 7. Save\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: save\n\n### |-  plot image ----  \nsave_plot(\n  p, \n  type = 'swd', \n  year = 2025, \n  month = 10, \n  width  = 10,\n  height = 8,\n  )\n```\n````\n:::\n\n\n#### 8. Session Info\n\n::: {.callout-tip collapse=\"true\"}\n##### Expand for Session Info\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\nR version 4.4.1 (2024-06-14 ucrt)\nPlatform: x86_64-w64-mingw32/x64\nRunning under: Windows 11 x64 (build 22631)\n\nMatrix products: default\n\n\nlocale:\n[1] LC_COLLATE=English_United States.utf8 \n[2] LC_CTYPE=English_United States.utf8   \n[3] LC_MONETARY=English_United States.utf8\n[4] LC_NUMERIC=C                          \n[5] LC_TIME=English_United States.utf8    \n\ntime zone: America/New_York\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices datasets  utils     methods   base     \n\nother attached packages:\n [1] here_1.0.1      glue_1.8.0      scales_1.3.0    janitor_2.2.0  \n [5] showtext_0.9-7  showtextdb_3.0  sysfonts_0.8.9  ggtext_0.1.2   \n [9] lubridate_1.9.3 forcats_1.0.0   stringr_1.5.1   dplyr_1.1.4    \n[13] purrr_1.0.2     readr_2.1.5     tidyr_1.3.1     tibble_3.2.1   \n[17] ggplot2_3.5.1   tidyverse_2.0.0 pacman_0.5.1   \n\nloaded via a namespace (and not attached):\n [1] gtable_0.3.6      xfun_0.49         htmlwidgets_1.6.4 tzdb_0.5.0       \n [5] vctrs_0.6.5       tools_4.4.0       generics_0.1.3    curl_6.0.0       \n [9] gifski_1.32.0-1   fansi_1.0.6       pkgconfig_2.0.3   readxl_1.4.3     \n[13] rematch_2.0.0     lifecycle_1.0.4   compiler_4.4.0    farver_2.1.2     \n[17] textshaping_0.4.0 munsell_0.5.1     codetools_0.2-20  snakecase_0.11.1 \n[21] htmltools_0.5.8.1 yaml_2.3.10       pillar_1.9.0      camcorder_0.1.0  \n[25] magick_2.8.5      commonmark_1.9.2  tidyselect_1.2.1  digest_0.6.37    \n[29] stringi_1.8.4     rsvg_2.6.1        rprojroot_2.0.4   fastmap_1.2.0    \n[33] grid_4.4.0        colorspace_2.1-1  cli_3.6.4         magrittr_2.0.3   \n[37] utf8_1.2.4        withr_3.0.2       timechange_0.3.0  rmarkdown_2.29   \n[41] cellranger_1.1.0  ragg_1.3.3        hms_1.1.3         evaluate_1.0.1   \n[45] knitr_1.49        markdown_1.13     rlang_1.1.6       gridtext_0.1.5   \n[49] Rcpp_1.0.13-1     xml2_1.3.6        renv_1.0.3        svglite_2.1.3    \n[53] rstudioapi_0.17.1 jsonlite_1.8.9    R6_2.5.1          systemfonts_1.1.0\n```\n\n\n:::\n:::\n\n:::\n\n#### 9. GitHub Repository\n\n::: {.callout-tip collapse=\"true\"}\n##### Expand for GitHub Repo\n\nThe complete code for this analysis is available in [`swd_2025_10.qmd`](https://github.com/poncest/personal-website/tree/master/data_visualizations/SWD%20Challenge/2025/swd_2025_10.qmd). For the full repository, [click here](https://github.com/poncest/personal-website/).\n:::\n\n#### 10. References\n\n::: {.callout-tip collapse=\"true\"}\n##### Expand for References\n\nData Sources:\n\n-   Storytelling with Data: A Data Visualization Guide for Business Professionals, 10th Anniversary Edition : [Storytelling with Data: A Data Visualization Guide for Business Professionals, 10th Anniversary Edition ](https://docs.google.com/spreadsheets/d/1Fpd8uL6gZc5d-svAZltXjU1QgxZA8Ocw/edit?rtpof=true&sd=true)\n\n\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}