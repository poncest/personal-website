{
  "hash": "2bc52289a0896cf32d0c6c61d85dbfd9",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"London Underground Temperature Analysis (2013-2023)\"\nsubtitle: \"Central and Bakerloo lines run consistently hottest • Sub-Surface lines stay coolest year-round\"\ndescription: \"A MakeoverMonday data visualization analyzing 10 years of London Underground temperature data. Using unified warm color palettes, this dual-chart approach reveals how Central and Bakerloo lines consistently run 5-10°C hotter than Sub-Surface lines, with summer creating the starkest temperature differences across the network.\"\nauthor: \"Steven Ponce\"\ndate: \"2025-07-23\" \ncategories: [\"MakeoverMonday\", \"Data Visualization\", \"R Programming\", \"2025\"]   \ntags: [\n  \"london-underground\",\n  \"temperature-analysis\", \n  \"heatmap\",\n  \"ridgeline-plot\",\n  \"ggplot2\",\n  \"ggridges\", \n  \"patchwork\",\n  \"warm-colors\",\n  \"public-transport\",\n  \"seasonal-patterns\",\n  \"tfl-data\",\n  \"unified-color-palette\",\n  \"horizontal-scanning\",\n  \"data-storytelling\"\n]\nimage: \"thumbnails/mm_2025_30.png\"\nformat:\n  html:\n    toc: true\n    toc-depth: 5\n    code-link: true\n    code-fold: true\n    code-tools: true\n    code-summary: \"Show code\"\n    self-contained: true\n    theme: \n      light: [flatly, assets/styling/custom_styles.scss]\n      dark: [darkly, assets/styling/custom_styles_dark.scss]\neditor_options: \n  chunk_output_type: inline\nexecute: \n  freeze: true                                                \n  cache: true                                                 \n  error: false\n  message: false\n  warning: false\n  eval: true\n---\n\n\n\n### Original\n\nThe original visualization __HAS YOUR TUBE LINE GOT HOTTER OVER THE PAST 10 YEARS? Average temperatures on seven London Underground lines for July-August, 2023 to 2014 (°C)__ comes from [Transport for London (TfL)](https://www.dailymail.co.uk/sciencetech/article-13739705/london-underground-hottest-line.html)\n\n![Original visualization](https://raw.githubusercontent.com/poncest/MakeoverMonday/refs/heads/master/2025/Week_30/original_chart.png)\n\n### Makeover\n\n![Two-panel chart showing London Underground temperature data from 2013-2023. Left panel: heatmap displaying monthly temperature patterns for 8 tube lines, with warm colors indicating higher temperatures. Right panel: ridgeline plot showing temperature distributions for each line. Both charts use unified warm color palette (dark brown for cool, golden yellow for hot temperatures). Bakerloo and Victoria lines show consistently highest temperatures (reaching 30°C+), while Sub-Surface lines remain coolest year-round (rarely exceeding 25°C). Summer months (June-August) show greatest temperature variation between lines.](mm_2025_30.png){#fig-1}\n\n### <mark> **Steps to Create this Graphic** </mark>\n\n#### 1. Load Packages & Setup\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: load\n#| warning: false\n#| message: false\n#| results: \"hide\"\n\n## 1. LOAD PACKAGES & SETUP ----\nsuppressPackageStartupMessages({\n  if (!require(\"pacman\")) install.packages(\"pacman\")\n  pacman::p_load(\n  tidyverse,      # Easily Install and Load the 'Tidyverse'\n  ggtext,         # Improved Text Rendering Support for 'ggplot2'\n  showtext,       # Using Fonts More Easily in R Graphs\n  scales,         # Scale Functions for Visualization\n  glue,           # Interpreted String Literals\n  patchwork,      # The Composer of Plots\n  ggridges        # Ridgeline Plots in 'ggplot2'\n  )\n})\n\n### |- figure size ----\ncamcorder::gg_record(\n    dir    = here::here(\"temp_plots\"),\n    device = \"png\",\n    width  =  12,\n    height =  8,\n    units  = \"in\",\n    dpi    = 320\n)\n\n# Source utility functions\nsuppressMessages(source(here::here(\"R/utils/fonts.R\")))\nsource(here::here(\"R/utils/social_icons.R\"))\nsource(here::here(\"R/utils/image_utils.R\"))\nsource(here::here(\"R/themes/base_theme.R\"))\n```\n````\n:::\n\n\n#### 2. Read in the Data\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: read\n#| include: true\n#| eval: true\n#| warning: false\n#|\navg_temp_raw <- read_csv(\n  here::here('data/MakeoverMonday/2025/lu-average-monthly-temperatures 2013-2024.csv')) |> \n  janitor::clean_names()\n```\n````\n:::\n\n\n#### 3. Examine the Data\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: examine\n#| include: true\n#| eval: true\n#| results: 'hide'\n#| warning: false\n\nglimpse(avg_temp_raw)\nskimr::skim(avg_temp_raw)\n```\n````\n:::\n\n\n#### 4. Tidy Data\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: tidy\n#| warning: false\n\ntemp_long <- avg_temp_raw |>\n  pivot_longer(cols = bakerloo:sub_surface_lines, \n               names_to = \"line\", \n               values_to = \"temperature\") |>  \n  mutate(\n    date = ymd(paste(year, month, \"01\")),\n    month_num = match(month, month.name),\n    season = case_when(\n      month_num %in% c(12, 1, 2) ~ \"Winter\",\n      month_num %in% c(3, 4, 5) ~ \"Spring\", \n      month_num %in% c(6, 7, 8) ~ \"Summer\",\n      month_num %in% c(9, 10, 11) ~ \"Autumn\"\n    ),\n    line_clean = case_when(\n      line == \"waterloo_and_city\" ~ \"Waterloo & City\",\n      line == \"sub_surface_lines\" ~ \"Sub-Surface Lines\", \n      TRUE ~ str_to_title(line)\n    )\n  )\n\nline_order <- temp_long |>\n  group_by(line_clean) |>\n  summarise(median_temp = median(temperature, na.rm = TRUE), .groups = \"drop\") |>\n  arrange(desc(median_temp)) |>\n  pull(line_clean)\n```\n````\n:::\n\n\n#### 5. Visualization Parameters\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: params\n#| include: true\n#| warning: false\n\n### |-  plot aesthetics ----\n# Get base colors with custom palette\ncolors <- get_theme_colors(palette = list(NULL))\n\n### |-  titles and caption ----\ntitle_text <- str_glue(\"London Underground Temperature Analysis (2013-2023)\")\nsubtitle_text <- str_glue(\"Central and Bakerloo lines run consistently hottest • Sub-Surface lines stay coolest year-round\")\n\n# Create caption\ncaption_text <- create_mm_caption(\n  mm_year = current_year,\n  mm_week = current_week,\n  source_text = paste0(\"Transport for London (TfL)\")\n)\n\n### |-  fonts ----\nsetup_fonts()\nfonts <- get_font_families()\n\n### |-  plot theme ----\n\n# Start with base theme\nbase_theme <- create_base_theme(colors)\n\n# Add weekly-specific theme elements\nweekly_theme <- extend_weekly_theme(\n  base_theme,\n  theme(\n    plot.title = element_text(\n      size = rel(1.2), family = fonts$title, face = \"bold\",\n      color = colors$title, lineheight = 1.1, hjust = 0.5,\n      margin = margin(t = 5, b = 10)\n    ),\n    plot.subtitle = element_text(\n      size = rel(0.9), hjust = 0.5, family = fonts$subtitle,\n      color = alpha(colors$subtitle, 0.9), lineheight = 0.9,\n      margin = margin(t = 5, b = 20)\n    ),\n\n    # Legend formatting\n    legend.position = \"right\",\n    # legend.direction = \"horizontal\",\n    legend.box.margin = margin(b = 10),\n    legend.margin = margin(b = 5),\n    legend.title = element_text(face = \"bold\"),\n\n    # Axis formatting\n    axis.ticks.y = element_blank(),\n    axis.ticks.x = element_line(color = \"gray\", linewidth = 0.5),\n    axis.ticks.length = unit(0.2, \"cm\"),\n    axis.title.x = element_text(face = \"bold\", size = rel(0.85)),\n    axis.title.y = element_text(face = \"bold\", size = rel(0.85)),\n    axis.text = element_text(size = rel(0.85), family = fonts$subtitle, color = colors$text),\n\n    # Grid lines\n    panel.grid.major = element_line(color = \"#ecf0f1\", linewidth = 0.4),\n    panel.grid.minor = element_blank(),\n\n    # Margin\n    plot.margin = margin(20, 20, 20, 20)\n  )\n)\n\n# Set theme\ntheme_set(weekly_theme)\n\n# Scale function\ncreate_warm_color_scale <- function(legend_position = \"right\") {\n  scale_fill_gradient2(\n    name = \"Temperature\\n(°C)\",\n    low = \"#2c1810\",      \n    mid = \"#cc4125\",       \n    high = \"#f9c74f\",     \n    midpoint = 22,\n    breaks = seq(10, 30, 5),\n    labels = paste0(seq(10, 30, 5), \"°C\"),\n    guide = if(legend_position == \"none\") \"none\" else guide_colorbar()\n  )\n}\n```\n````\n:::\n\n\n#### 6. Plot\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: plot\n#| warning: false\n\n### |-  Plot 1  heatmap ----\np1 <- temp_long |>\n  mutate(line_clean = factor(line_clean, levels = line_order)) |>\n  ggplot(aes(x = month_num, y = line_clean, fill = temperature)) +\n  # Geoms\n  geom_tile(color = \"white\", linewidth = 0.8) +\n  # Scales\n  create_warm_color_scale() +\n  scale_x_continuous(\n    breaks = 1:12, \n    labels = month.abb,\n    expand = c(0, 0)\n  ) +\n  scale_y_discrete(expand = c(0, 0)) +\n  # Labs\n  labs(\n    title = \"Monthly Temperature Patterns\",\n    subtitle = \"Heatmap reveals seasonal trends across London Underground lines\",\n    x = \"Month\",\n    y = NULL\n  ) +\n  # Theme\n  theme(\n    legend.position = \"right\",\n    legend.key.height = unit(1, \"cm\"),\n    legend.key.width = unit(0.4, \"cm\"),\n    axis.text.y = element_text(size = 10, hjust = 1)\n  )\n\n### |-  Plot 2  ridges plot ----\n# Calculate average temperature for each line \nline_avg_temps <- temp_long |>\n  group_by(line_clean) |>\n  summarise(avg_temp = mean(temperature, na.rm = TRUE), .groups = \"drop\")\n\np2 <- temp_long |>\n  mutate(line_clean = factor(line_clean, levels = line_order)) |>\n  left_join(line_avg_temps, by = \"line_clean\") |>\n  ggplot(aes(x = temperature, y = line_clean, fill = avg_temp)) +\n  # Geoms\n  geom_density_ridges(\n    alpha = 0.8, \n    scale = 0.95,\n    linewidth = 0.3,\n    color = \"white\"\n  ) +\n  # Scales\n  create_warm_color_scale(legend_position = \"none\") +\n  scale_x_continuous(\n    breaks = seq(10, 35, 5),\n    labels = paste0(seq(10, 35, 5), \"°C\"),\n    expand = c(0.01, 0)\n  ) +\n  scale_y_discrete(expand = c(0, 0)) +\n  # Labs\n  labs(\n    title = \"Temperature Distribution by Line\",\n    subtitle = \"Density curves colored by each line's average temperature\",\n    x = \"Temperature (°C)\",\n    y = NULL\n  ) +\n  # Theme\n  theme(\n    axis.text.y = element_blank(),\n    axis.ticks.y = element_blank()\n  )\n\n### |-  combined plot ----\n# Create an invisible spacer plot\nspacer <- ggplot() +\n  theme_void()\n\ncombined_plots <- (p1 + spacer + p2) +\n  plot_layout(\n    widths = c(1.2, 0.01, 1)\n    )\n\ncombined_plots <- combined_plots +\n  plot_annotation(\n    title = title_text,\n    subtitle = subtitle_text,\n    caption = caption_text,\n    theme = theme(\n      plot.title = element_text(\n        size = rel(1.85),\n        family = fonts$title,\n        face = \"bold\",\n        hjust = 0.5,\n        color = colors$title,\n        lineheight = 1.1,\n        margin = margin(t = 5, b = 5)\n      ),\n      plot.subtitle = element_text(\n        size = rel(0.95),\n        hjust = 0.5,\n        family = fonts$subtitle,\n        color = alpha(colors$subtitle, 0.9),\n        lineheight = 0.9,\n        margin = margin(t = 5, b = 0)\n      ),\n      plot.caption = element_markdown(\n        size = rel(0.65),\n        family = fonts$caption,\n        color = colors$caption,\n        hjust = 0.5,\n        margin = margin(t = 10)\n      )\n    )\n  )\n```\n````\n:::\n\n\n#### 7. Save\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: save\n#| warning: false\n\n### |-  plot image ----  \nsave_plot_patchwork(\n  plot = combined_plots, \n  type = \"makeovermonday\", \n  year = current_year,\n  week = current_week,\n  width = 12, \n  height = 8\n  )\n```\n````\n:::\n\n\n#### 8. Session Info\n\n::: {.callout-tip collapse=\"true\"}\n##### Expand for Session Info\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\nR version 4.4.1 (2024-06-14 ucrt)\nPlatform: x86_64-w64-mingw32/x64\nRunning under: Windows 11 x64 (build 22631)\n\nMatrix products: default\n\n\nlocale:\n[1] LC_COLLATE=English_United States.utf8 \n[2] LC_CTYPE=English_United States.utf8   \n[3] LC_MONETARY=English_United States.utf8\n[4] LC_NUMERIC=C                          \n[5] LC_TIME=English_United States.utf8    \n\ntime zone: America/La_Paz\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices datasets  utils     methods   base     \n\nother attached packages:\n [1] here_1.0.1      ggridges_0.5.6  patchwork_1.3.0 glue_1.8.0     \n [5] scales_1.3.0    showtext_0.9-7  showtextdb_3.0  sysfonts_0.8.9 \n [9] ggtext_0.1.2    lubridate_1.9.3 forcats_1.0.0   stringr_1.5.1  \n[13] dplyr_1.1.4     purrr_1.0.2     readr_2.1.5     tidyr_1.3.1    \n[17] tibble_3.2.1    ggplot2_3.5.1   tidyverse_2.0.0 pacman_0.5.1   \n\nloaded via a namespace (and not attached):\n [1] gtable_0.3.6       xfun_0.49          htmlwidgets_1.6.4  tzdb_0.5.0        \n [5] yulab.utils_0.1.8  vctrs_0.6.5        tools_4.4.0        generics_0.1.3    \n [9] curl_6.0.0         parallel_4.4.0     gifski_1.32.0-1    fansi_1.0.6       \n[13] pkgconfig_2.0.3    ggplotify_0.1.2    skimr_2.1.5        lifecycle_1.0.4   \n[17] compiler_4.4.0     farver_2.1.2       munsell_0.5.1      repr_1.1.7        \n[21] janitor_2.2.0      codetools_0.2-20   snakecase_0.11.1   htmltools_0.5.8.1 \n[25] yaml_2.3.10        crayon_1.5.3       pillar_1.9.0       camcorder_0.1.0   \n[29] magick_2.8.5       commonmark_1.9.2   tidyselect_1.2.1   digest_0.6.37     \n[33] stringi_1.8.4      rsvg_2.6.1         rprojroot_2.0.4    fastmap_1.2.0     \n[37] grid_4.4.0         colorspace_2.1-1   cli_3.6.4          magrittr_2.0.3    \n[41] base64enc_0.1-3    utf8_1.2.4         withr_3.0.2        bit64_4.5.2       \n[45] timechange_0.3.0   rmarkdown_2.29     bit_4.5.0          hms_1.1.3         \n[49] evaluate_1.0.1     knitr_1.49         markdown_1.13      gridGraphics_0.5-1\n[53] rlang_1.1.6        gridtext_0.1.5     Rcpp_1.0.13-1      xml2_1.3.6        \n[57] renv_1.0.3         vroom_1.6.5        svglite_2.1.3      rstudioapi_0.17.1 \n[61] jsonlite_1.8.9     R6_2.5.1           fs_1.6.5           systemfonts_1.1.0 \n```\n\n\n:::\n:::\n\n:::\n\n#### 9. GitHub Repository\n\n::: {.callout-tip collapse=\"true\"}\n##### Expand for GitHub Repo\n\nThe complete code for this analysis is available in [mm_2025_30.qmd](https://github.com/poncest/personal-website/blob/master/data_visualizations/MakeoverMonday/2025/mm_2025_30.qmd).\n\nFor the full repository, [click here](https://github.com/poncest/personal-website/).\n:::\n\n#### 10. References\n::: {.callout-tip collapse=\"true\"}\n##### Expand for References\n1.  Data:\n-   Makeover Monday 2025 Week 30: [London Underground Average Monthly Temperatures](https://data.world/makeovermonday/2025w30-london-underground-average-monthly-temperatures/settings?tab=access)\n\n2.  Article\n-   [Daily Mail Online: Is your commute a scorcher?](https://www.dailymail.co.uk/sciencetech/article-13739705/london-underground-hottest-line.html)\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}