{
  "hash": "4d5b696fd1fc6501f86f535966140f8d",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Recessions and Recovery: Not All Crises Are Equal\"\nsubtitle: \"Prime-age labor force participation drops during recessions but recovers at vastly different speeds.\"\ndescription: \"Analyzing how the 2001, 2008, and 2020 recessions impacted prime-age labor force participation differently. While 2020 had the steepest drop, it recovered fastestâ€”2008 never did.\"\ndate: \"2025-10-14\" \ntags: [\n  \"labor-force-participation\",\n  \"recession-analysis\", \n  \"economic-recovery\",\n  \"ggplot2\",\n  \"dumbbell-chart\",\n  \"time-series\",\n  \"BLS-data\",\n  \"pandemic-recession\",\n  \"financial-crisis\",\n  \"comparative-analysis\",\n  \"patchwork\"\n]\nimage: \"thumbnails/mm_2025_40.png\"\nformat:\n  html:\n    toc: true\n    toc-depth: 5\n    code-link: true\n    code-fold: true\n    code-tools: true\n    code-summary: \"Show code\"\n    self-contained: true\n    theme: \n      light: [flatly, assets/styling/custom_styles.scss]\n      dark: [darkly, assets/styling/custom_styles_dark.scss]\neditor_options: \n  chunk_output_type: inline\nexecute: \n  freeze: true                                      \n  cache: true                                       \n  error: false\n  message: false\n  warning: false\n  eval: true\n---\n\n\n\n### Original\n\nThe original visualization **Figure A | Since 2000, prime-age LFPR sinks as recessions hit and recovers only when unemployment is low again** comes from [Better things come to those who wait](https://data.bls.gov/timeseries/LNS11300060)\n\n<!-- ![Original visualization](https://raw.githubusercontent.com/poncest/MakeoverMonday/refs/heads/master/2025/Week_40/original_chart.png) -->\n\n![Original visualization](https://raw.githubusercontent.com/poncest/MakeoverMonday/refs/heads/master/2025/Week_40/original_chart.png)\n\n### Makeover\n\n![Two-panel chart comparing recession impacts on prime-age labor force participation (ages 25-54). The left panel shows that the 2020 recession had the steepest drop at -3.3 percentage points, compared to -1.7pp in 2001 and -1.6pp in 2008. The right panel displays recovery trajectories over 60 months: 2020 recovered fastest, exceeding pre-recession levels by +0.6pp; 2008 never recovered, remaining -1.7pp below; 2001 shows a gradual decline to -1.1pp below baseline.](mm_2025_40.png){#fig-1}\n\n### <mark> **Steps to Create this Graphic** </mark>\n\n#### 1. Load Packages & Setup\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: load\n#| warning: false\n#| message: false\n#| results: \"hide\"\n\n## 1. LOAD PACKAGES & SETUP ----\nsuppressPackageStartupMessages({\n  if (!require(\"pacman\")) install.packages(\"pacman\")\n  pacman::p_load(\n    tidyverse,  # Easily Install and Load the 'Tidyverse'\n    ggtext,     # Improved Text Rendering Support for 'ggplot2'\n    showtext,   # Using Fonts More Easily in R Graphs\n    scales,     # Scale Functions for Visualization\n    glue,       # Interpreted String Literals\n    patchwork   # Using Fonts More Easily in R Graphs\n  )\n})\n\n### |- figure size ----\ncamcorder::gg_record(\n    dir    = here::here(\"temp_plots\"),\n    device = \"png\",\n    width  = 16,\n    height = 9,\n    units  = \"in\",\n    dpi    = 320\n)\n\n# Source utility functions\nsuppressMessages(source(here::here(\"R/utils/fonts.R\")))\nsource(here::here(\"R/utils/social_icons.R\"))\nsource(here::here(\"R/utils/image_utils.R\"))\nsource(here::here(\"R/themes/base_theme.R\"))\n```\n````\n:::\n\n\n#### 2. Read in the Data\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: read\n#| include: true\n#| eval: true\n#| warning: false\n#|\nlabor_force_raw <- readxl::read_excel(\n  here::here('data/MakeoverMonday/2025/SeriesReport-20251013201453_5eccfc.xlsx'), skip = 11) |> \n  janitor::clean_names()\n```\n````\n:::\n\n\n#### 3. Examine the Data\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: examine\n#| include: true\n#| eval: true\n#| results: 'hide'\n#| warning: false\n\nglimpse(labor_force_raw)\nskimr::skim_without_charts(labor_force_raw)\n```\n````\n:::\n\n\n#### 4. Tidy Data\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: tidy\n#| warning: false\n\nlabor_force_clean <- labor_force_raw |>\n  pivot_longer(\n    cols = jan:dec,\n    names_to = \"month\",\n    values_to = \"lfpr\"\n  ) |>\n  mutate(\n    month_num = match(month, tolower(month.abb)),\n    date = make_date(year, month_num, 1)\n  ) |>\n  drop_na(lfpr) |>\n  arrange(date) |>\n  select(date, year, month, lfpr)\n\n# Define recession periods\nrecessions <- tribble(\n  ~start, ~end, ~label,\n  \"2001-03-01\", \"2001-11-01\", \"2001\", # Dot-com\n  \"2007-12-01\", \"2009-06-01\", \"2008\", # Housing\n  \"2020-02-01\", \"2020-04-01\", \"2020\"  # Pandemic\n) |>\n  mutate(\n    start = ymd(start),\n    end = ymd(end)\n  )\n\n### |- P1: Dumbbell Chart Data ----\n# Calculate peak before and trough after each recession\nrecession_impact <- recessions |>\n  mutate(\n    peak_before = map_dbl(start, ~ {\n      labor_force_clean |>\n        filter(date >= .x - years(2), date < .x) |>\n        pull(lfpr) |>\n        max()\n    }),\n    trough_after = map_dbl(start, ~ {\n      labor_force_clean |>\n        filter(date >= .x, date <= .x + years(3)) |>\n        pull(lfpr) |>\n        min()\n    }),\n    drop = peak_before - trough_after,\n    label_full = paste0(label, \" Recession\")\n  ) |>\n  arrange(desc(year(start)))\n\n### |- P2: Line Chart Data ----\n# Create normalized recession cycles data\nrecession_cycles <- recessions |>\n  mutate(\n    cycle_data = map2(start, label, ~ {\n      labor_force_clean |>\n        filter(date >= (.x - years(2)), date <= (.x + years(5))) |>\n        mutate(\n          months_from_start = interval(.x, date) %/% months(1),\n          recession = .y\n        )\n    })\n  ) |>\n  unnest(cycle_data) |>\n  select(recession, months_from_start, date, lfpr, label)\n\n# Calculate baseline and change\nrecession_cycles <- recession_cycles |>\n  group_by(recession) |>\n  mutate(\n    baseline = lfpr[which.min(abs(months_from_start))],\n    change_from_baseline = lfpr - baseline,\n    label_full = paste0(recession, \" Recession\")\n  ) |>\n  ungroup() |>\n  arrange(desc(recession))\n\nrecovery_annotation <- tibble(\n  label_full = \"2020 Recession\",\n  months_from_start = 30,\n  change_from_baseline = 0.95,\n  label_text = \"Exceeded\\npre-recession level\"\n)\n\nendpoint_labels <- recession_cycles |> \n  group_by(label_full, recession) |> \n  filter(months_from_start == max(months_from_start)) |>\n  ungroup() |>\n  mutate(\n    label_text = paste0(\n      ifelse(change_from_baseline > 0, \"+\", \"\"), \n      round(change_from_baseline, 1), \"pp\"\n    )\n  )\n```\n````\n:::\n\n\n#### 5. Visualization Parameters\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: params\n#| include: true\n#| warning: false\n\n### |-  plot aesthetics ----\n# Get base colors with custom palette\ncolors <- get_theme_colors(palette = list(\n  \"2001\" = \"#5B8FA3\",  \n  \"2008\" = \"#D4A373\", \n  \"2020\" = \"#6B5B73\",   \n  \"peak\" = \"#2D5D4F\",\n  \"trough\" = \"#B85C5C\",\n  \"neutral\" = \"#4A5859\"\n))   \n\n### |-  titles and caption ----\ntitle_text <- str_glue(\"Recessions and Recovery: Not All Crises Are Equal\")\n\nsubtitle_text <- str_glue(\n  \"Prime-age **labor force participation** drops during recessions but recovers at **vastly different speeds**. **2008** caused lasting damage, participation never recovered.<br>\", \n  \"**2020** was severe but brief bouncing back to exceed pre-recession levels\"\n)\n\n# Create caption\ncaption_text <- create_mm_caption(\n  mm_year = current_year,\n  mm_week = current_week,\n  source_text = paste0(\"U.S. Bureau of Labor Statistics | Prime-age workers (25-54 years) | Current Population Survey (LNS11300060)\")\n)\n\n### |-  fonts ----\nsetup_fonts()\nfonts <- get_font_families()\n\n### |-  plot theme ----\n\n# Start with base theme\nbase_theme <- create_base_theme(colors)\n\n# Add weekly-specific theme elements\nweekly_theme <- extend_weekly_theme(\n  base_theme,\n  theme(\n    # Text styling\n    plot.title = element_text(\n      size = rel(1.4), family = fonts$title, face = \"bold\",\n      color = colors$title, lineheight = 1.1, hjust = 0,\n      margin = margin(t = 5, b = 10)\n    ),\n    plot.subtitle = element_text(\n      size = rel(0.9), family = fonts$subtitle, face = \"italic\",\n      color = alpha(colors$subtitle, 0.9), lineheight = 1.1,\n      margin = margin(t = 0, b = 20)\n    ),\n\n    # Legend formatting\n    legend.position = \"plot\",\n    legend.justification = \"top\",\n    legend.margin = margin(l = 12, b = 5),\n    legend.key.size = unit(0.8, \"cm\"),\n    legend.box.margin = margin(b = 10),\n    legend.title = element_text(face = \"bold\"),\n\n    # Axis formatting\n    axis.ticks.y = element_blank(),\n    axis.ticks.x = element_line(color = \"gray\", linewidth = 0.5),\n    # axis.ticks.length = unit(0.2, \"cm\"),\n    axis.title.x = element_text(\n      face = \"bold\", size = rel(0.85),\n      margin = margin(t = 10)\n    ),\n    axis.title.y = element_text(\n      face = \"bold\", size = rel(0.85),\n      margin = margin(r = 10)\n    ),\n    axis.text.x = element_text(\n      size = rel(0.85), family = fonts$subtitle,\n      color = colors$text\n    ),\n    axis.text.y = element_text(\n      size = rel(0.85), family = fonts$subtitle,\n      color = colors$text\n    ),\n\n    # Grid lines\n    panel.grid.minor = element_line(color = \"#ecf0f1\", linewidth = 0.2),\n    panel.grid.major = element_line(color = \"#ecf0f1\", linewidth = 0.4),\n\n    # Margin\n    plot.margin = margin(20, 20, 20, 20)\n  )\n)\n\n# Set theme\ntheme_set(weekly_theme)\n```\n````\n:::\n\n\n#### 6. Plot\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: plot\n#| warning: false\n\n### |- P1: Dumbbell Chart ----\np1 <-\nggplot(recession_impact, aes(y = reorder(label_full, -year(start)))) +\n  # Geoms\n  geom_segment(\n    aes(x = trough_after, xend = peak_before, y = label_full, yend = label_full),\n    linewidth = 3, color = \"#E8E8E8\", lineend = \"round\"\n  ) +\n  geom_segment(\n    aes(x = trough_after, xend = peak_before, y = label_full, yend = label_full),\n    linewidth = 1.5, color = colors$palette[\"neutral\"], lineend = \"round\"\n  ) +\n  geom_point(aes(x = peak_before),\n    size = 7, color = colors$palette[\"peak\"], shape = 21,\n    fill = colors$palette[\"peak\"], stroke = 0\n  ) +\n  geom_point(aes(x = trough_after),\n    size = 7, color = colors$palette[\"trough\"], shape = 21,\n    fill = colors$palette[\"trough\"], stroke = 0\n  ) +\n  geom_text(\n    aes(x = peak_before, label = paste0(round(peak_before, 1), \"%\")),\n    hjust = -0.6, size = 3.8, fontface = \"bold\", color = colors$palette[\"peak\"],\n    family = \"sans\"\n  ) +\n  geom_text(\n    aes(x = trough_after, label = paste0(round(trough_after, 1), \"%\")),\n    hjust = 1.6, size = 3.8, fontface = \"bold\", color = colors$palette[\"trough\"],\n    family = \"sans\"\n  ) +\n  geom_text(\n    aes(\n      x = (peak_before + trough_after) / 2,\n      label = paste0(\"â–¼ \", round(drop, 1), \" pp\")\n    ),\n    vjust = -1.2, size = 3.3, color = \"#333333\", fontface = \"bold\",\n    family = \"sans\"\n  ) +\n  # Scales\n  scale_x_continuous(\n    labels = label_percent(scale = 1),\n    limits = c(79, 85),\n    expand = expansion(mult = c(0.02, 0.08))\n  ) +\n  # Labs\n  labs(\n    title = \"2020's Drop Was Steepest at -3.3 Percentage Points\",\n    subtitle = NULL,  \n    x = \"Labor Force Participation Rate\",\n    y = NULL,\n    caption = NULL\n  ) +\n  # Theme\n  theme(\n    plot.title = element_text(\n      face = \"bold\", size = 17, color = \"#1a1a1a\",\n      margin = margin(b = 8)\n    ),\n    plot.subtitle = element_text(\n      size = 11.5, color = \"#5a5a5a\",\n      margin = margin(b = 20), lineheight = 1.2\n    ),\n    plot.caption = element_text(\n      size = 9, color = \"#7a7a7a\", hjust = 0,\n      margin = margin(t = 15)\n    ),\n    axis.text.y = element_text(face = \"bold\", size = 11.5, color = \"#2a2a2a\"),\n    axis.text.x = element_text(size = 10, color = \"#4a4a4a\"),\n    axis.title.x = element_text(size = 11, color = \"#4a4a4a\", margin = margin(t = 10)),\n    panel.grid.major.y = element_blank(),\n    panel.grid.minor = element_blank(),\n    panel.grid.major.x = element_line(color = \"#f0f0f0\", linewidth = 0.3),\n  )\n\n### |- P2: Line Chart ----\np2 <-\nggplot(recession_cycles, aes(x = months_from_start, y = change_from_baseline)) +\n  # Geoms\n  geom_hline(yintercept = 0, color = \"#CCCCCC\", linetype = \"solid\", linewidth = 0.6) +\n  geom_vline(\n    xintercept = 0, color = colors$palette[\"trough\"],\n    linetype = \"solid\", linewidth = 1.2, alpha = 0.7\n  ) +\n  geom_line(aes(color = recession), linewidth = 1.4, alpha = 0.9) +\n  geom_point(\n    data = recession_cycles |> filter(months_from_start == 0),\n    aes(color = recession), size = 3.5, shape = 21, fill = \"white\", stroke = 1.5\n  ) +\n  geom_text(\n    data = recession_cycles |> \n      group_by(recession) |> \n      filter(months_from_start == max(months_from_start)) |>\n      ungroup(),\n    aes(label = paste0(ifelse(change_from_baseline > 0, \"+\", \"\"), \n                       round(change_from_baseline, 1), \"pp\")),\n    hjust = -0.2, size = 3.2, fontface = \"bold\",\n    family = \"sans\"\n  ) +\n  geom_text(\n    data = endpoint_labels,\n    aes(x = months_from_start, y = change_from_baseline, \n        label = label_text, color = recession),\n    hjust = -0.2, size = 3.2, fontface = \"bold\",\n    show.legend = FALSE\n  ) +\n  geom_text(\n    data = recovery_annotation,\n    aes(x = months_from_start, y = change_from_baseline, label = label_text),\n    size = 2.8, color = \"#2D5D4F\", fontface = \"italic\", \n    lineheight = 0.9, hjust = 0.5,\n    inherit.aes = FALSE\n  ) +\n  # Scales\n  scale_color_manual(values = unlist(colors$palette[c(\"2001\", \"2008\", \"2020\")])) +\n  scale_x_continuous(\n    breaks = seq(-24, 60, 12),\n    labels = function(x) ifelse(x == 0, \"Start\", paste0(x, \"m\")),\n    expand = expansion(mult = c(0.02, 0.12))\n  ) +\n  scale_y_continuous(\n    labels = label_number(suffix = \" pp\", style_positive = \"plus\"),\n    breaks = seq(-4, 2, 1),\n  ) +\n  # Labs\n  labs(\n    title = \"But 2020 Recovered Fastestâ€”2008 Still Hasn't\",\n    subtitle = NULL,  \n    x = \"Months from Recession Start\",\n    y = \"pp Change from Pre-Recession Level\",\n    caption = NULL\n  ) +\n  # Facets\n  facet_wrap(~label_full, ncol = 1, scales = \"free_x\") +\n  # Theme\n  theme(\n    plot.title = element_text(\n      face = \"bold\", size = 17, color = \"#1a1a1a\",\n      margin = margin(b = 8)\n    ),\n    plot.subtitle = element_markdown(\n      size = 11.5, color = \"#5a5a5a\",\n      margin = margin(b = 20), lineheight = 1.2\n    ),\n    plot.caption = element_text(\n      size = 9, color = \"#7a7a7a\", hjust = 0,\n      margin = margin(t = 15)\n    ),\n    strip.text = element_text(\n      face = \"bold\", size = 12, color = \"#2a2a2a\",\n      hjust = 0, margin = margin(b = 10)\n    ),\n    strip.background = element_blank(),\n    axis.text = element_text(size = 10, color = \"#4a4a4a\"),\n    axis.title = element_text(size = 11, color = \"#4a4a4a\"),\n    axis.title.y = element_text(margin = margin(r = 10)),\n    axis.title.x = element_text(margin = margin(t = 10)),\n    panel.grid.minor = element_blank(),\n    panel.grid.major = element_line(color = \"#f0f0f0\", linewidth = 0.3),\n    panel.spacing.y = unit(1.5, \"lines\"),\n  )\n\n### |- Combined Plots ----\ncombined_plots <- p1 + p2 +\n  plot_layout(ncol = 2, widths = c(0.8, 1.5))\n\ncombined_plots <- combined_plots +\n  plot_annotation(\n    title = title_text,\n    subtitle = subtitle_text,\n    caption = caption_text,\n    theme = theme(\n      plot.title = element_text(\n        size = rel(1.6),\n        family = fonts$title,\n        face = \"bold\",\n        color = colors$title,\n        lineheight = 1.1,\n        margin = margin(t = 5, b = 5)\n      ),\n      plot.subtitle = element_markdown(\n        size = rel(0.9),\n        family = 'sans',\n        color = alpha(colors$subtitle, 0.9),\n        lineheight = 1.2,\n        margin = margin(t = 5, b = 10)\n      ),\n      plot.caption = element_markdown(\n        size = rel(0.6),\n        family = fonts$caption,\n        color = colors$caption,\n        hjust = 0.5,\n        margin = margin(t = 05)\n      )\n    )\n  )\n```\n````\n:::\n\n\n#### 7. Save\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: save\n#| warning: false\n\n### |-  plot image ----  \nsave_plot_patchwork(\n  plot = combined_plots, \n  type = \"makeovermonday\", \n  year = current_year,\n  week = current_week,\n  width = 16, \n  height = 9\n  )\n```\n````\n:::\n\n\n#### 8. Session Info\n\n::: {.callout-tip collapse=\"true\"}\n##### Expand for Session Info\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\nR version 4.4.1 (2024-06-14 ucrt)\nPlatform: x86_64-w64-mingw32/x64\nRunning under: Windows 11 x64 (build 26100)\n\nMatrix products: default\n\n\nlocale:\n[1] LC_COLLATE=English_United States.utf8 \n[2] LC_CTYPE=English_United States.utf8   \n[3] LC_MONETARY=English_United States.utf8\n[4] LC_NUMERIC=C                          \n[5] LC_TIME=English_United States.utf8    \n\ntime zone: America/New_York\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices datasets  utils     methods   base     \n\nother attached packages:\n [1] here_1.0.1      patchwork_1.3.0 glue_1.8.0      scales_1.3.0   \n [5] showtext_0.9-7  showtextdb_3.0  sysfonts_0.8.9  ggtext_0.1.2   \n [9] lubridate_1.9.3 forcats_1.0.0   stringr_1.5.1   dplyr_1.1.4    \n[13] purrr_1.0.2     readr_2.1.5     tidyr_1.3.1     tibble_3.2.1   \n[17] ggplot2_3.5.1   tidyverse_2.0.0 pacman_0.5.1   \n\nloaded via a namespace (and not attached):\n [1] gtable_0.3.6       xfun_0.49          htmlwidgets_1.6.4  tzdb_0.5.0        \n [5] yulab.utils_0.1.8  vctrs_0.6.5        tools_4.4.0        generics_0.1.3    \n [9] curl_6.0.0         gifski_1.32.0-1    fansi_1.0.6        pkgconfig_2.0.3   \n[13] ggplotify_0.1.2    skimr_2.1.5        readxl_1.4.3       lifecycle_1.0.4   \n[17] compiler_4.4.0     farver_2.1.2       munsell_0.5.1      repr_1.1.7        \n[21] janitor_2.2.0      codetools_0.2-20   snakecase_0.11.1   htmltools_0.5.8.1 \n[25] yaml_2.3.10        pillar_1.9.0       camcorder_0.1.0    magick_2.8.5      \n[29] commonmark_1.9.2   tidyselect_1.2.1   digest_0.6.37      stringi_1.8.4     \n[33] labeling_0.4.3     rsvg_2.6.1         rprojroot_2.0.4    fastmap_1.2.0     \n[37] grid_4.4.0         colorspace_2.1-1   cli_3.6.4          magrittr_2.0.3    \n[41] base64enc_0.1-3    utf8_1.2.4         withr_3.0.2        timechange_0.3.0  \n[45] rmarkdown_2.29     cellranger_1.1.0   hms_1.1.3          evaluate_1.0.1    \n[49] knitr_1.49         markdown_1.13      gridGraphics_0.5-1 rlang_1.1.6       \n[53] gridtext_0.1.5     Rcpp_1.0.13-1      xml2_1.3.6         renv_1.0.3        \n[57] svglite_2.1.3      rstudioapi_0.17.1  jsonlite_1.8.9     R6_2.5.1          \n[61] fs_1.6.5           systemfonts_1.1.0 \n```\n\n\n:::\n:::\n\n:::\n\n#### 9. GitHub Repository\n\n::: {.callout-tip collapse=\"true\"}\n##### Expand for GitHub Repo\n\nThe complete code for this analysis is available in [mm_2025_40.qmd](https://github.com/poncest/personal-website/blob/master/data_visualizations/MakeoverMonday/2025/mm_2025_40.qmd).\n\nFor the full repository, [click here](https://github.com/poncest/personal-website/).\n:::\n\n#### 10. References\n\n::: {.callout-tip collapse=\"true\"}\n##### Expand for References\n\n1.  Data:\n\n-   Makeover Monday 2025 Week 40: [Better things come to those who wait](https://data.bls.gov/timeseries/LNS11300060)\n\n2.  Article\n\n-   [Better things come to those who wait](https://data.bls.gov/timeseries/LNS11300060)\n:::\n\n\n#### 11. Custom Functions Documentation\n\n::: {.callout-note collapse=\"true\"}\n##### ðŸ“¦ Custom Helper Functions\n\nThis analysis uses custom functions from my personal module library for efficiency and consistency across projects.\n\n**Functions Used:**\n\n- **`fonts.R`**: `setup_fonts()`, `get_font_families()` - Font management with showtext\n- **`social_icons.R`**: `create_social_caption()` - Generates formatted social media captions\n- **`image_utils.R`**: `save_plot()` - Consistent plot saving with naming conventions\n- **`base_theme.R`**: `create_base_theme()`, `extend_weekly_theme()`, `get_theme_colors()` - Custom ggplot2 themes\n\n**Why custom functions?**  \nThese utilities standardize theming, fonts, and output across all my data visualizations. The core analysis (data tidying and visualization logic) uses only standard tidyverse packages.\n\n**Source Code:**  \nView all custom functions â†’ [GitHub: R/utils](https://github.com/poncest/personal-website/tree/master/R)\n\n:::\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}