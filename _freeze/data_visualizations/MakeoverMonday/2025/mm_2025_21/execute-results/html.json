{
  "hash": "376a925add03aa92d9206a96fef932ca",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"The Enduring Legacy of PC Gaming Excellence\"\nsubtitle: \"While consoles produce occasional standout hits, PC gaming demonstrates sustained quality and unmatched volume. PC games demonstrate sustained excellence, while console games include some standout titles\"\ndescription: \"Analysis of Metacritic's best-rated games data showing PC gaming's dominance in both quantity and sustained quality across three decades compared to console platforms.\"\nauthor: \"Steven Ponce\"\ndate: \"2025-05-19\" \ncategories: [\"MakeoverMonday\", \"Data Visualization\", \"R Programming\", \"2025\"]   \ntags: [\n\"games\", \"metacritic\", \"treemap\", \"gaming industry\", \"PC gaming\", \"console gaming\", \"ggplot2\", \"data analysis\", \"metascore\", \"video games\"\n]\nimage: \"thumbnails/mm_2025_21.png\"\nformat:\n  html:\n    toc: true\n    toc-depth: 5\n    code-link: true\n    code-fold: true\n    code-tools: true\n    code-summary: \"Show code\"\n    self-contained: true\n    theme: \n      light: [flatly, assets/styling/custom_styles.scss]\n      dark: [darkly, assets/styling/custom_styles_dark.scss]\neditor_options: \n  chunk_output_type: inline\nexecute: \n  freeze: true                                                  \n  cache: true                                                   \n  error: false\n  message: false\n  warning: false\n  eval: true\nfilters:\n  - social-share\nshare:                     \n  permalink: \"https://stevenponce.netlify.app/data_visualizations/MakeoverMonday/2025/mm_2025_21.html\"\n  description: \"MakeoverMonday week 21: Visualizing Metacritic's best games data to reveal PC gaming's enduring excellence and dominance in top-rated titles.\"\n  twitter: true\n  linkedin: true\n  email: true\n  facebook: false\n  reddit: false\n  stumble: false\n  tumblr: false\n  mastodon: true\n  bsky: true\n---\n\n\n\n### Original\n\nThe original visualization **Best Games of All Time** comes from [Metacritic](https://www.metacritic.com/browse/game/)\n\n![Original visualization](https://raw.githubusercontent.com/poncest/MakeoverMonday/master/2025/Week_21/original_chart.png)\n\n### Makeover\n\n![This data visualization compares top-rated games across platforms. Left panel shows a treemap where PC dominates with 212 games versus various console platforms (PlayStation, Xbox, Nintendo). Right panel displays a scatter plot of Metacritic scores (90-100) from 1990s-2025, showing PC games (blue dots) consistently achieving high ratings across decades, with several standout titles above 97 points, while console games (gray dots) have occasional high-performers but less consistent excellence.](mm_2025_21.png){#fig-1}\n\n### <mark> **Steps to Create this Graphic** </mark>\n\n#### 1. Load Packages & Setup\n\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: load\n#| warning: false\n#| message: false\n#| results: \"hide\"\n\n## 1. LOAD PACKAGES & SETUP ----\nsuppressPackageStartupMessages({\n  if (!require(\"pacman\")) install.packages(\"pacman\")\n  pacman::p_load(\n    tidyverse,      # Easily Install and Load the 'Tidyverse'\n    ggtext,         # Improved Text Rendering Support for 'ggplot2'\n    showtext,       # Using Fonts More Easily in R Graphs\n    scales,         # Scale Functions for Visualization\n    glue,           # Interpreted String Literals\n    here,           # A Simpler Way to Find Your Files\n    lubridate,      # Make Dealing with Dates a Little Easier\n    ggrepel,        # Automatically Position Non-Overlapping Text Labels with ggplot2\n    treemapify,     # Draw Treemaps in 'ggplot2'\n    marquee,        # Markdown Parser and Renderer for R Graphic\n    patchwork       # The Composer of Plots\n  )\n})\n\n### |- figure size ----\ncamcorder::gg_record(\n    dir    = here::here(\"temp_plots\"),\n    device = \"png\",\n    width  =  12,\n    height =  8,\n    units  = \"in\",\n    dpi    = 320\n)\n\n# Source utility functions\nsuppressMessages(source(here::here(\"R/utils/fonts.R\")))\nsource(here::here(\"R/utils/social_icons.R\"))\nsource(here::here(\"R/utils/image_utils.R\"))\nsource(here::here(\"R/themes/base_theme.R\"))\n```\n````\n:::\n\n\n\n#### 2. Read in the Data\n\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: read\n#| include: true\n#| eval: true\n#| warning: false\n\n## Original Chart\n# Metacritic Best Games of All Time\n# https://data.world/makeovermonday/2025w21-metacritic-best-games-of-all-time\n\n## Article\n# Metacritic Best Games of All Time\n# https://www.metacritic.com/browse/game/\n\nmetacritic_top_games_raw <- read_csv(\n  here::here('data/MakeoverMonday/2025/metacritic_top_games.csv')) |> \n  janitor::clean_names()\n```\n````\n:::\n\n\n\n#### 3. Examine the Data\n\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: examine\n#| include: true\n#| eval: true\n#| results: 'hide'\n#| warning: false\n\nglimpse(metacritic_top_games_raw)\nskimr::skim(metacritic_top_games_raw)\n```\n````\n:::\n\n\n\n#### 4. Tidy Data\n\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: tidy\n#| warning: false\n\n### |-  tidy data ----\n# Split the platforms into separate rows\ngames_platforms <- metacritic_top_games_raw |>\n  separate_rows(platforms, sep = \", \") |>\n  mutate(\n    platform_type = case_when(\n      platforms %in% c(\"PC\") ~ \"PC\",\n      platforms %in% c(\"iOS (iPhone/iPad)\") ~ \"Mobile\",\n      TRUE ~ \"Console\"\n    ),\n    release_year = year(release_date),\n    decade = paste0(floor(release_year / 10) * 10, \"s\"),\n    publisher_group = ifelse(publisher %in% c(\"Nintendo\", \"Rockstar Games\"), publisher, \"Other\")\n  )\n\n# Comprehensive tidy dataset\ngames_tidy <- metacritic_top_games_raw |>\n  mutate(\n    release_year = year(release_date),\n    decade = paste0(floor(release_year / 10) * 10, \"s\"),\n    genre_primary = case_when(\n      str_detect(genre, \"Action\") ~ \"Action\",\n      str_detect(genre, \"Shooter\") ~ \"Shooter\",\n      str_detect(genre, \"Platform\") ~ \"Platformer\",\n      str_detect(genre, \"Sports\") ~ \"Sports\",\n      str_detect(genre, \"Fighting\") ~ \"Fighting\",\n      TRUE ~ genre\n    ),\n    # Short title for visualization\n    short_title = case_when(\n      str_length(title) > 20 ~ paste0(str_sub(title, 1, 17), \"...\"),\n      TRUE ~ title\n    )\n  )\n\n# P1. treemap data----\ntreemap_data <- games_platforms |>\n  count(platforms) |>\n  mutate(\n    platform_group = case_when(\n      platforms == \"PC\" ~ \"PC\",\n      TRUE ~ \"Console\"\n    ),\n    platform_label = paste0(platforms, \"\\n(\", n, \")\")\n  )\n\n# P2. dot plot data -----\ndotplot_data <- games_tidy |>\n  mutate(\n    platform_group = case_when(\n      str_detect(platforms, \"PC\") ~ \"PC\",\n      TRUE ~ \"Console\"\n    ),\n    is_top_game = metascore >= 97,\n    should_label = case_when(\n      # Only label the very top PC games\n      (platform_group == \"PC\" & metascore >= 97) ~ TRUE,\n      # Only label the very top Console games\n      (platform_group == \"Console\" & metascore >= 98) ~ TRUE,\n      TRUE ~ FALSE\n    )\n  )\n```\n````\n:::\n\n\n\n#### 5. Visualization Parameters\n\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: params\n#| include: true\n#| warning: false\n\n### |-  plot aesthetics ----\n# Get base colors with custom palette\ncolors <- get_theme_colors(palette = c(\n  \"PC\" = \"#1F77B4\",     \n  \"Console\" = \"#A9A9A9\"\n))\n  \n### |-  titles and caption ----\ntitle_text <- str_glue(\"The Enduring Legacy of PC Gaming Excellence\")\nsubtitle_text <- \"While consoles produce occasional standout hits, PC gaming demonstrates sustained quality and unmatched volume\\n\n{#1F77B4 **_PC games_**} demonstrate sustained excellence, while {#A9A9A **_console games_**} include some standout titles\"\n\n# Create caption\ncaption_text <- create_mm_caption(\n    mm_year = 2025,\n    mm_week = 21,\n    source_text = \"Metacritic\"\n)\n\n### |-  fonts ----\nsetup_fonts()\nfonts <- get_font_families()\n\n### |-  plot theme ----\n\n# Start with base theme\nbase_theme <- create_base_theme(colors)\n\n# Add weekly-specific theme elements\nweekly_theme <- extend_weekly_theme(\n  base_theme,\n  theme(\n\n    # Legend formatting\n    legend.position = \"plot\",\n    legend.title = element_text(face = \"bold\"),\n\n    axis.ticks.y = element_blank(),\n    axis.ticks.x = element_line(color = \"gray\", linewidth = 0.5), \n    axis.ticks.length = unit(0.2, \"cm\"), \n\n    # Axis formatting\n    axis.title.x = element_text(face = \"bold\", size = rel(0.85)),\n    axis.title.y = element_text(face = \"bold\", size = rel(0.85)),\n    axis.text.y = element_text(face = \"bold\", size = rel(0.85)),\n    \n    # Grid lines\n    panel.grid.major.y = element_blank(),\n    panel.grid.minor = element_blank(),\n\n    # Margin\n    plot.margin = margin(20, 20, 20, 20)\n  )\n)\n\n# Set theme\ntheme_set(weekly_theme)\n```\n````\n:::\n\n\n\n#### 6. Plot\n\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: plot\n#| warning: false\n\n# P1. Treemap ----\np1 <- ggplot(treemap_data, aes(area = n, fill = platform_group, label = platform_label)) +\n  # Geoms\n  geom_treemap(\n    color = \"white\",\n    size = 1.5\n  ) +\n  geom_treemap_text(\n    aes(label = platforms),\n    colour = \"white\",\n    place = \"centre\",\n    size = 11,\n    fontface = \"bold\",\n    padding.y = grid::unit(4, \"mm\")\n  ) +\n  geom_treemap_text(\n    aes(label = paste0(\"n = \", n)),\n    colour = \"white\",\n    place = \"bottom\",\n    size = 8,\n    padding.y = grid::unit(4, \"mm\")\n  ) +\n  # Scales\n  scale_fill_manual(values = colors$palette) +\n  coord_equal() +\n  # Labs\n  labs(\n    title = \"PC: The Single Most Prolific Platform for Top-Rated Games\",\n  ) +\n  # Theme\n  theme(\n    plot.title = element_text(\n      size = rel(1),\n      family = fonts$title,\n      face = \"bold\",\n      color = colors$title,\n      lineheight = 1.1,\n      margin = margin(t = 5, b = 15)\n    )\n  )\n\n# P2. dot plot -----\np2 <- ggplot(dotplot_data, aes(x = release_date, y = metascore)) +\n  # Geoms\n  geom_hline(yintercept = c(90, 95), linetype = \"dashed\", color = \"gray80\", alpha = 0.7) +\n  # Annotate\n  annotate(\"rect\",\n    xmin = as.Date(\"1997-01-01\"), xmax = as.Date(\"2000-01-01\"),\n    ymin = 89.5, ymax = 100, fill = \"gray90\", alpha = 0.5\n  ) +\n  annotate(\"rect\",\n    xmin = as.Date(\"2000-01-01\"), xmax = as.Date(\"2010-01-01\"),\n    ymin = 89.5, ymax = 100, fill = \"gray85\", alpha = 0.5\n  ) +\n  annotate(\"rect\",\n    xmin = as.Date(\"2010-01-01\"), xmax = as.Date(\"2021-01-01\"),\n    ymin = 89.5, ymax = 100, fill = \"gray90\", alpha = 0.5\n  ) +\n  annotate(\"text\",\n    x = as.Date(\"1998-07-01\"), y = 90.5, label = \"1990s\",\n    color = \"gray50\", size = 3, fontface = \"bold\", alpha = 0.7\n  ) +\n  annotate(\"text\",\n    x = as.Date(\"2005-01-01\"), y = 90.5, label = \"2000s\",\n    color = \"gray50\", size = 3, fontface = \"bold\", alpha = 0.7\n  ) +\n  annotate(\"text\",\n    x = as.Date(\"2015-01-01\"), y = 90.5, label = \"2010s\",\n    color = \"gray50\", size = 3, fontface = \"bold\", alpha = 0.7\n  ) +\n\n  # Geoms\n  geom_point(\n    aes(\n      color = platform_group,\n      alpha = if_else(platform_group == \"PC\", 0.9, 0.6)\n    ),\n    size = 3,\n    stroke = 0.2\n  ) +\n  geom_text_repel(\n    data = dotplot_data |> filter(should_label),\n    aes(label = short_title, color = platform_group),\n    size = 2.8,\n    fontface = \"bold\",\n    box.padding = 0.5,\n    point.padding = 0.3,\n    force = 2,\n    segment.color = \"gray60\",\n    segment.size = 0.2,\n    segment.alpha = 0.8,\n    max.overlaps = 15,\n    seed = 42\n  ) +\n  # Scales\n  scale_color_manual(values = colors$palette) +\n  scale_alpha_identity() +\n  scale_x_date(\n    date_breaks = \"5 years\",\n    date_labels = \"%Y\",\n    expand = expansion(mult = c(0.02, 0.02))\n  ) +\n  scale_y_continuous(\n    breaks = seq(90, 100, by = 2.5),\n    limits = c(89.5, 100),\n    labels = function(x) paste0(x)\n  ) +\n  # Labs\n  labs(\n    title = \"PC Games Show Consistent Quality Across Three Decades\",\n    x = \"Release Year\",\n    y = \"Metascore\"\n  ) +\n  # Theme\n  theme(\n    plot.title = element_text(\n      size = rel(1),\n      family = fonts$title,\n      face = \"bold\",\n      color = colors$title,\n      lineheight = 1.1,\n      margin = margin(t = 5, b = 15)\n    )\n  )\n\n# Combined Plot ----\ncombined_plot <- (p1 | plot_spacer() | p2) +\n  plot_layout(\n    widths = c(1, 0.005, 1),\n    guides = \"collect\"\n  ) +\n  plot_annotation(\n    title = title_text,\n    subtitle = subtitle_text,\n    caption = caption_text,\n    theme = theme(\n      plot.title = element_markdown(\n        size = rel(2.4),\n        family = fonts$title,\n        face = \"bold\",\n        color = colors$title,\n        lineheight = 1.1,\n        margin = margin(t = 5, b = 5)\n      ),\n      plot.subtitle = element_marquee(\n        size = rel(1),\n        family = fonts$subtitle,\n        color = alpha(colors$subtitle, 0.9),\n        lineheight = 0.9,\n        margin = margin(t = 5, b = 10)\n      ),\n      plot.caption = element_markdown(\n        size = rel(0.6),\n        family = fonts$caption,\n        color = colors$caption,\n        hjust = 0.5,\n        margin = margin(t = 10)\n      ),\n    )\n  )\n```\n````\n:::\n\n\n\n#### 7. Save\n\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: save\n#| warning: false\n\n### |-  plot image ----  \nsave_plot_patchwork(\n  plot = combined_plot, \n  type = \"makeovermonday\", \n  year = 2025,\n  week = 21,\n  width = 12, \n  height = 8\n  )\n```\n````\n:::\n\n\n\n#### 8. Session Info\n\n::: {.callout-tip collapse=\"true\"}\n##### Expand for Session Info\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\nR version 4.4.1 (2024-06-14 ucrt)\nPlatform: x86_64-w64-mingw32/x64\nRunning under: Windows 11 x64 (build 22631)\n\nMatrix products: default\n\n\nlocale:\n[1] LC_COLLATE=English_United States.utf8 \n[2] LC_CTYPE=English_United States.utf8   \n[3] LC_MONETARY=English_United States.utf8\n[4] LC_NUMERIC=C                          \n[5] LC_TIME=English_United States.utf8    \n\ntime zone: America/New_York\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices datasets  utils     methods   base     \n\nother attached packages:\n [1] patchwork_1.3.0  marquee_0.1.0    treemapify_2.5.6 ggrepel_0.9.6   \n [5] here_1.0.1       glue_1.8.0       scales_1.3.0     showtext_0.9-7  \n [9] showtextdb_3.0   sysfonts_0.8.9   ggtext_0.1.2     lubridate_1.9.3 \n[13] forcats_1.0.0    stringr_1.5.1    dplyr_1.1.4      purrr_1.0.2     \n[17] readr_2.1.5      tidyr_1.3.1      tibble_3.2.1     ggplot2_3.5.1   \n[21] tidyverse_2.0.0  pacman_0.5.1    \n\nloaded via a namespace (and not attached):\n [1] ggfittext_0.10.2   gtable_0.3.6       xfun_0.49          htmlwidgets_1.6.4 \n [5] tzdb_0.5.0         yulab.utils_0.1.8  vctrs_0.6.5        tools_4.4.0       \n [9] generics_0.1.3     curl_6.0.0         parallel_4.4.0     gifski_1.32.0-1   \n[13] fansi_1.0.6        pkgconfig_2.0.3    ggplotify_0.1.2    skimr_2.1.5       \n[17] lifecycle_1.0.4    compiler_4.4.0     farver_2.1.2       textshaping_0.4.0 \n[21] munsell_0.5.1      repr_1.1.7         janitor_2.2.0      codetools_0.2-20  \n[25] snakecase_0.11.1   htmltools_0.5.8.1  yaml_2.3.10        crayon_1.5.3      \n[29] pillar_1.9.0       camcorder_0.1.0    magick_2.8.5       commonmark_1.9.2  \n[33] tidyselect_1.2.1   digest_0.6.37      stringi_1.8.4      rsvg_2.6.1        \n[37] rprojroot_2.0.4    fastmap_1.2.0      grid_4.4.0         colorspace_2.1-1  \n[41] cli_3.6.4          magrittr_2.0.3     base64enc_0.1-3    utf8_1.2.4        \n[45] withr_3.0.2        bit64_4.5.2        timechange_0.3.0   rmarkdown_2.29    \n[49] bit_4.5.0          hms_1.1.3          evaluate_1.0.1     knitr_1.49        \n[53] markdown_1.13      gridGraphics_0.5-1 rlang_1.1.6        gridtext_0.1.5    \n[57] Rcpp_1.0.13-1      xml2_1.3.6         renv_1.0.3         vroom_1.6.5       \n[61] svglite_2.1.3      rstudioapi_0.17.1  jsonlite_1.8.9     R6_2.5.1          \n[65] fs_1.6.5           systemfonts_1.1.0 \n```\n\n\n:::\n:::\n\n\n:::\n\n#### 9. GitHub Repository\n\n::: {.callout-tip collapse=\"true\"}\n##### Expand for GitHub Repo\n\nThe complete code for this analysis is available in [`mm_2025_21.qmd`](https://github.com/poncest/personal-website/blob/master/data_visualizations/MakeoverMonday/2025/mm_2025_21.qmd).\n\nFor the full repository, [click here](https://github.com/poncest/personal-website/).\n:::\n\n#### 10. References\n\n::: {.callout-tip collapse=\"true\"}\n##### Expand for References\n\n1.  Data:\n\n-   Makeover Monday 2025 Week 21: [Metacritic Best Games of All Time](https://data.world/makeovermonday/2025w21-metacritic-best-games-of-all-time)\n\n2.  Article\n \n-   Metacritic: [Best Games of All Time](https://www.metacritic.com/browse/game/)\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}