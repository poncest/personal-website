{
  "hash": "ab54130bc1b86242fb171df14ef5a82e",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Global Meat Production Analysis: Trends & Statistical Precision\"\nsubtitle: \"Understanding 60+ years of regional production patterns through time trends and recent statistical analysis\"\ndescription: \"A comprehensive analysis of global meat production from 1961-2023, combining historical trend visualization with statistical precision analysis. This MakeoverMonday project transforms FAO data into a dual-panel visualization that reveals Asia's dramatic rise in meat production while providing statistical confidence intervals for current production levels across six regions and four major meat types.\"\nauthor: \"Steven Ponce\"\ndate: \"2025-08-26\" \ncategories: [\"MakeoverMonday\", \"Data Visualization\", \"R Programming\", \"2025\"]   \ntags: [\n  \"meat production\", \n  \"global agriculture\",\n  \"time series analysis\",\n  \"statistical visualization\",\n  \"confidence intervals\",\n  \"regional comparison\",\n  \"faceted plots\",\n  \"food security\",\n  \"agricultural trends\",\n  \"ggplot2\",\n  \"tidytext\",\n  \"patchwork\"\n]\nimage: \"thumbnails/mm_2025_35.png\"\nformat:\n  html:\n    toc: true\n    toc-depth: 5\n    code-link: true\n    code-fold: true\n    code-tools: true\n    code-summary: \"Show code\"\n    self-contained: true\n    theme: \n      light: [flatly, assets/styling/custom_styles.scss]\n      dark: [darkly, assets/styling/custom_styles_dark.scss]\neditor_options: \n  chunk_output_type: inline\nexecute: \n  freeze: true                                      \n  cache: true                                       \n  error: false\n  message: false\n  warning: false\n  eval: true\n---\n\n\n\n### Original\n\nThe original visualization **Global meat production, 1961 to 2023** comes from [Food and Agriculture Organization of the United Nations (2025)](https://ourworldindata.org/meat-production)\n\n<!-- ![Original visualization](https://raw.githubusercontent.com/poncest/MakeoverMonday/refs/heads/master/2025/Week_35/original_chart.png) -->\n\n![Original visualization](https://raw.githubusercontent.com/poncest/MakeoverMonday/refs/heads/master/2025/Week_35/original_chart.png)\n\n### Makeover\n\n![Two-panel chart analyzing global meat production. The top panel displays regional trends from 1961 to 2023, featuring line graphs for six regions (Asia, North America, Europe, South America, Africa, and Oceania). This reveals Asia's dramatic growth in pig and poultry production, reaching over 60 million tonnes, while the other regions remain relatively flat. The bottom panel displays 2010-2023 statistical confidence intervals using dot plots with error bars across four meat types (Poultry, Pig, Beef & Buffalo, and Sheep & Goat), confirming Asia's dominance in most categories, with North America leading in beef production. Color coding is consistent throughout: brown for beef, bright pink for pig, orange for poultry, and green for sheep.](mm_2025_35.png){#fig-1}\n\n### <mark> **Steps to Create this Graphic** </mark>\n\n#### 1. Load Packages & Setup\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: load\n#| warning: false\n#| message: false\n#| results: \"hide\"\n\n## 1. LOAD PACKAGES & SETUP ----\nsuppressPackageStartupMessages({\n  if (!require(\"pacman\")) install.packages(\"pacman\")\n  pacman::p_load(\n    tidyverse,  # Easily Install and Load the 'Tidyverse'\n    ggtext,     # Improved Text Rendering Support for 'ggplot2'\n    showtext,   # Using Fonts More Easily in R Graphs\n    scales,     # Scale Functions for Visualization\n    glue,       # Interpreted String Literals\n    patchwork,  # The Composer of Plots\n    tidytext    # Text Mining using 'dplyr', 'ggplot2', and Other Tidy Tools \n  )\n})\n\n### |- figure size ----\ncamcorder::gg_record(\n    dir    = here::here(\"temp_plots\"),\n    device = \"png\",\n    width  = 10,\n    height = 10,\n    units  = \"in\",\n    dpi    = 320\n)\n\n# Source utility functions\nsuppressMessages(source(here::here(\"R/utils/fonts.R\")))\nsource(here::here(\"R/utils/social_icons.R\"))\nsource(here::here(\"R/utils/image_utils.R\"))\nsource(here::here(\"R/themes/base_theme.R\"))\n```\n````\n:::\n\n\n#### 2. Read in the Data\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: read\n#| include: true\n#| eval: true\n#| warning: false\n#|\nmeat_production_raw <- readxl::read_excel(\n  here::here('data/MakeoverMonday/2025/Global meat production by livestock type.xlsx')) |> \n  janitor::clean_names()\n```\n````\n:::\n\n\n#### 3. Examine the Data\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: examine\n#| include: true\n#| eval: true\n#| results: 'hide'\n#| warning: false\n\nglimpse(meat_production_raw)\nskimr::skim_without_charts(meat_production_raw)\n```\n````\n:::\n\n\n#### 4. Tidy Data\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: tidy\n#| warning: false\n\nmeat_clean <- meat_production_raw |>\n  filter(!is.na(entity), !entity %in% c(\"World\", \"\")) |>\n  pivot_longer(\n    cols = starts_with(\"meat_\"),\n    names_to = \"meat_type_raw\",\n    values_to = \"production_tonnes\",\n    values_drop_na = TRUE\n  ) |>\n  # Clean meat type names\n  mutate(\n    meat_type = case_when(\n      str_detect(meat_type_raw, \"beef\") ~ \"Beef & Buffalo\",\n      str_detect(meat_type_raw, \"pig\") ~ \"Pig\",\n      str_detect(meat_type_raw, \"poultry\") ~ \"Poultry\",\n      str_detect(meat_type_raw, \"sheep\") ~ \"Sheep & Goat\",\n      str_detect(meat_type_raw, \"game\") ~ \"Game\",\n      str_detect(meat_type_raw, \"horse\") ~ \"Horse\",\n      str_detect(meat_type_raw, \"camel\") ~ \"Camel\",\n      TRUE ~ \"Other\"\n    )\n  ) |>\n  # Focus on major meat types for cleaner visualizations\n  filter(meat_type %in% c(\"Beef & Buffalo\", \"Pig\", \"Poultry\", \"Sheep & Goat\")) |>\n  select(entity, code, year, meat_type, production_tonnes)\n\n# Create regional groupings for continental analysis\nregional_data <- meat_clean |>\n  mutate(\n    region = case_when(\n      entity %in% c(\n        \"China\", \"India\", \"Japan\", \"South Korea\", \"Indonesia\", \"Thailand\",\n        \"Philippines\", \"Vietnam\", \"Malaysia\", \"Bangladesh\", \"Pakistan\"\n      ) ~ \"Asia\",\n      entity %in% c(\"United States\", \"Canada\", \"Mexico\") ~ \"North America\",\n      entity %in% c(\n        \"Brazil\", \"Argentina\", \"Chile\", \"Colombia\", \"Peru\", \"Uruguay\",\n        \"Venezuela\", \"Ecuador\", \"Bolivia\"\n      ) ~ \"South America\",\n      entity %in% c(\n        \"Germany\", \"France\", \"United Kingdom\", \"Italy\", \"Spain\", \"Poland\",\n        \"Netherlands\", \"Russia\", \"Ukraine\", \"Turkey\"\n      ) ~ \"Europe\",\n      entity %in% c(\n        \"Nigeria\", \"Ethiopia\", \"South Africa\", \"Kenya\", \"Ghana\", \"Morocco\",\n        \"Algeria\", \"Egypt\", \"Tanzania\", \"Uganda\"\n      ) ~ \"Africa\",\n      entity %in% c(\"Australia\", \"New Zealand\") ~ \"Oceania\",\n      TRUE ~ \"Other\"\n    )\n  ) |>\n  filter(region != \"Other\")\n\n# P1: Regional trends over time data ----\ntrends_data <- regional_data |>\n  group_by(region, year, meat_type) |>\n  summarise(total_production = sum(production_tonnes, na.rm = TRUE), .groups = \"drop\") |>\n  # Calculate growth rates \n  group_by(region, meat_type) |>\n  arrange(year) |>\n  mutate(\n    growth_from_start = (total_production / first(total_production) - 1) * 100\n  ) |>\n  ungroup() |>\n  # Order regions by total 2023 production \n  group_by(region) |>\n  mutate(region_total_2023 = sum(total_production[year == 2023], na.rm = TRUE)) |>\n  ungroup() |>\n  mutate(region = fct_reorder(region, desc(region_total_2023)))\n\n# P2: Statistical precision data ----\nprecision_data <- regional_data |>\n  filter(year >= 2010) |>\n  group_by(region, meat_type) |>\n  summarise(\n    n_years = n(),\n    mean_production = mean(production_tonnes, na.rm = TRUE),\n    sd_production = sd(production_tonnes, na.rm = TRUE),\n    se_production = sd_production / sqrt(n_years),\n    .groups = \"drop\"\n  ) |>\n  mutate(\n    # 95% confidence intervals\n    lower_ci = pmax(0, mean_production - 1.96 * se_production),\n    upper_ci = mean_production + 1.96 * se_production\n  ) |>\n  # Order meat types by total global production \n  group_by(meat_type) |>\n  mutate(meat_total = sum(mean_production)) |>\n  ungroup() |>\n  mutate(meat_type_ordered = fct_reorder(meat_type, desc(meat_total))) |>\n  # Use tidytext::reorder_within for proper within-facet ordering\n  mutate(region_ordered = reorder_within(region, mean_production, meat_type_ordered))\n```\n````\n:::\n\n\n#### 5. Visualization Parameters\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: params\n#| include: true\n#| warning: false\n\n### |-  plot aesthetics ----\n# Get base colors with custom palette\ncolors <- get_theme_colors(palette = c(\n  \"Beef & Buffalo\" = \"#8B4513\",  \n  \"Pig\" = \"#E91E63\",            \n  \"Poultry\" = \"#FF9800\",        \n  \"Sheep & Goat\" = \"#2E7D32\"    \n))   \n\n### |-  titles and caption ----\ntitle_text <- str_glue(\"Global Meat Production Analysis: Trends & Statistical Precision\")\n\nsubtitle_text <- str_glue(\n  \"Understanding 60+ years of regional production patterns through time trends and recent statistical analysis\"\n)\n\n# Create caption\ncaption_text <- create_mm_caption(\n  mm_year = current_year,\n  mm_week = current_week,\n  source_text = paste0(\"FAO via Our World in Data\")\n)\n\n### |-  fonts ----\nsetup_fonts()\nfonts <- get_font_families()\n\n### |-  plot theme ----\n\n# Start with base theme\nbase_theme <- create_base_theme(colors)\n\n# Add weekly-specific theme elements\nweekly_theme <- extend_weekly_theme(\n  base_theme,\n  theme(\n    plot.title = element_text(\n      size = rel(1.4), family = fonts$title, face = \"bold\",\n      color = colors$title, lineheight = 1.1, hjust = 0,\n      margin = margin(t = 5, b = 10)\n    ),\n    plot.subtitle = element_markdown(\n      size = rel(0.9), family = fonts$subtitle, face = \"italic\",\n      color = alpha(colors$subtitle, 0.9), lineheight = 1.1,\n      margin = margin(t = 0, b = 20)\n    ),\n\n    # Legend formatting\n    legend.position = \"plot\",\n    legend.justification = \"top\",\n    legend.margin = margin(l = 12, b = 5),\n    legend.key.size = unit(0.8, \"cm\"),\n    legend.box.margin = margin(b = 10),\n    legend.title = element_text(face = \"bold\"),\n\n    # Axis formatting\n    axis.ticks.y = element_blank(),\n    axis.ticks.x = element_line(color = \"gray\", linewidth = 0.5),\n    axis.ticks.length = unit(0.2, \"cm\"),\n    axis.title.x = element_text(\n      face = \"bold\", size = rel(0.85),\n      margin = margin(t = 10)\n    ),\n    axis.title.y = element_text(\n      face = \"bold\", size = rel(0.85),\n      margin = margin(r = 10)\n    ),\n    axis.text.x = element_text(\n      size = rel(0.85), family = fonts$subtitle,\n      color = colors$text\n    ),\n    axis.text.y = element_text(\n      size = rel(0.85), family = fonts$subtitle,\n      color = colors$text\n    ),\n\n    # Grid lines\n    panel.grid.minor = element_line(color = \"#ecf0f1\", linewidth = 0.2),\n    panel.grid.major = element_line(color = \"#ecf0f1\", linewidth = 0.4),\n\n    # Margin\n    plot.margin = margin(20, 20, 20, 20)\n  )\n)\n\n# Set theme\ntheme_set(weekly_theme)\n```\n````\n:::\n\n\n#### 6. Plot\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: plot\n#| warning: false\n\n### |- P1  Regional trends over time chart ----\np1 <- trends_data |>\n  ggplot(aes(x = year, y = total_production, color = meat_type)) +\n  \n  # Geoms\n  geom_line(size = 1.1, alpha = 0.9) +\n  geom_smooth(method = \"loess\", se = FALSE, size = 0.8, alpha = 0.6, span = 0.3) +\n  # Scales\n  scale_color_manual(values = colors$palette, name = \"Meat Type\") +\n  scale_y_continuous(\n    labels = label_number(scale = 1e-6, suffix = \"M\", accuracy = 0.1),\n    expand = expansion(mult = c(0.02, 0.05))\n  ) +\n  scale_x_continuous(\n    breaks = seq(1970, 2020, 25),\n    expand = expansion(mult = c(0.02, 0.02))\n  ) +\n  # Labs\n  labs(\n    title = \"Regional Meat Production Evolution (1961-2023)\",\n    subtitle = str_glue(\n      \"Six decades of evolution (1961-2023) revealing long-term growth patterns and regional shifts<br>\",\n      \"Fixed y-scale enables cross-regional comparison\"\n    ),\n    x = \"Year\",\n    y = \"Production (Million Tonnes)\"\n  ) +\n  # Facets\n  facet_wrap(~region, scales = \"fixed\", ncol = 3) +\n  # Theme\n  theme(\n    strip.text = element_text(face = \"bold\", size = rel(0.9), color = \"white\", family = fonts$text),\n    strip.background = element_rect(fill = \"#34495e\", color = NA),\n    )\n\n### |- P2  Statistical precision chart----\np2 <- precision_data |>\n  ggplot(aes(x = mean_production, y = region_ordered, color = meat_type)) +\n  # Geoms\n  geom_errorbarh(\n    aes(xmin = lower_ci, xmax = upper_ci),\n    height = 0.25, alpha = 0.7, linewidth = 0.5\n  ) +\n  geom_point(size = 2, alpha = 0.9) +\n  # Scales\n  scale_color_manual(values = colors$palette, guide = \"none\") +\n  scale_x_continuous(\n    labels = label_number(scale = 1e-6, suffix = \"M\", accuracy = 0.1),\n    expand = expansion(mult = c(0.05, 0.1))\n  ) +\n  scale_y_reordered() +\n  # Labs\n  labs(\n    title = \"Regional Production Averages with Statistical Confidence (2010-2023)\",\n    subtitle = str_glue(\n      \"Statistical precision analysis of current era (2010-2023) with 95% confidence intervals<br>\",\n      \"Recent period provides reliable uncertainty measurements\"\n    ),\n    x = \"Average Annual Production (Million Tonnes)\",\n    y = \"Region\"\n  ) +\n  # Facets\n  facet_wrap(~meat_type_ordered, scales = \"free_y\", ncol = 2) +\n  # Theme\n  theme(\n    strip.text = element_text(face = \"bold\", size = rel(0.9), color = \"white\", family = fonts$text),\n    strip.background = element_rect(fill = \"#34495e\", color = NA)\n    )\n\n### |-  combined plot ----\ncombined_plots <- p1 / p2 +\n  plot_layout(heights = c(1, 1)) \n\ncombined_plots <- combined_plots +\n  plot_annotation(\n    title = title_text,\n    subtitle = subtitle_text,\n    caption = caption_text,\n    theme = theme(\n      plot.title = element_text(\n        size = rel(1.7),\n        family = fonts$title,\n        face = \"bold\",\n        color = colors$title,\n        lineheight = 1.1,\n        margin = margin(t = 5, b = 5)\n      ), \n      plot.subtitle = element_markdown(\n        size = rel(0.95),\n        family = fonts$subtitle,\n        color = alpha(colors$subtitle, 0.9),\n        lineheight = 0.9,\n        margin = margin(t = 5, b = 0)\n      ),\n      plot.caption = element_markdown(\n        size = rel(0.65),\n        family = fonts$caption,\n        color = colors$caption,\n        hjust = 0.5,\n        margin = margin(t = 10)\n      )\n    )\n  )\n```\n````\n:::\n\n\n#### 7. Save\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: save\n#| warning: false\n\n### |-  plot image ----  \nsave_plot_patchwork(\n  plot = combined_plots, \n  type = \"makeovermonday\", \n  year = current_year,\n  week = current_week,\n  width = 10, \n  height = 12\n  )\n```\n````\n:::\n\n\n#### 8. Session Info\n\n::: {.callout-tip collapse=\"true\"}\n##### Expand for Session Info\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\nR version 4.4.1 (2024-06-14 ucrt)\nPlatform: x86_64-w64-mingw32/x64\nRunning under: Windows 11 x64 (build 22631)\n\nMatrix products: default\n\n\nlocale:\n[1] LC_COLLATE=English_United States.utf8 \n[2] LC_CTYPE=English_United States.utf8   \n[3] LC_MONETARY=English_United States.utf8\n[4] LC_NUMERIC=C                          \n[5] LC_TIME=English_United States.utf8    \n\ntime zone: America/New_York\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices datasets  utils     methods   base     \n\nother attached packages:\n [1] here_1.0.1      tidytext_0.4.2  patchwork_1.3.0 glue_1.8.0     \n [5] scales_1.3.0    showtext_0.9-7  showtextdb_3.0  sysfonts_0.8.9 \n [9] ggtext_0.1.2    lubridate_1.9.3 forcats_1.0.0   stringr_1.5.1  \n[13] dplyr_1.1.4     purrr_1.0.2     readr_2.1.5     tidyr_1.3.1    \n[17] tibble_3.2.1    ggplot2_3.5.1   tidyverse_2.0.0 pacman_0.5.1   \n\nloaded via a namespace (and not attached):\n [1] tidyselect_1.2.1   farver_2.1.2       fastmap_1.2.0      janitor_2.2.0     \n [5] janeaustenr_1.0.0  digest_0.6.37      timechange_0.3.0   lifecycle_1.0.4   \n [9] rsvg_2.6.1         tokenizers_0.3.0   magrittr_2.0.3     compiler_4.4.0    \n[13] rlang_1.1.6        tools_4.4.0        utf8_1.2.4         yaml_2.3.10       \n[17] knitr_1.49         skimr_2.1.5        labeling_0.4.3     htmlwidgets_1.6.4 \n[21] curl_6.0.0         xml2_1.3.6         camcorder_0.1.0    repr_1.1.7        \n[25] withr_3.0.2        grid_4.4.0         fansi_1.0.6        colorspace_2.1-1  \n[29] cli_3.6.4          rmarkdown_2.29     generics_0.1.3     rstudioapi_0.17.1 \n[33] tzdb_0.5.0         commonmark_1.9.2   readxl_1.4.3       splines_4.4.0     \n[37] ggplotify_0.1.2    cellranger_1.1.0   base64enc_0.1-3    vctrs_0.6.5       \n[41] yulab.utils_0.1.8  Matrix_1.7-0       jsonlite_1.8.9     gridGraphics_0.5-1\n[45] hms_1.1.3          systemfonts_1.1.0  magick_2.8.5       gifski_1.32.0-1   \n[49] codetools_0.2-20   stringi_1.8.4      gtable_0.3.6       munsell_0.5.1     \n[53] pillar_1.9.0       htmltools_0.5.8.1  R6_2.5.1           rprojroot_2.0.4   \n[57] evaluate_1.0.1     lattice_0.22-6     markdown_1.13      SnowballC_0.7.1   \n[61] gridtext_0.1.5     snakecase_0.11.1   renv_1.0.3         Rcpp_1.0.13-1     \n[65] svglite_2.1.3      nlme_3.1-164       mgcv_1.9-1         xfun_0.49         \n[69] fs_1.6.5           pkgconfig_2.0.3   \n```\n\n\n:::\n:::\n\n:::\n\n#### 9. GitHub Repository\n\n::: {.callout-tip collapse=\"true\"}\n##### Expand for GitHub Repo\n\nThe complete code for this analysis is available in [mm_2025_35.qmd](https://github.com/poncest/personal-website/blob/master/data_visualizations/MakeoverMonday/2025/mm_2025_35.qmd).\n\nFor the full repository, [click here](https://github.com/poncest/personal-website/).\n:::\n\n#### 10. References\n\n::: {.callout-tip collapse=\"true\"}\n##### Expand for References\n\n1.  Data:\n\n-   Makeover Monday 2025 Week 35: [Meat Production by Livestock Type](https://ourworldindata.org/meat-production)\n\n2.  Article\n\n-   [UK Unemployment Rate](https://ourworldindata.org/meat-production)\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}