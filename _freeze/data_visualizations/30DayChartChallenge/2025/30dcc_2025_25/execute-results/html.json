{
  "hash": "bbe327b761dea3ec0944523d63371960",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"NBA Team Risk Matrix (2023-24 Season)\"\nsubtitle: \"Mapping team performance uncertainty against win probability\"\ndescription: \"This NBA risk matrix visualizes team performance uncertainty against win probability for the 2023-24 season. By mapping standard deviation of point differential against win percentage, it reveals which teams are consistently good performers versus those with unpredictable outcomes. The visualization highlights risk quadrants and uses color to indicate average point differential, with circle size representing the likelihood of blowout losses.\"\ndate: \"2025-04-25\" \ncategories: [\"30DayChartChallenge\", \"Data Visualization\", \"R Programming\", \"2025\"]\ntags: [\n\"ggplot2\", \"NBA\", \"sports analytics\", \"uncertainty visualization\", \"risk assessment\", \"basketball\", \"performance metrics\", \"statistical analysis\", \"hoopR\", \"point differential\", \"variance analysis\", \"win probability\", \"quadrant chart\", \"risk matrix\"\n  ]\nimage: \"thumbnails/30dcc_2025_24.png\"\nformat:\n  html:\n    toc: true\n    toc-depth: 5\n    code-link: true\n    code-fold: true\n    code-tools: true\n    code-summary: \"Show code\"\n    self-contained: true\n    theme: \n      light: [flatly, assets/styling/custom_styles.scss]\n      dark: [darkly, assets/styling/custom_styles_dark.scss]\neditor_options: \n  chunk_output_type: inline\nexecute: \n  freeze: true                                                  \n  cache: true                                                   \n  error: false\n  message: false\n  warning: false\n  eval: true\nfilters:\n  - social-share\nshare:\n  permalink: \"https://stevenponce.netlify.app/data_visualizations/30DayChartChallenge/2025/30dcc_2025_24.html\"\n  description: \"Day 25 of #30DayChartChallenge: Uncertainties and Risk - An NBA team risk matrix showing performance variability and win probability. Which teams are consistently good and which are unpredictably risky?\"\n  twitter: true\n  linkedin: true\n  email: true\n  facebook: false\n  reddit: false\n  stumble: false\n  tumblr: false\n  mastodon: true\n  bsky: true\n---\n\n\n\n![NBA Team Risk Matrix visualization showing team performance uncertainty vs. win percentage for 2023-24 season. Teams are plotted in four quadrants: high-risk/unpredictable (upper left), good but unpredictable (upper right), consistently poor (lower left), and consistently good (lower right). Teams are color-coded by point differential (red=negative, blue=positive) with circle size representing blowout risk. Dallas shows the highest variability, while Boston has the best performance.](30dcc_2025_24.png){#fig-1}\n\n### <mark> **Steps to Create this Graphic** </mark>\n\n#### 1. Load Packages & Setup\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## 1. LOAD PACKAGES & SETUP ----\nsuppressPackageStartupMessages({\npacman::p_load(\n   tidyverse,      # Easily Install and Load the 'Tidyverse'\n  ggtext,         # Improved Text Rendering Support for 'ggplot2'\n  showtext,       # Using Fonts More Easily in R Graphs\n  janitor,        # Simple Tools for Examining and Cleaning Dirty Data\n  skimr,          # Compact and Flexible Summaries of Data\n  scales,         # Scale Functions for Visualization\n  lubridate,      # Make Dealing with Dates a Little Easier\n  ggrepel,        # Automatically Position Non-Overlapping Text Labels with 'ggplot2'\n  hoopR,          # Access Men's Basketball Play by Play Data'\n  camcorder       # Record Your Plot History\n  )\n})\n\n### |- figure size ----\ngg_record(\n    dir    = here::here(\"temp_plots\"),\n    device = \"png\",\n    width  = 8,\n    height = 8,\n    units  = \"in\",\n    dpi    = 320\n)\n\n# Source utility functions\nsuppressMessages(source(here::here(\"R/utils/fonts.R\")))\nsource(here::here(\"R/utils/social_icons.R\"))\nsource(here::here(\"R/utils/image_utils.R\"))\nsource(here::here(\"R/themes/base_theme.R\"))\n```\n:::\n\n\n\n#### 2. Read in the Data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Get game results data for the 2023-24 season\ngames <- nba_leaguegamefinder(season = \"2023-24\")\ngames_data <- games$LeagueGameFinderResults\n```\n:::\n\n\n\n#### 3. Examine the Data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(games_data)\nskim(games_data)\n```\n:::\n\n\n\n#### 4. Tidy Data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### |- Tidy ----\ngames_data <- games_data |>  \n  mutate(\n    PLUS_MINUS = as.numeric(PLUS_MINUS),\n    GAME_DATE = as.Date(GAME_DATE),\n    PTS = as.numeric(PTS),\n    OPP_PTS = as.numeric(PTS) - as.numeric(PLUS_MINUS)\n  )\n\nteam_variability <- games_data |>\n  group_by(TEAM_NAME) |>\n  summarize(\n    games_played = n(),\n    avg_points = mean(as.numeric(PTS)),\n    avg_point_diff = mean(PLUS_MINUS),\n    points_sd = sd(as.numeric(PTS)),\n    margin_sd = sd(PLUS_MINUS),\n    win_pct = sum(WL == \"W\") / n(),\n    blowout_risk = sum(PLUS_MINUS <= -10) / games_played,\n    team_abbr = first(TEAM_ABBREVIATION),\n    .groups = \"drop\"\n  ) |>\n  filter(games_played >= 10) |>\n  arrange(desc(margin_sd))\n```\n:::\n\n\n\n#### 5. Visualization Parameters\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### |-  plot aesthetics ----\ncolors <- get_theme_colors(\n  palette = c(\n    \"#C62828\", \"#EF6C00\", \"#B71C1C\", \"#2E7D32\",\n    \"#D32F2F\", \"#9E9E9E\", \"#1976D2\"\n    )\n  )\n\n### |-  titles and caption ----\n# text\ntitle_text    <- str_wrap(\"NBA Team Risk Matrix (2023-24 Season)\",\n                          width = 60) \n\nsubtitle_text <- str_wrap(\"Mapping team performance uncertainty against win probability\",\n                          width = 60)\n\ncaption_text <- create_dcc_caption(\n  dcc_year = 2025,\n  dcc_day = 25,\n  source_text =  \"ESPN via { hoopR } package\" \n)\n\n### |-  fonts ----\nsetup_fonts()\nfonts <- get_font_families()\n\n### |-  plot theme ----\n\n# Start with base theme\nbase_theme <- create_base_theme(colors)\n\n# Add weekly-specific theme elements\nweekly_theme <- extend_weekly_theme(\n  base_theme,\n  theme(\n    \n    # Text styling \n    plot.title = element_text(face = \"bold\", family = fonts$title, size = rel(1.14), margin = margin(b = 10)),\n    plot.subtitle = element_text(family = fonts$subtitle, color = colors$text, size = rel(0.78), margin = margin(b = 20)),\n    \n    # Axis elements\n    axis.title = element_text(color = colors$text, size = rel(0.8)),\n    axis.text = element_text(color = colors$text, size = rel(0.7)),\n    \n    axis.line.x = element_line(color = \"gray50\", linewidth = .2),\n    \n    # Grid elements\n    panel.grid.minor = element_line(color = \"gray65\", linewidth = 0.05),\n    panel.grid.major = element_line(color = \"gray65\", linewidth = 0.05),\n    \n    # Legend elements\n    legend.position = \"top\",\n    legend.margin = margin(t = 5, b = 15),\n    legend.background = element_rect(fill = NA, color = NA),\n    legend.key = element_rect(fill = NA, color = NA),\n    legend.title = element_text(size = rel(0.71), face = \"bold\"),\n    legend.text = element_text(size = rel(0.64)),\n    \n    # Plot margins \n    plot.margin = margin(t = 10, r = 20, b = 10, l = 20),\n  )\n)\n\n# Set theme\ntheme_set(weekly_theme)\n```\n:::\n\n\n\n#### 6. Plot\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### |-  Plot ----\np <- ggplot(team_variability, \n       aes(x = win_pct, y = margin_sd)) +\n  # Geoms\n  geom_hline(\n    yintercept = median(team_variability$margin_sd), \n    linetype = \"dashed\", color = \"gray70\", size = 0.5\n    ) +\n  geom_vline(\n    xintercept = 0.5, linetype = \"dashed\", \n    color = \"gray70\", size = 0.5\n    ) +\n  geom_point(\n    aes(size = blowout_risk, color = avg_point_diff), \n    alpha = 0.9, stroke = 0.5\n    ) +\n  geom_text_repel(\n    aes(label = team_abbr, color = avg_point_diff),\n    size = 3.5, fontface = \"bold\", box.padding = 0.35,\n    min.segment.length = 0.2, segment.alpha = 0.5,\n    force = 1, max.overlaps = 15, seed = 123\n    ) +\n  # Annotate\n  annotate(\n    \"text\", x = 0.25, y = max(team_variability$margin_sd) - 1.3, \n    label = \"HIGH RISK / UNPREDICTABLE\", color = colors$palette[1], fontface = \"bold\", size = 4\n    ) +\n  annotate(\n    \"text\", x = 0.75, y = max(team_variability$margin_sd) - 1.3, \n    label = \"GOOD BUT UNPREDICTABLE\", color = colors$palette[2], fontface = \"bold\", size = 4\n    ) +\n  annotate(\n    \"text\", x = 0.25, y = median(team_variability$margin_sd) - 0.5, \n    label = \"CONSISTENTLY POOR\", color = colors$palette[3], fontface = \"bold\", size = 4\n    ) +\n  annotate(\n    \"text\", x = 0.75, y = median(team_variability$margin_sd) - 0.5, \n    label = \"CONSISTENTLY GOOD\", color = colors$palette[4], fontface = \"bold\", size = 4\n    ) +\n  annotate(\n    \"text\", x = 0.3, y = 11.5, \n    label = \"Circle size represents likelihood of 10+ point loss\", \n    color = \"#333333\", size = 3, fontface = \"italic\"\n    ) +\n  # Scales\n  scale_color_gradient2(\n    low = colors$palette[5], mid = colors$palette[6], high = colors$palette[7],\n    midpoint = 0, \n    name = \"Average Point Differential\",\n    breaks = c(-10, -5, 0, 5, 10),\n    labels = c(\"-10\", \"-5\", \"0\", \"+5\", \"+10\"),\n    guide = guide_colorbar(\n      title.position = \"top\",\n      title.hjust = 0.5,\n      barwidth = 12,\n      barheight = 0.7,\n      frame.colour = NA,\n      ticks.colour = \"black\"\n    )\n  ) +\n  scale_size_continuous(\n    range = c(2.5, 7),\n    guide = \"none\"\n  ) +\n  scale_x_continuous(\n    labels = percent_format(accuracy = 1), \n    limits = c(0.15, 0.85),\n    breaks = seq(0.2, 0.8, by = 0.1)\n  ) +\n  scale_y_continuous(\n    limits = c(min(team_variability$margin_sd) * 0.95, max(team_variability$margin_sd) * 1.05)\n  ) +\n  # Labs\n  labs(\n    title = title_text,\n    subtitle = subtitle_text,\n    caption = caption_text,\n    x = \"Win Percentage\",\n    y = \"Performance Uncertainty\\n(Point Differential Standard Deviation)\",\n  ) +\n  # Theme\n  theme(\n    plot.title = element_text(\n      size = rel(1.8),\n      family = fonts$title,\n      face = \"bold\",\n      color = colors$title,\n      margin = margin(t = 5, b = 5)\n    ),\n    plot.subtitle = element_markdown(\n      size = rel(0.9),\n      family = fonts$subtitle,\n      color = colors$subtitle,\n      lineheight = 1.1,\n      margin = margin(t = 5, b = 15)\n    ),\n    plot.caption = element_markdown(\n      size = rel(0.55),\n      family = fonts$caption,\n      color = colors$caption,\n      lineheight = 0.65,\n      hjust = 0.5,\n      halign = 0.5,\n      margin = margin(t = 10, b = 5)\n    ),\n  )\n```\n:::\n\n\n\n#### 7. Save\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### |-  plot image ----  \nsave_plot(\n  p, \n  type = \"30daychartchallenge\", \n  year = 2025, \n  day = 25, \n  width = 8, \n  height = 8\n  )\n```\n:::\n\n\n\n#### 8. Session Info\n\n::: {.callout-tip collapse=\"true\"}\n##### Expand for Session Info\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\nR version 4.4.1 (2024-06-14 ucrt)\nPlatform: x86_64-w64-mingw32/x64\nRunning under: Windows 11 x64 (build 22631)\n\nMatrix products: default\n\n\nlocale:\n[1] LC_COLLATE=English_United States.utf8 \n[2] LC_CTYPE=English_United States.utf8   \n[3] LC_MONETARY=English_United States.utf8\n[4] LC_NUMERIC=C                          \n[5] LC_TIME=English_United States.utf8    \n\ntime zone: America/New_York\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices datasets  utils     methods   base     \n\nother attached packages:\n [1] here_1.0.1      camcorder_0.1.0 hoopR_2.1.0     ggrepel_0.9.6  \n [5] scales_1.3.0    skimr_2.1.5     janitor_2.2.0   showtext_0.9-7 \n [9] showtextdb_3.0  sysfonts_0.8.9  ggtext_0.1.2    lubridate_1.9.3\n[13] forcats_1.0.0   stringr_1.5.1   dplyr_1.1.4     purrr_1.0.2    \n[17] readr_2.1.5     tidyr_1.3.1     tibble_3.2.1    ggplot2_3.5.1  \n[21] tidyverse_2.0.0\n\nloaded via a namespace (and not attached):\n [1] tidyselect_1.2.1    farver_2.1.2        fastmap_1.2.0      \n [4] pacman_0.5.1        promises_1.3.0      digest_0.6.37      \n [7] timechange_0.3.0    lifecycle_1.0.4     rsvg_2.6.1         \n[10] processx_3.8.4      magrittr_2.0.3      compiler_4.4.0     \n[13] rlang_1.1.6         tools_4.4.0         utf8_1.2.4         \n[16] yaml_2.3.10         data.table_1.16.2   knitr_1.49         \n[19] labeling_0.4.3      htmlwidgets_1.6.4   curl_6.0.0         \n[22] xml2_1.3.6          repr_1.1.7          websocket_1.4.2    \n[25] withr_3.0.2         grid_4.4.0          fansi_1.0.6        \n[28] colorspace_2.1-1    future_1.34.0       globals_0.16.3     \n[31] cli_3.6.4           rmarkdown_2.29      ragg_1.3.3         \n[34] generics_0.1.3      RcppParallel_5.1.10 rstudioapi_0.17.1  \n[37] httr_1.4.7          tzdb_0.5.0          commonmark_1.9.2   \n[40] chromote_0.4.0      rvest_1.0.4         parallel_4.4.0     \n[43] base64enc_0.1-3     vctrs_0.6.5         jsonlite_1.8.9     \n[46] hms_1.1.3           listenv_0.9.1       systemfonts_1.1.0  \n[49] magick_2.8.5        glue_1.8.0          parallelly_1.43.0  \n[52] gifski_1.32.0-1     codetools_0.2-20    ps_1.8.1           \n[55] stringi_1.8.4       gtable_0.3.6        later_1.3.2        \n[58] munsell_0.5.1       furrr_0.3.1         pillar_1.9.0       \n[61] htmltools_0.5.8.1   R6_2.5.1            textshaping_0.4.0  \n[64] rprojroot_2.0.4     evaluate_1.0.1      markdown_1.13      \n[67] gridtext_0.1.5      snakecase_0.11.1    renv_1.0.3         \n[70] Rcpp_1.0.13-1       svglite_2.1.3       xfun_0.49          \n[73] pkgconfig_2.0.3    \n```\n\n\n:::\n:::\n\n\n:::\n\n#### 9. GitHub Repository\n\n::: {.callout-tip collapse=\"true\"}\n##### Expand for GitHub Repo\n\nThe complete code for this analysis is available in [`30dcc_2025_24.qmd`](https://github.com/poncest/personal-website/blob/master/data_visualizations/TidyTuesday/2025/30dcc_2025_24.qmd).\n\nFor the full repository, [click here](https://github.com/poncest/personal-website/).\n:::\n\n\n#### 10. References\n::: {.callout-tip collapse=\"true\"}\n##### Expand for References\n\n1. Data Sources:\n   - ESPN via { hoopR } package: [hoopR](https://github.com/sportsdataverse/hoopR)\n  \n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}