{
  "hash": "fd94a07198719076b7f03212a47329e0",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Shooting Performance Variability Across NBA Teams (2023-24)\"\nsubtitle: \"Field goal percentage distribution with statistical outliers highlighted in red\"\ndescription: \"This visualization explores the distribution of field goal percentages across NBA teams during the 2023-24 season, with a focus on identifying statistical outliers. Using boxplots with overlaid data points, the chart reveals which teams maintained consistent shooting performance versus those with more variable results. Statistical outliers (defined using the 1.5Ã—IQR rule) are highlighted in red, providing insights into exceptional shooting performances and unusually poor shooting nights.\"\nauthor: \"Steven Ponce\"\ndate: \"2025-04-07\" \ncategories: [\"30DayChartChallenge\", \"Data Visualization\", \"R Programming\", \"2025\"]\ntags: [\n\"ggplot2\",\n\"boxplot\",\n\"hoopR\",\n\"NBA\",\n\"sports analytics\",\n\"outlier detection\",\n\"statistical distribution\",\n\"basketball\",\n\"data storytelling\",\n\"exploratory data analysis\"\n  ]\nimage: \"thumbnails/30dcc_2025_07.png\"\nformat:\n  html:\n    toc: true\n    toc-depth: 5\n    code-link: true\n    code-fold: true\n    code-tools: true\n    code-summary: \"Show code\"\n    self-contained: true\n    theme: \n      light: [flatly, assets/styling/custom_styles.scss]\n      dark: [darkly, assets/styling/custom_styles_dark.scss]\neditor_options: \n  chunk_output_type: inline\nexecute: \n  freeze: true                                                  \n  cache: true                                                   \n  error: false\n  message: false\n  warning: false\n  eval: true\nfilters:\n  - social-share\nshare:\n  permalink: \"https://stevenponce.netlify.app/data_visualizations/TidyTuesday/2025/30dcc_2025_07.html\"\n  description: \"Exploring NBA shooting performance variability across teams in the 2023-24 season. Which teams show consistent field goal percentages, and which teams have the most outlier games? Check out this visualization highlighting statistical distribution and outliers in NBA team shooting.\"\n  twitter: true\n  linkedin: true\n  email: true\n  facebook: false\n  reddit: false\n  stumble: false\n  tumblr: false\n  mastodon: true\n  bsky: true\n---\n\n\n\n![ A boxplot showing field goal percentage distribution across NBA teams for the 2023-24 season. Teams are ordered vertically by median percentage, with Indiana at the top. Statistical outliers are highlighted as red dots. A dashed blue vertical line indicates the league mean FG%. The chart reveals which teams have more consistent shooting performance versus those with extreme outlier games.](30dcc_2025_07.png){#fig-1}\n\n### <mark> **Steps to Create this Graphic** </mark>\n\n#### 1. Load Packages & Setup\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## 1. LOAD PACKAGES & SETUP ----\nsuppressPackageStartupMessages({\npacman::p_load(\n  tidyverse,      # Easily Install and Load the 'Tidyverse'\n  ggtext,         # Improved Text Rendering Support for 'ggplot2'\n  showtext,       # Using Fonts More Easily in R Graphs\n  janitor,        # Simple Tools for Examining and Cleaning Dirty Data\n  skimr,          # Compact and Flexible Summaries of Data\n  scales,         # Scale Functions for Visualization\n  lubridate,      # Make Dealing with Dates a Little Easier\n  hoopR,          # Access Men's Basketball Play by Play Data\n  camcorder       # Record Your Plot History\n)\n})\n\n### |- figure size ----\ngg_record(\n    dir    = here::here(\"temp_plots\"),\n    device = \"png\",\n    width  = 8,\n    height = 10,\n    units  = \"in\",\n    dpi    = 320\n)\n\n# Source utility functions\nsuppressMessages(source(here::here(\"R/utils/fonts.R\")))\nsource(here::here(\"R/utils/social_icons.R\"))\nsource(here::here(\"R/utils/image_utils.R\"))\nsource(here::here(\"R/themes/base_theme.R\"))\n```\n:::\n\n\n\n#### 2. Read in the Data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Get player stats for the 2023-2024 NBA season\nnba_teams_2024 <- load_nba_team_box(seasons = 2024) \n```\n:::\n\n\n\n#### 3. Examine the Data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(nba_teams_2024)\nskim(nba_teams_2024)\n```\n:::\n\n\n\n#### 4. Tidy Data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### |- Tidy ----\nnba_teams_2024 <- nba_teams_2024 |> \n  filter(team_abbreviation != \"EAST\" & team_abbreviation != \"WEST\") |> \n  mutate(\n    team_abbreviation = fct_reorder(team_abbreviation, field_goal_pct, median)\n  ) \n\n# outliers df        \noutliers_df <- nba_teams_2024 |> \n  mutate(\n    q1 = quantile(field_goal_pct, 0.25, na.rm = TRUE),\n    q3 = quantile(field_goal_pct, 0.75, na.rm = TRUE),\n    iqr = q3 - q1,\n    is_outlier = field_goal_pct < (q1 - 1.5 * iqr) | \n    field_goal_pct > (q3 + 1.5 * iqr),\n    .by = team_abbreviation\n    ) |>\n  filter(is_outlier)\n```\n:::\n\n\n\n#### 5. Visualization Parameters\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### |- plot aesthetics ---- \ncolors <- get_theme_colors(palette = NULL)\n\n### |-  titles and caption ----\n# text\ntitle_text    <- str_glue(\"Shooting Performance Variability Across NBA Teams (2023-24)\") \nsubtitle_text <- str_glue(\"Field goal percentage distribution with statistical outliers highlighted in red\")\n\n# Create caption\ncaption_text <- create_dcc_caption(\n  dcc_year = 2025,\n  dcc_day = 07,\n  source_text =  \"ESPN via { hoopR } package\" \n)\n\n### |-  fonts ----\nsetup_fonts()\nfonts <- get_font_families()\n\n### |-  plot theme ----\n\n# Start with base theme\nbase_theme <- create_base_theme(colors)\n\n# Add weekly-specific theme elements\nweekly_theme <- extend_weekly_theme(\n  base_theme,\n  theme(\n    # Text styling \n    plot.title = element_text(face = \"bold\", family = fonts$title, size = rel(1.14), margin = margin(b = 10)),\n    plot.subtitle = element_text(family = fonts$subtitle, color = colors$text, size = rel(0.78), margin = margin(b = 20)),\n    \n    # Axis elements\n    axis.title = element_text(color = colors$text, size = rel(0.8)),\n    axis.text = element_text(color = colors$text, size = rel(0.7)),\n    \n    axis.line.x = element_line(color = \"gray50\", linewidth = .2),\n\n    # Grid elements\n    panel.grid.major = element_blank(),\n    panel.grid.minor = element_blank(),\n \n    # Legend elements\n    legend.position = \"plot\",\n    legend.title = element_text(family = fonts$text, size = rel(0.8)),\n    legend.text = element_text(family = fonts$text, size = rel(0.7)),\n    \n    # Plot margins \n    plot.margin = margin(t = 10, r = 20, b = 10, l = 20),\n  )\n)\n\n# Set theme\ntheme_set(weekly_theme)\n```\n:::\n\n\n\n#### 6. Plot\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### |-  Plot ----\np <- ggplot(\n  data = nba_teams_2024,\n  aes(y = team_abbreviation, x = field_goal_pct)\n) +\n  # Geoms\n  geom_boxplot(fill = \"lightgray\", alpha = 0.2, outlier.shape = NA) +\n  geom_jitter(height = 0.2, alpha = 0.2, color = \"darkgray\", size = 1.5) +\n  geom_point(\n    data = outliers_df,\n    color = \"red\", size = 2.5\n  ) +\n  geom_vline(\n    xintercept = mean(nba_teams_2024$field_goal_pct, na.rm = TRUE),\n    linetype = \"dashed\", color = \"blue\", alpha = 0.8\n  ) +\n  annotate(\n    \"text\", \n    x = mean(nba_teams_2024$field_goal_pct, na.rm = TRUE), \n    y = levels(nba_teams_2024$team_abbreviation)[length(levels(nba_teams_2024$team_abbreviation))],\n    label = \"League Mean FG%\",  \n    vjust = -2.1,\n    color = \"blue\", \n    size = 4, \n    alpha = 0.8,\n    fontface = \"bold\"\n  ) +\n  # Scales\n  scale_x_continuous(labels = scales::number_format(suffix =\"%\")) +\n  scale_y_discrete(\n    expand = expansion(0.05, 0.0)\n  ) +\n  # Labs\n  labs(\n    title = title_text,\n    subtitle = subtitle_text,\n    caption = caption_text,\n    y = \"Team\",\n    x = \"Field Goal Percentage\"\n  ) +\n  # Theme\n  theme(\n    plot.title = element_text(\n      size = rel(1.4),\n      family = fonts$title,\n      face = \"bold\",\n      color = colors$title,\n      margin = margin(t = 5, b = 5)\n    ),\n    plot.subtitle = element_text(\n      size = rel(0.95),\n      family = fonts$subtitle,\n      color = colors$subtitle,\n      lineheight = 1.2,\n      margin = margin(t = 5, b = 30)\n    ),\n    plot.caption = element_markdown(\n      size = rel(0.6),\n      family = fonts$caption,\n      color = colors$caption,\n      lineheight = 0.65,\n      hjust = 0.5,\n      halign = 0.5,\n      margin = margin(t = 10, b = 5)\n    ),\n  )\n```\n:::\n\n\n\n#### 7. Save\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### |-  plot image ----  \n\nsave_plot(\n  p, \n  type = \"30daychartchallenge\", \n  year = 2025, \n  day = 07, \n  width = 8, \n  height = 10\n  )\n```\n:::\n\n\n\n#### 8. Session Info\n\n::: {.callout-tip collapse=\"true\"}\n##### Expand for Session Info\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\nR version 4.4.1 (2024-06-14 ucrt)\nPlatform: x86_64-w64-mingw32/x64\nRunning under: Windows 11 x64 (build 22631)\n\nMatrix products: default\n\n\nlocale:\n[1] LC_COLLATE=English_United States.utf8 \n[2] LC_CTYPE=English_United States.utf8   \n[3] LC_MONETARY=English_United States.utf8\n[4] LC_NUMERIC=C                          \n[5] LC_TIME=English_United States.utf8    \n\ntime zone: America/New_York\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices datasets  utils     methods   base     \n\nother attached packages:\n [1] here_1.0.1      camcorder_0.1.0 hoopR_2.1.0     scales_1.3.0   \n [5] skimr_2.1.5     janitor_2.2.0   showtext_0.9-7  showtextdb_3.0 \n [9] sysfonts_0.8.9  ggtext_0.1.2    lubridate_1.9.3 forcats_1.0.0  \n[13] stringr_1.5.1   dplyr_1.1.4     purrr_1.0.2     readr_2.1.5    \n[17] tidyr_1.3.1     tibble_3.2.1    ggplot2_3.5.1   tidyverse_2.0.0\n\nloaded via a namespace (and not attached):\n [1] tidyselect_1.2.1    farver_2.1.2        fastmap_1.2.0      \n [4] pacman_0.5.1        promises_1.3.0      digest_0.6.37      \n [7] timechange_0.3.0    lifecycle_1.0.4     rsvg_2.6.1         \n[10] processx_3.8.4      magrittr_2.0.3      compiler_4.4.0     \n[13] rlang_1.1.4         tools_4.4.0         utf8_1.2.4         \n[16] yaml_2.3.10         data.table_1.16.2   knitr_1.49         \n[19] labeling_0.4.3      htmlwidgets_1.6.4   curl_6.0.0         \n[22] xml2_1.3.6          repr_1.1.7          websocket_1.4.2    \n[25] withr_3.0.2         grid_4.4.0          fansi_1.0.6        \n[28] colorspace_2.1-1    future_1.34.0       progressr_0.15.1   \n[31] globals_0.16.3      cli_3.6.3           rmarkdown_2.29     \n[34] ragg_1.3.3          generics_0.1.3      RcppParallel_5.1.10\n[37] rstudioapi_0.17.1   httr_1.4.7          tzdb_0.4.0         \n[40] commonmark_1.9.2    chromote_0.4.0      rvest_1.0.4        \n[43] parallel_4.4.0      base64enc_0.1-3     vctrs_0.6.5        \n[46] jsonlite_1.8.9      hms_1.1.3           listenv_0.9.1      \n[49] systemfonts_1.1.0   magick_2.8.5        glue_1.8.0         \n[52] parallelly_1.43.0   gifski_1.32.0-1     codetools_0.2-20   \n[55] ps_1.8.1            stringi_1.8.4       gtable_0.3.6       \n[58] later_1.3.2         munsell_0.5.1       furrr_0.3.1        \n[61] pillar_1.9.0        htmltools_0.5.8.1   R6_2.5.1           \n[64] textshaping_0.4.0   rprojroot_2.0.4     evaluate_1.0.1     \n[67] markdown_1.13       gridtext_0.1.5      snakecase_0.11.1   \n[70] renv_1.0.3          Rcpp_1.0.13-1       svglite_2.1.3      \n[73] xfun_0.49           pkgconfig_2.0.3    \n```\n\n\n:::\n:::\n\n\n:::\n\n#### 9. GitHub Repository\n\n::: {.callout-tip collapse=\"true\"}\n##### Expand for GitHub Repo\n\nThe complete code for this analysis is available in [`30dcc_2025_07.qmd`](https://github.com/poncest/personal-website/blob/master/data_visualizations/TidyTuesday/2025/30dcc_2025_07.qmd).\n\nFor the full repository, [click here](https://github.com/poncest/personal-website/).\n:::\n\n\n#### 10. References\n::: {.callout-tip collapse=\"true\"}\n##### Expand for References\n\n1. Data Sources:\n   - ESPN via { hoopR } package: [hoopR](https://github.com/sportsdataverse/hoopR)\n  \n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}