{
  "hash": "df7ab867ed0f24a2d1d794561eb6d887",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"NBA 2023-2024: High Usage Players with Below-Average Efficiency\"\nsubtitle: \"Highlighting the 'negative relationship' where high offensive responsibility doesn't translate to scoring efficiency\"\ndescription: \"Exploring the crucial balance between usage rate and shooting efficiency in NBA players. This visualization identifies players who consume significant offensive possessions while shooting below league average efficiency—highlighting a key negative relationship that teams should monitor.\"\nauthor: \"Steven Ponce\"\ndate: \"2025-04-16\" \ncategories: [\"30DayChartChallenge\", \"Data Visualization\", \"R Programming\", \"2025\"]\ntags: [\n\"NBA\", \"Basketball Analytics\", \"ggplot2\", \"hoopR\", \"Sports Data\", \"Usage Rate\", \"Efficiency\", \"True Shooting Percentage\", \"Relationships\", \"Negative\", \"Player Performance\"\n  ]\nimage: \"thumbnails/30dcc_2025_16.png\"\nformat:\n  html:\n    toc: true\n    toc-depth: 5\n    code-link: true\n    code-fold: true\n    code-tools: true\n    code-summary: \"Show code\"\n    self-contained: true\n    theme: \n      light: [flatly, assets/styling/custom_styles.scss]\n      dark: [darkly, assets/styling/custom_styles_dark.scss]\neditor_options: \n  chunk_output_type: inline\nexecute: \n  freeze: true                                                  \n  cache: true                                                   \n  error: false\n  message: false\n  warning: false\n  eval: true\nfilters:\n  - social-share\nshare:\n  permalink: \"https://stevenponce.netlify.app/data_visualizations/TidyTuesday/2025/30dcc_2025_16.html\"\n  description: \"Day 16 of #30DayChartChallenge: NBA players with high usage rates but below-average shooting efficiency—the relationship every team wants to avoid. #DataViz #RStats #hoopR #NBA\"\n  twitter: true\n  linkedin: true\n  email: true\n  facebook: false\n  reddit: false\n  stumble: false\n  tumblr: false\n  mastodon: true\n  bsky: true\n---\n\n\n\n![A scatter plot showing NBA players' True Shooting Percentage versus Usage Rate for the 2023-2024 season. Red dots highlight players with high usage but below-average efficiency (below 57%), labeled as the \"Team Concern Area.\" Six notable inefficient high-usage players are labeled, including Anthony Edwards and DeAaron Fox. Blue dots represent all other players. The visualization demonstrates the negative relationship between offensive responsibility and scoring efficiency.](30dcc_2025_16.png){#fig-1}\n\n### <mark> **Steps to Create this Graphic** </mark>\n\n#### 1. Load Packages & Setup\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## 1. LOAD PACKAGES & SETUP ----\nsuppressPackageStartupMessages({\npacman::p_load(\n  tidyverse,      # Easily Install and Load the 'Tidyverse'\n  ggtext,         # Improved Text Rendering Support for 'ggplot2'\n  showtext,       # Using Fonts More Easily in R Graphs\n  janitor,        # Simple Tools for Examining and Cleaning Dirty Data\n  skimr,          # Compact and Flexible Summaries of Data\n  scales,         # Scale Functions for Visualization\n  lubridate,      # Make Dealing with Dates a Little Easier\n  hoopR,          # Access Men's Basketball Play by Play Data\n  ggrepel,        # Automatically Position Non-Overlapping Text Labels with ggplot2\n  camcorder       # Record Your Plot History\n  )\n})\n\n### |- figure size ----\ngg_record(\n    dir    = here::here(\"temp_plots\"),\n    device = \"png\",\n    width  = 8,\n    height = 8,\n    units  = \"in\",\n    dpi    = 320\n)\n\n# Source utility functions\nsuppressMessages(source(here::here(\"R/utils/fonts.R\")))\nsource(here::here(\"R/utils/social_icons.R\"))\nsource(here::here(\"R/utils/image_utils.R\"))\nsource(here::here(\"R/themes/base_theme.R\"))\n```\n:::\n\n\n\n#### 2. Read in the Data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Get player stats for 2023-24 season using proper API call\nplayer_stats <- nba_leaguedashplayerstats(\n  season = \"2023-24\", \n  season_type = \"Regular Season\"\n  )\n```\n:::\n\n\n\n#### 3. Examine the Data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(player_stats)\nskim(player_stats)\n```\n:::\n\n\n\n#### 4. Tidy Data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### |- Tidy ----\n# Extract and clean the data frame\nplayer_data <- player_stats$LeagueDashPlayerStats |>\n  clean_names() |>\n  # Convert to numeric\n  mutate(across(c(\n    gp, min, fgm, fga, fg3m, fg3a, ftm, fta, pts, tov\n    ), \n    as.numeric)) |>\n  # Filter to players with significant minutes\n  filter(\n    gp >= 40,  \n    min >= 15  \n  ) |>\n  # Calculate True Shooting Percentage\n  mutate(\n    ts_pct = pts / (2 * (fga + 0.44 * fta)) * 100,\n    # Calculate usage rate\n    usage_rate = 100 * (fga + 0.44 * fta + tov) / \n      (min/gp * 5),  # approximation based on available data\n    player_name = player_name\n  ) |>\n  # Select relevant columns and calculate minutes per game\n  mutate(min_per_game = min / gp) |>          \n  select(player_name, team_abbreviation, \n         usage_rate, ts_pct, min_per_game, min, gp) |>\n  na.omit()\n\n# Calculate average TS% for reference\navg_ts <- mean(player_data$ts_pct)\n\n# Identify players with high usage but below average efficiency\ninefficient_high_usage <- player_data |>\n  filter(\n    usage_rate > median(usage_rate),  # Above median usage\n    ts_pct < avg_ts                   # Below average efficiency\n  )\n\n# Select top players with highest usage or lowest efficiency for labeling\ninefficient_high_usage_labeled <- inefficient_high_usage |>\n  # Sort by a combined metric of high usage and low efficiency\n  arrange(desc(usage_rate - ts_pct)) |>\n  # Take only top players\n  slice_head(n = 6)\n```\n:::\n\n\n\n#### 5. Visualization Parameters\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### |-  plot aesthetics ----\ncolors <- get_theme_colors(\n  palette = c(\n    \"#5b9bd5\", \n    \"#e15759\"\n  )\n)\n\n### |-  titles and caption ----\n# text\ntitle_text    <- str_wrap(\"NBA 2023-2024: High Usage Players with Below-Average Efficiency\",\n                          width = 70) \n\nsubtitle_text <- str_wrap(\"Highlighting the 'negative relationship' where high offensive responsibility doesn't translate to scoring efficiency\",\n                          width = 85)\n\ncaption_text <- create_dcc_caption(\n  dcc_year = 2025,\n  dcc_day = 16,\n  source_text =  \"ESPN via { hoopR } package\" \n)\n\n### |-  fonts ----\nsetup_fonts()\nfonts <- get_font_families()\n\n### |-  plot theme ----\n\n# Start with base theme\nbase_theme <- create_base_theme(colors)\n\n# Add weekly-specific theme elements\nweekly_theme <- extend_weekly_theme(\n  base_theme,\n  theme(\n\n    # Axis elements\n    axis.title = element_text(color = colors$text, size = rel(0.8)),\n    axis.text = element_text(color = colors$text, size = rel(0.7)),\n\n    # Grid elements\n    panel.grid.minor = element_blank(),\n    panel.grid.major = element_line(color = \"gray92\"),\n\n    # Legend elements\n    legend.position = \"top\",\n    legend.title = element_text(family = fonts$text, size = rel(0.8)),\n    legend.text = element_text(family = fonts$text, size = rel(0.7)),\n    \n    # Plot margins \n    plot.margin = margin(t = 10, r = 20, b = 10, l = 20),\n  )\n)\n\n# Set theme\ntheme_set(weekly_theme)\n```\n:::\n\n\n\n#### 6. Plot\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### |-  Plot ----\np <- ggplot(player_data, aes(x = usage_rate, y = ts_pct)) +\n  # Geoms \n  geom_hline(                         # average TS%\n    yintercept = avg_ts, \n    linetype = \"dashed\",\n    color = \"gray60\", \n    alpha = 0.6\n    ) +\n  geom_point(aes(\n    size = min_per_game, \n    color = ts_pct < avg_ts & usage_rate > median(usage_rate)), \n    alpha = 0.3,\n    ) +\n  geom_point(                         # inefficient high-usage players\n    data = inefficient_high_usage, \n    aes(size = min_per_game),\n    color = \"red\", \n    alpha = 0.5\n    ) +\n  geom_text_repel(\n    data = inefficient_high_usage_labeled,\n    aes(label = player_name),\n    size = 2.5,\n    color = \"red\",\n    force = 10,\n    max.overlaps = 10,\n    segment.size = 0.2,\n    segment.alpha = 0.6,\n    seed = 123\n  ) +\n  # Scales\n  scale_color_manual(\n    values = colors$palette,\n    labels = c(\"Other Players\", \"Below Avg TS% & High Usage\")\n  ) +\n  scale_size_continuous(\n    name = \"Minutes Per Game\", \n    range = c(1, 6)\n    ) +\n  # Labs\n  labs(\n    title = title_text,\n    subtitle = subtitle_text,\n    caption = caption_text,\n    x = \"Usage Rate (%)\",\n    y = \"True Shooting Percentage (%)\",\n    color = \"Player Type\"\n  ) +\n  # Annotate \n  annotate(             # highlight high usage and below average TS area\n    \"rect\", \n    xmin = median(player_data$usage_rate),\n    xmax = max(player_data$usage_rate) + 1, \n    ymin = min(player_data$ts_pct) - 1, \n    ymax = avg_ts,\n    alpha = 0.08, \n    fill = \"red\"\n    ) + \n  annotate(\n    \"text\", \n    x = median(player_data$usage_rate) + (max(player_data$usage_rate) - median(player_data$usage_rate))/2, \n    y = avg_ts - 12,\n    label = \"Team Concern Area:\\nHigh Usage, Low Efficiency\",\n    color = \"red\", \n    fontface = \"bold\",\n    size = 3, \n    alpha = 0.8\n    ) +\n  # Legend\n  guides(\n    color = guide_legend(title.position = \"top\",ncol = 2),\n    size = guide_legend(title.position = \"top\", ncol = 3)\n  ) +\n  # Theme\n  theme(\n    plot.title = element_text(\n      size = rel(1.4),\n      family = fonts$title,\n      face = \"bold\",\n      color = colors$title,\n      margin = margin(t = 5, b = 5)\n    ),\n    plot.subtitle = element_text(\n      size = rel(0.85),\n      family = fonts$subtitle,\n      color = colors$subtitle,\n      lineheight = 1.2,\n      margin = margin(t = 5, b = 10)\n    ),\n    plot.caption = element_markdown(\n      size = rel(0.6),\n      family = fonts$caption,\n      color = colors$caption,\n      lineheight = 0.65,\n      hjust = 0.5,\n      halign = 0.5,\n      margin = margin(t = 10, b = 5)\n    ),\n  )\n```\n:::\n\n\n\n#### 7. Save\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### |-  plot image ----  \n\nsave_plot(\n  p, \n  type = \"30daychartchallenge\", \n  year = 2025, \n  day = 16, \n  width = 8, \n  height = 8\n  )\n```\n:::\n\n\n\n#### 8. Session Info\n\n::: {.callout-tip collapse=\"true\"}\n##### Expand for Session Info\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\nR version 4.4.1 (2024-06-14 ucrt)\nPlatform: x86_64-w64-mingw32/x64\nRunning under: Windows 11 x64 (build 22631)\n\nMatrix products: default\n\n\nlocale:\n[1] LC_COLLATE=English_United States.utf8 \n[2] LC_CTYPE=English_United States.utf8   \n[3] LC_MONETARY=English_United States.utf8\n[4] LC_NUMERIC=C                          \n[5] LC_TIME=English_United States.utf8    \n\ntime zone: America/New_York\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices datasets  utils     methods   base     \n\nother attached packages:\n [1] here_1.0.1      camcorder_0.1.0 ggrepel_0.9.6   hoopR_2.1.0    \n [5] scales_1.3.0    skimr_2.1.5     janitor_2.2.0   showtext_0.9-7 \n [9] showtextdb_3.0  sysfonts_0.8.9  ggtext_0.1.2    lubridate_1.9.3\n[13] forcats_1.0.0   stringr_1.5.1   dplyr_1.1.4     purrr_1.0.2    \n[17] readr_2.1.5     tidyr_1.3.1     tibble_3.2.1    ggplot2_3.5.1  \n[21] tidyverse_2.0.0\n\nloaded via a namespace (and not attached):\n [1] tidyselect_1.2.1    farver_2.1.2        fastmap_1.2.0      \n [4] pacman_0.5.1        promises_1.3.0      digest_0.6.37      \n [7] timechange_0.3.0    lifecycle_1.0.4     rsvg_2.6.1         \n[10] processx_3.8.4      magrittr_2.0.3      compiler_4.4.0     \n[13] rlang_1.1.4         tools_4.4.0         utf8_1.2.4         \n[16] yaml_2.3.10         data.table_1.16.2   knitr_1.49         \n[19] labeling_0.4.3      htmlwidgets_1.6.4   curl_6.0.0         \n[22] xml2_1.3.6          repr_1.1.7          websocket_1.4.2    \n[25] withr_3.0.2         grid_4.4.0          fansi_1.0.6        \n[28] colorspace_2.1-1    future_1.34.0       globals_0.16.3     \n[31] cli_3.6.3           rmarkdown_2.29      ragg_1.3.3         \n[34] generics_0.1.3      RcppParallel_5.1.10 rstudioapi_0.17.1  \n[37] httr_1.4.7          tzdb_0.4.0          commonmark_1.9.2   \n[40] chromote_0.4.0      rvest_1.0.4         parallel_4.4.0     \n[43] base64enc_0.1-3     vctrs_0.6.5         jsonlite_1.8.9     \n[46] hms_1.1.3           listenv_0.9.1       systemfonts_1.1.0  \n[49] magick_2.8.5        glue_1.8.0          parallelly_1.43.0  \n[52] gifski_1.32.0-1     codetools_0.2-20    ps_1.8.1           \n[55] stringi_1.8.4       gtable_0.3.6        later_1.3.2        \n[58] munsell_0.5.1       furrr_0.3.1         pillar_1.9.0       \n[61] htmltools_0.5.8.1   R6_2.5.1            textshaping_0.4.0  \n[64] rprojroot_2.0.4     evaluate_1.0.1      markdown_1.13      \n[67] gridtext_0.1.5      snakecase_0.11.1    renv_1.0.3         \n[70] Rcpp_1.0.13-1       svglite_2.1.3       xfun_0.49          \n[73] pkgconfig_2.0.3    \n```\n\n\n:::\n:::\n\n\n:::\n\n#### 9. GitHub Repository\n\n::: {.callout-tip collapse=\"true\"}\n##### Expand for GitHub Repo\n\nThe complete code for this analysis is available in [`30dcc_2025_16.qmd`](https://github.com/poncest/personal-website/blob/master/data_visualizations/TidyTuesday/2025/30dcc_2025_16.qmd).\n\nFor the full repository, [click here](https://github.com/poncest/personal-website/).\n:::\n\n\n#### 10. References\n::: {.callout-tip collapse=\"true\"}\n##### Expand for References\n\n1. Data Sources:\n   - ESPN via { hoopR } package: [hoopR](https://github.com/sportsdataverse/hoopR)\n  \n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}