{
  "hash": "a236d1532ba813176597d5e62eadc467",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Citrus: The Only Effective Treatment for Scurvy (1757)\"\nsubtitle: \"Fractions of patients showing improvement vs. continuing symptoms after treatment\"\ndescription: \"A visualization exploring James Lind's pioneering 1757 scurvy treatment trial, illustrating how citrus was the only effective remedy among six treatments tested. This diverging stacked bar chart highlights the fractions of patients showing improvement versus continuing symptoms, showcasing an early example of evidence-based medicine.\"\nauthor: \"Steven Ponce\"\ndate: \"2025-04-01\" \ncategories: [\"30DayChartChallenge\", \"Data Visualization\", \"R Programming\", \"2025\"]\ntags: [\n \"ggplot2\",\n\"diverging-chart\",\n\"medical-history\",\n\"likert-scale\",\n\"historical-data\",\n\"scurvy\",\n\"clinical-trials\",\n\"medical-research\",\n\"fractions\",\n\"comparisons\",\n\"medicaldata\"\n  ]\nimage: \"thumbnails/30dcc_2025_01.png\"\nformat:\n  html:\n    toc: true\n    toc-depth: 5\n    code-link: true\n    code-fold: true\n    code-tools: true\n    code-summary: \"Show code\"\n    self-contained: true\n    theme: \n      light: [flatly, assets/styling/custom_styles.scss]\n      dark: [darkly, assets/styling/custom_styles_dark.scss]\neditor_options: \n  chunk_output_type: inline\nexecute: \n  freeze: true                                                  \n  cache: true                                                   \n  error: false\n  message: false\n  warning: false\n  eval: true\nfilters:\n  - social-share\nshare:\n  permalink: \"https://stevenponce.netlify.app/data_visualizations/TidyTuesday/2025/30dcc_2025_01.html\"\n  description: \"Day 1 of #30DayChartChallenge: A visualization of the first controlled clinical trial in history (1757), showing that only citrus effectively treated scurvy. The chart displays fractions of patients' symptom severity across different treatments.\"\n  twitter: true\n  linkedin: true\n  email: true\n  facebook: false\n  reddit: false\n  stumble: false\n  tumblr: false\n  mastodon: true\n  bsky: true\n---\n\n\n\n![A diverging stacked bar chart comparing scurvy treatments from 1757. Only citrus shows 100% of patients with improvement (50% none, 50% mild symptoms), while all other treatments show moderate to severe symptoms. Dilute sulfuric acid shows 50% mild improvement. The chart demonstrates why citrus was the only effective treatment for scurvy.](30dcc_2025_01.png){#fig-1}\n\n### <mark> **Steps to Create this Graphic** </mark>\n\n#### 1. Load Packages & Setup\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## 1. LOAD PACKAGES & SETUP ----\nsuppressPackageStartupMessages({\npacman::p_load(\n  tidyverse,    # Easily Install and Load the 'Tidyverse'\n  ggtext,       # Improved Text Rendering Support for 'ggplot2'\n  showtext,     # Using Fonts More Easily in R Graphs\n  janitor,      # Simple Tools for Examining and Cleaning Dirty Data\n  skimr,        # Compact and Flexible Summaries of Data\n  scales,       # Scale Functions for Visualization\n  lubridate,    # Make Dealing with Dates a Little Easier\n  camcorder     # Record Your Plot History\n)\n})\n\n### |- figure size ----\ngg_record(\n    dir    = here::here(\"temp_plots\"),\n    device = \"png\",\n    width  =  8,\n    height =  8,\n    units  = \"in\",\n    dpi    = 320\n)\n\n# Source utility functions\nsuppressMessages(source(here::here(\"R/utils/fonts.R\")))\nsource(here::here(\"R/utils/social_icons.R\"))\nsource(here::here(\"R/utils/image_utils.R\"))\nsource(here::here(\"R/themes/base_theme.R\"))\n```\n:::\n\n\n\n#### 2. Read in the Data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntt <- tidytuesdayR::tt_load(2023, week = 30) \n\nscurvy <- tt$scurvy |> clean_names()\n\ntidytuesdayR::readme(tt)\nrm(tt)\n```\n:::\n\n\n\n#### 3. Examine the Data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(scurvy)\nskim(scurvy)\n```\n:::\n\n\n\n#### 4. Tidy Data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### |- Tidy ----\n# Define constants upfront\nsymptom_names <- c(\n  gum_rot_d6 = \"Gum Rot\",\n  skin_sores_d6 = \"Skin Sores\", \n  weakness_of_the_knees_d6 = \"Knee Weakness\",\n  lassitude_d6 = \"Lassitude\"\n)\n\ntreatment_names <- c(\n  dilute_sulfuric_acid = \"Dilute Sulfuric Acid\",\n  purgative_mixture = \"Purgative Mixture\",\n  sea_water = \"Sea Water\"\n)\n\n# Treatment effectiveness order \ntreatment_order <- c(\n  \"Citrus\", \"Cider\", \"Dilute Sulfuric Acid\", \n  \"Vinegar\", \"Sea Water\", \"Purgative Mixture\"\n)\n\n# Process scurvy data \ncomplete_diverging_data <- scurvy |>\n  # Convert Likert scales to ordered factors\n  mutate(across(\n    names(symptom_names),\n    \\(x) factor(\n      case_when(\n        str_detect(x, \"0_none\") ~ \"None (0)\",\n        str_detect(x, \"1_mild\") ~ \"Mild (1)\",\n        str_detect(x, \"2_moderate\") ~ \"Moderate (2)\",\n        str_detect(x, \"3_severe\") ~ \"Severe (3)\"\n      ),\n      levels = c(\"None (0)\", \"Mild (1)\", \"Moderate (2)\", \"Severe (3)\")\n    )\n  )) |>\n  # Clean treatment names\n  mutate(\n    treatment_clean = case_when(\n      treatment %in% names(treatment_names) ~ treatment_names[treatment],\n      TRUE ~ str_to_title(treatment)\n    )\n  ) |>\n  # Convert to long format\n  pivot_longer(\n    cols = names(symptom_names),\n    names_to = \"symptom\",\n    values_to = \"severity\"\n  ) |>\n  # Map symptom codes to readable names\n  mutate(symptom = symptom_names[symptom]) |>\n  # Calculate proportions\n  group_by(treatment_clean, symptom) |>\n  count(severity) |>\n  mutate(proportion = n / sum(n)) |>\n  ungroup() |>\n  # Create diverging data structure\n  mutate(\n    position = if_else(\n      severity %in% c(\"None (0)\", \"Mild (1)\"), \n      \"Improved\", \n      \"Problem\"\n    ),\n    plot_proportion = if_else(position == \"Improved\", -proportion, proportion),\n    severity_ordered = factor(\n      severity, \n      levels = c(\"None (0)\", \"Mild (1)\", \"Moderate (2)\", \"Severe (3)\")\n    )\n  ) |>\n  # Ensure all combinations exist (handle missing values)\n  complete(\n    treatment_clean, \n    symptom, \n    severity_ordered,\n    fill = list(proportion = 0, plot_proportion = 0, n = 0)\n  ) |>\n  # Recreate position for new rows\n  mutate(\n    position = case_when(\n      severity_ordered %in% c(\"None (0)\", \"Mild (1)\") ~ \"Improved\",\n      severity_ordered %in% c(\"Moderate (2)\", \"Severe (3)\") ~ \"Problem\",\n      TRUE ~ NA_character_\n    )\n  )\n```\n:::\n\n\n\n#### 5. Visualization Parameters\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### |- plot aesthetics ---- \ncolors <- get_theme_colors(palette = c(\n  \"None (0)\" = \"#1d4e89\",       \n  \"Mild (1)\" = \"#4b86c5\",      \n  \"Moderate (2)\" = \"#e8996f\",  \n  \"Severe (3)\" = \"#d95d33\"      \n  ))  \n\n### |-  titles and caption ----\n# text\ntitle_text    <- str_glue(\"Citrus: The Only Effective Treatment for Scurvy (1757)\") \nsubtitle_text <- str_glue(\"Fractions of patients showing improvement vs. continuing symptoms after treatment\")\n\n# Create caption\ncaption_text <- create_dcc_caption(\n  dcc_year = 2025,\n  dcc_day = 01,\n  source_text =  \"{ medicaldata } R package\" \n)\n\n### |-  fonts ----\nsetup_fonts()\nfonts <- get_font_families()\n\n### |-  plot theme ----\n\n# Start with base theme\nbase_theme <- create_base_theme(colors)\n\n# Add weekly-specific theme elements\nweekly_theme <- extend_weekly_theme(\n  base_theme,\n  theme(\n    # Text styling \n    plot.title = element_text(face = \"bold\", family = fonts$title, size = rel(1.14), margin = margin(b = 10)),\n    plot.subtitle = element_text(family = fonts$subtitle, color = colors$text, size = rel(0.78), margin = margin(b = 20)),\n    \n    # Axis elements\n    axis.title = element_text(color = colors$text, size = rel(0.8)),\n    axis.text.x = element_text(color = colors$text, size = rel(0.7)),\n    axis.text.y = element_text(color = colors$text, size = rel(0.75), face = \"bold\"),\n    \n    # Grid elements\n    panel.grid.major.y = element_blank(),\n    panel.grid.minor = element_blank(),\n    \n    # Legend elements\n    legend.position = \"top\",\n    legend.title = element_text(family = fonts$text, size = rel(0.8)),\n    legend.text = element_text(family = fonts$text, size = rel(0.7)),\n    \n    # Plot margins \n    plot.margin = margin(t = 10, r = 10, b = 10, l = 10),\n  )\n)\n\n# Set theme\ntheme_set(weekly_theme)\n```\n:::\n\n\n\n#### 6. Plot\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### |-  Plot ----\np <- ggplot(\n  complete_diverging_data |>\n    filter(symptom == \"Gum Rot\") |>\n    mutate(treatment_clean = factor(treatment_clean, levels = treatment_order))\n) +\n  # Geoms\n  geom_col(\n    aes(\n      x = treatment_clean,\n      y = plot_proportion,\n      fill = severity_ordered\n    ),\n    position = \"stack\"\n  ) +\n  geom_text(\n    aes(\n      x = treatment_clean,\n      y = plot_proportion,\n      label = ifelse(proportion >= 0.05,\n        scales::percent(abs(proportion),\n          accuracy = 1\n        ), \"\"\n      )\n    ),\n    position = position_stack(vjust = 0.5),\n    color = \"white\",\n    size = 3.5,\n    fontface = \"bold\"\n  ) +\n  # Scales\n  scale_y_continuous(\n    labels = function(x) paste0(abs(x) * 100, \"%\"),\n    limits = c(-1, 1),\n    breaks = seq(-1, 1, 0.25),\n    minor_breaks = NULL\n  ) +\n  scale_fill_manual(\n    values = colors$palette\n  ) +\n  coord_flip(clip = \"off\") +\n  # Labs\n  labs(\n    title = title_text,\n    subtitle = subtitle_text,\n    x = NULL,\n    y = NULL,\n    fill = \"Severity Level\",\n    caption = caption_text\n  ) +\n  # Theme\n  theme(\n    plot.title = element_text(\n      size = rel(1.75),\n      family = fonts$title,\n      face = \"bold\",\n      color = colors$title,\n      margin = margin(t = 5, b = 5)\n    ),\n    plot.subtitle = element_text(\n      size = rel(0.95),\n      family = fonts$subtitle,\n      color = colors$subtitle,\n      lineheight = 1.1,\n      margin = margin(t = 5, b = 5)\n    ),\n    plot.caption = element_markdown(\n      size = rel(.65),\n      family = fonts$caption,\n      color = colors$caption,\n      lineheight = 0.65,\n      hjust = 0.5,\n      halign = 0.5,\n      margin = margin(t = 10, b = 5)\n    ),\n  )\n```\n:::\n\n\n\n#### 7. Save\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### |-  plot image ----  \n\nsave_plot(\n  p, \n  type = \"30daychartchallenge\", \n  year = 2025, \n  day = 01, \n  width = 8, \n  height = 8\n  )\n```\n:::\n\n\n\n#### 8. Session Info\n\n::: {.callout-tip collapse=\"true\"}\n##### Expand for Session Info\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\nR version 4.4.1 (2024-06-14 ucrt)\nPlatform: x86_64-w64-mingw32/x64\nRunning under: Windows 11 x64 (build 22631)\n\nMatrix products: default\n\n\nlocale:\n[1] LC_COLLATE=English_United States.utf8 \n[2] LC_CTYPE=English_United States.utf8   \n[3] LC_MONETARY=English_United States.utf8\n[4] LC_NUMERIC=C                          \n[5] LC_TIME=English_United States.utf8    \n\ntime zone: America/New_York\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices datasets  utils     methods   base     \n\nother attached packages:\n [1] here_1.0.1      camcorder_0.1.0 scales_1.3.0    skimr_2.1.5    \n [5] janitor_2.2.0   showtext_0.9-7  showtextdb_3.0  sysfonts_0.8.9 \n [9] ggtext_0.1.2    lubridate_1.9.3 forcats_1.0.0   stringr_1.5.1  \n[13] dplyr_1.1.4     purrr_1.0.2     readr_2.1.5     tidyr_1.3.1    \n[17] tibble_3.2.1    ggplot2_3.5.1   tidyverse_2.0.0\n\nloaded via a namespace (and not attached):\n [1] gtable_0.3.6       httr2_1.0.6        xfun_0.49          htmlwidgets_1.6.4 \n [5] gh_1.4.1           tzdb_0.4.0         vctrs_0.6.5        tools_4.4.0       \n [9] generics_0.1.3     parallel_4.4.0     curl_6.0.0         gifski_1.32.0-1   \n[13] fansi_1.0.6        pacman_0.5.1       pkgconfig_2.0.3    lifecycle_1.0.4   \n[17] farver_2.1.2       compiler_4.4.0     textshaping_0.4.0  munsell_0.5.1     \n[21] repr_1.1.7         codetools_0.2-20   snakecase_0.11.1   htmltools_0.5.8.1 \n[25] yaml_2.3.10        crayon_1.5.3       pillar_1.9.0       magick_2.8.5      \n[29] commonmark_1.9.2   tidyselect_1.2.1   digest_0.6.37      stringi_1.8.4     \n[33] rsvg_2.6.1         rprojroot_2.0.4    fastmap_1.2.0      grid_4.4.0        \n[37] colorspace_2.1-1   cli_3.6.3          magrittr_2.0.3     base64enc_0.1-3   \n[41] utf8_1.2.4         withr_3.0.2        rappdirs_0.3.3     bit64_4.5.2       \n[45] timechange_0.3.0   rmarkdown_2.29     tidytuesdayR_1.1.2 gitcreds_0.1.2    \n[49] bit_4.5.0          ragg_1.3.3         hms_1.1.3          evaluate_1.0.1    \n[53] knitr_1.49         markdown_1.13      rlang_1.1.4        gridtext_0.1.5    \n[57] Rcpp_1.0.13-1      glue_1.8.0         xml2_1.3.6         renv_1.0.3        \n[61] vroom_1.6.5        svglite_2.1.3      rstudioapi_0.17.1  jsonlite_1.8.9    \n[65] R6_2.5.1           systemfonts_1.1.0 \n```\n\n\n:::\n:::\n\n\n:::\n\n#### 9. GitHub Repository\n\n::: {.callout-tip collapse=\"true\"}\n##### Expand for GitHub Repo\n\nThe complete code for this analysis is available in [`30dcc_2025_01.qmd`](https://github.com/poncest/personal-website/blob/master/data_visualizations/TidyTuesday/2025/30dcc_2025_01.qmd).\n\nFor the full repository, [click here](https://github.com/poncest/personal-website/).\n:::\n\n\n#### 10. References\n::: {.callout-tip collapse=\"true\"}\n##### Expand for References\n\n1. Data Sources:\n   - TidyTuesday 2023 week 30 Scurvy: [Scurvy](https://github.com/rfordatascience/tidytuesday/tree/e0cda77e7b4ca3f7e201f6fe23d9ead080a5a19c/data/2023/2023-07-25)\n\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}