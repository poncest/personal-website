{
  "hash": "5d68e50f50f5660b5460141599bbbb7a",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"NBA Player Archetypes: The Relationship Between Defense and 3-Point Shooting\"\nsubtitle: \"2023-2024 Season | Four Player Archetypes Identified via K-means Clustering\"\ndescription: \"Exploring the relationship between defensive contributions and 3-point shooting ability in NBA players for the 2023-2024 season, using K-means clustering to identify four distinct player archetypes. This visualization reveals how elite defenders rarely excel at 3-point shooting, while the league's best shooters often sacrifice defensive effort, highlighting the rarity and value of two-way stars like Victor Wembanyama.\"\nauthor: \"Steven Ponce\"\ndate: \"2025-04-13\" \ncategories: [\"30DayChartChallenge\", \"Data Visualization\", \"R Programming\", \"2025\"]\ntags: [\n\"NBA\", \"Basketball\", \"Cluster Analysis\", \"K-means\", \"ggplot2\", \"hoopR\", \"Player Analysis\", \"Sports Analytics\", \"Relationships\", \"Clusters\"\n  ]\nimage: \"thumbnails/30dcc_2025_13.png\"\nformat:\n  html:\n    toc: true\n    toc-depth: 5\n    code-link: true\n    code-fold: true\n    code-tools: true\n    code-summary: \"Show code\"\n    self-contained: true\n    theme: \n      light: [flatly, assets/styling/custom_styles.scss]\n      dark: [darkly, assets/styling/custom_styles_dark.scss]\neditor_options: \n  chunk_output_type: inline\nexecute: \n  freeze: true                                                  \n  cache: true                                                   \n  error: false\n  message: false\n  warning: false\n  eval: true\nfilters:\n  - social-share\nshare:\n  permalink: \"https://stevenponce.netlify.app/data_visualizations/TidyTuesday/2025/30dcc_2025_13.html\"\n  description: \"Day 13 of #30DayChartChallenge: Identifying NBA player archetypes through the relationship between defense and 3-point shooting using K-means clustering\"\n  twitter: true\n  linkedin: true\n  email: true\n  facebook: false\n  reddit: false\n  stumble: false\n  tumblr: false\n  mastodon: true\n  bsky: true\n---\n\n\n\n![A scatter plot showing the relationship between NBA players' defensive contributions (steals plus blocks per game) and 3-point shooting percentages. Four distinct clusters identified through K-means clustering reveal player archetypes: Two-Way Stars (upper right), Defensive Specialists (upper left), Offensive Specialists (lower right), and Role Players (lower center). Notable players like Victor Wembanyama stand out as elite two-way performers. Dashed lines indicate league averages for both metrics, creating quadrants with annotations describing each player archetype's characteristics.](30dcc_2025_13.png){#fig-1}\n\n### <mark> **Steps to Create this Graphic** </mark>\n\n#### 1. Load Packages & Setup\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## 1. LOAD PACKAGES & SETUP ----\nsuppressPackageStartupMessages({\npacman::p_load(\n  tidyverse,      # Easily Install and Load the 'Tidyverse'\n  ggtext,         # Improved Text Rendering Support for 'ggplot2'\n  showtext,       # Using Fonts More Easily in R Graphs\n  janitor,        # Simple Tools for Examining and Cleaning Dirty Data\n  skimr,          # Compact and Flexible Summaries of Data\n  scales,         # Scale Functions for Visualization\n  lubridate,      # Make Dealing with Dates a Little Easier\n  hoopR,          # Access Men's Basketball Play by Play Data\n  ggrepel,        # Automatically Position Non-Overlapping Text Labels with 'ggplot2'\n  cluster,        # \"Finding Groups in Data\": Cluster Analysis Extended Rousseeuw etal\n  camcorder       # Record Your Plot History\n  )\n})\n\n### |- figure size ----\ngg_record(\n    dir    = here::here(\"temp_plots\"),\n    device = \"png\",\n    width  = 10,\n    height = 8,\n    units  = \"in\",\n    dpi    = 320\n)\n\n# Source utility functions\nsuppressMessages(source(here::here(\"R/utils/fonts.R\")))\nsource(here::here(\"R/utils/social_icons.R\"))\nsource(here::here(\"R/utils/image_utils.R\"))\nsource(here::here(\"R/themes/base_theme.R\"))\n```\n:::\n\n\n\n#### 2. Read in the Data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Get NBA player data for 2023-2024 season\nplayers_2024_list <- nba_leaguedashplayerstats(season = \"2023-24\")\n\n# Extract the data frame from the response\nplayers_2024 <- players_2024_list$LeagueDashPlayerStats\n```\n:::\n\n\n\n#### 3. Examine the Data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(players_2024)\nskim(players_2024)\n```\n:::\n\n\n\n#### 4. Tidy Data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### |- Tidy ----\nplayer_stats <- players_2024 |>\n  # Make sure numeric columns are actually numeric\n  mutate(\n    GP = as.numeric(GP),\n    MIN = as.numeric(MIN),\n    STL = as.numeric(STL),\n    BLK = as.numeric(BLK),\n    FG3_PCT = as.numeric(FG3_PCT),\n    FT_PCT = as.numeric(FT_PCT)\n  ) |>\n  # Filter for players with meaningful minutes\n  filter(GP >= 40, MIN >= 15) |>\n  # Calculate key metrics\n  mutate(\n    STL_per_game = STL / GP,\n    BLK_per_game = BLK / GP,\n    defensive_contribution = STL_per_game + BLK_per_game\n  ) |>\n  # Select specific columns\n  select(\n    PLAYER_NAME, TEAM_ABBREVIATION, \n    GP, MIN, \n    STL_per_game, BLK_per_game, defensive_contribution,\n    FG3_PCT, FT_PCT\n  )\n\n# Cluster df \ncluster_data <- player_stats |>\n  filter(\n    !is.na(defensive_contribution),\n    !is.na(FG3_PCT),\n    !is.na(FT_PCT)\n  )\n\n# Scale the variables for clustering\nscaled_data <- cluster_data |>\n  select(defensive_contribution, FG3_PCT, FT_PCT) |>\n  scale()\n\n# Apply k-means clustering with k=4\nset.seed(123) \nk <- 4\nkm_result <- kmeans(scaled_data, centers = k, nstart = 25)\n\n# Add cluster assignments back to the data\ncluster_data$cluster <- as.factor(km_result$cluster)\n\n# Descriptive cluster labels\ncenters <- as.data.frame(km_result$centers)\ncolnames(centers) <- c(\"defensive_contribution\", \"FG3_PCT\", \"FT_PCT\")\n\n# Create more meaningful cluster labels\ncluster_labels <- c()\nfor(i in 1:k) {\n  def_val <- centers[i, \"defensive_contribution\"]\n  fg3_val <- centers[i, \"FG3_PCT\"]\n  ft_val <- centers[i, \"FT_PCT\"]\n  \n  if(def_val > 0 && fg3_val > 0 && ft_val > 0) {\n    label <- \"Two-Way Stars\" # Good at everything\n  } else if(def_val > 0 && (fg3_val < 0 || ft_val < 0)) {\n    label <- \"Defensive Specialists\" # Good defense, weaker shooting\n  } else if(def_val < 0 && fg3_val > 0 && ft_val > 0) {\n    label <- \"Offensive Specialists\" # Good shooting, weaker defense\n  } else {\n    label <- \"Role Players\" # Average or below average\n  }\n  cluster_labels[i] <- label\n}\n\n# Map the labels to clusters\ncluster_mapping <- setNames(cluster_labels, 1:k)\ncluster_data$cluster_label <- cluster_mapping[cluster_data$cluster]\n\n# Identify top players in each cluster (for labeling in the plot)\ntop_players <- cluster_data |>    \n  group_by(cluster) |>\n  arrange(desc(defensive_contribution + FG3_PCT + FT_PCT)) |>\n  slice_head(n = 3) |>\n  ungroup()\n```\n:::\n\n\n\n#### 5. Visualization Parameters\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### |- plot aesthetics ---- \ncolors <- get_theme_colors(\n  palette = c(\n    \"#D55E00\",\n    \"#CC79A7\",\n    \"#009E73\",\n    \"#0072B2\"\n    )  \n  )\n\n### |-  titles and caption ----\n# text\ntitle_text    <- str_wrap(\"NBA Player Archetypes: The Relationship Between Defense and 3-Point Shooting\",\n                          width = 55) \nsubtitle_text <- str_wrap(\"2023-2024 Season | Four Player Archetypes Identified via K-means Clustering\", \n                          width = 100)\n\n# Create caption\ncaption_text <- create_dcc_caption(\n  dcc_year = 2025,\n  dcc_day = 13,\n  source_text =  \"ESPN via { hoopR } package\" \n)\n\n### |-  fonts ----\nsetup_fonts()\nfonts <- get_font_families()\n\n### |-  plot theme ----\n\n# Start with base theme\nbase_theme <- create_base_theme(colors)\n\n# Add weekly-specific theme elements\nweekly_theme <- extend_weekly_theme(\n  base_theme,\n  theme(\n    # Text styling \n    plot.title = element_text(face = \"bold\", family = fonts$title, size = rel(1.14), margin = margin(b = 10)),\n    plot.subtitle = element_text(family = fonts$subtitle, color = colors$text, size = rel(0.78), margin = margin(b = 20)),\n    \n    # Axis elements\n    axis.title = element_text(color = colors$text, size = rel(0.8)),\n    axis.text = element_text(color = colors$text, size = rel(0.7)),\n    axis.text.y = element_text(color = colors$text, size = rel(0.68)),\n\n    # Grid elements\n    panel.grid.minor = element_blank(),\n\n    # Legend elements\n    legend.title = element_text(family = fonts$text, size = rel(0.8)),\n    legend.text = element_text(family = fonts$text, size = rel(0.7)),\n\n    # Plot margins \n    plot.margin = margin(t = 10, r = 20, b = 10, l = 20),\n  )\n)\n\n# Set theme\ntheme_set(weekly_theme)\n```\n:::\n\n\n\n#### 6. Plot\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### |-  Plot ----\np <- ggplot(\n  cluster_data, \n  aes(x = FG3_PCT, y = defensive_contribution, \n      color = cluster_label)\n) +\n  # Geoms\n  geom_point(\n    alpha = 0.5, \n    size = 3\n  ) +\n  geom_text_repel( # Label top players\n    data = top_players,\n    aes(label = PLAYER_NAME),\n    size = 3,\n    seed = 123,\n    max.overlaps = 15,\n    box.padding = 0.5,\n    segment.color = \"grey50\"\n  ) +\n  geom_hline( # average lines \n    yintercept = mean(cluster_data$defensive_contribution),\n    linetype = \"dashed\",\n    color = \"grey50\",\n    alpha = 0.5\n  ) +\n  geom_vline(\n    xintercept = mean(cluster_data$FG3_PCT),\n    linetype = \"dashed\",\n    alpha = 0.5\n  ) +\n  # Scales\n  scale_y_continuous(\n    limits = c(-0.05, 5),\n    breaks = pretty_breaks()\n  ) +\n  scale_x_continuous(\n    limits = c(-0.05, 1),\n    breaks = pretty_breaks()\n  ) +\n  scale_color_manual(values = colors$palette) +\n  # Labs\n  labs(\n    title = title_text,\n    subtitle = subtitle_text,\n    caption = caption_text,\n    x = \"3-Point Field Goal Percentage (FG3%)\",\n    y = \"Defensive Contribution (STL + BLK per game)\",\n    color = \"Player Archetype\"\n  ) +\n  # Annotate\n  annotate(\"text\", x = -0.05, y = 3.75, \n           label = \"Elite defenders rarely\\nshoot well from deep\", \n           size = 3.5, fontface = \"italic\", color = colors$palette[1], hjust = 0) +\n  \n  annotate(\"text\", x = 0.45, y = 3.65, \n           label = \"Two-Way Stars are rare\\nand highly valuable\", \n           size = 3.5, fontface = \"italic\", color = colors$palette[2], hjust = 0) +\n  \n  annotate(\"text\", x = 0.02, y = 0, \n           label = \"Role players contribute\\nin less measurable ways\", \n           size = 3.5, fontface = \"italic\", color = colors$palette[3], hjust = 0) +\n  \n  annotate(\"text\", x = 0.65, y = 1, \n           label = \"Elite shooters often\\nsacrifice defensive effort\", \n           size = 3.5, fontface = \"italic\", color = colors$palette[4], hjust = 0) +\n  \n  annotate(\"text\", x = 0.03, y = 4, label = \"Defensive Specialists\", \n           color = colors$palette[1], fontface = \"bold\", size = 4) +\n  \n  annotate(\"text\", x = 0.35, y = 3.8, label = \"Two-Way Stars\", \n           color = colors$palette[2], fontface = \"bold\", size = 4) +\n  \n  annotate(\"text\", x = 0.08, y = 0.25, label = \"Role Players\", \n           color = colors$palette[3], fontface = \"bold\", size = 4) +\n  \n  annotate(\"text\", x = 0.75, y = 1.3, label = \"Offensive Specialists\", \n           color = colors$palette[4], fontface = \"bold\", size = 4) +\n  \n  # Theme\n  theme(\n    plot.title = element_text(\n      size = rel(2),\n      family = fonts$title,\n      face = \"bold\",\n      color = colors$title,\n      margin = margin(t = 5, b = 5)\n    ),\n    plot.subtitle = element_text(\n      size = rel(0.95),\n      family = fonts$subtitle,\n      color = alpha(colors$subtitle, 0.8),\n      lineheight = 1.2,\n      margin = margin(t = 5, b = 10)\n    ),\n    plot.caption = element_markdown(\n      size = rel(0.6),\n      family = fonts$caption,\n      color = colors$caption,\n      lineheight = 0.65,\n      hjust = 0.5,\n      halign = 0.5,\n      margin = margin(t = 20, b = 5)\n    ),\n  )\n```\n:::\n\n\n\n#### 7. Save\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### |-  plot image ----  \n\nsave_plot(\n  p, \n  type = \"30daychartchallenge\", \n  year = 2025, \n  day = 13, \n  width = 10, \n  height = 8\n  )\n```\n:::\n\n\n\n#### 8. Session Info\n\n::: {.callout-tip collapse=\"true\"}\n##### Expand for Session Info\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\nR version 4.4.1 (2024-06-14 ucrt)\nPlatform: x86_64-w64-mingw32/x64\nRunning under: Windows 11 x64 (build 22631)\n\nMatrix products: default\n\n\nlocale:\n[1] LC_COLLATE=English_United States.utf8 \n[2] LC_CTYPE=English_United States.utf8   \n[3] LC_MONETARY=English_United States.utf8\n[4] LC_NUMERIC=C                          \n[5] LC_TIME=English_United States.utf8    \n\ntime zone: America/New_York\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices datasets  utils     methods   base     \n\nother attached packages:\n [1] here_1.0.1      camcorder_0.1.0 cluster_2.1.6   ggrepel_0.9.6  \n [5] hoopR_2.1.0     scales_1.3.0    skimr_2.1.5     janitor_2.2.0  \n [9] showtext_0.9-7  showtextdb_3.0  sysfonts_0.8.9  ggtext_0.1.2   \n[13] lubridate_1.9.3 forcats_1.0.0   stringr_1.5.1   dplyr_1.1.4    \n[17] purrr_1.0.2     readr_2.1.5     tidyr_1.3.1     tibble_3.2.1   \n[21] ggplot2_3.5.1   tidyverse_2.0.0\n\nloaded via a namespace (and not attached):\n [1] tidyselect_1.2.1    farver_2.1.2        fastmap_1.2.0      \n [4] pacman_0.5.1        promises_1.3.0      digest_0.6.37      \n [7] timechange_0.3.0    lifecycle_1.0.4     rsvg_2.6.1         \n[10] processx_3.8.4      magrittr_2.0.3      compiler_4.4.0     \n[13] rlang_1.1.4         tools_4.4.0         utf8_1.2.4         \n[16] yaml_2.3.10         data.table_1.16.2   knitr_1.49         \n[19] htmlwidgets_1.6.4   curl_6.0.0          xml2_1.3.6         \n[22] repr_1.1.7          websocket_1.4.2     withr_3.0.2        \n[25] grid_4.4.0          fansi_1.0.6         colorspace_2.1-1   \n[28] future_1.34.0       globals_0.16.3      cli_3.6.3          \n[31] rmarkdown_2.29      ragg_1.3.3          generics_0.1.3     \n[34] RcppParallel_5.1.10 rstudioapi_0.17.1   httr_1.4.7         \n[37] tzdb_0.4.0          commonmark_1.9.2    chromote_0.4.0     \n[40] rvest_1.0.4         parallel_4.4.0      base64enc_0.1-3    \n[43] vctrs_0.6.5         jsonlite_1.8.9      hms_1.1.3          \n[46] listenv_0.9.1       systemfonts_1.1.0   magick_2.8.5       \n[49] glue_1.8.0          parallelly_1.43.0   gifski_1.32.0-1    \n[52] codetools_0.2-20    ps_1.8.1            stringi_1.8.4      \n[55] gtable_0.3.6        later_1.3.2         munsell_0.5.1      \n[58] furrr_0.3.1         pillar_1.9.0        htmltools_0.5.8.1  \n[61] R6_2.5.1            textshaping_0.4.0   rprojroot_2.0.4    \n[64] evaluate_1.0.1      markdown_1.13       gridtext_0.1.5     \n[67] snakecase_0.11.1    renv_1.0.3          Rcpp_1.0.13-1      \n[70] svglite_2.1.3       xfun_0.49           pkgconfig_2.0.3    \n```\n\n\n:::\n:::\n\n\n:::\n\n#### 9. GitHub Repository\n\n::: {.callout-tip collapse=\"true\"}\n##### Expand for GitHub Repo\n\nThe complete code for this analysis is available in [`30dcc_2025_13.qmd`](https://github.com/poncest/personal-website/blob/master/data_visualizations/TidyTuesday/2025/30dcc_2025_13.qmd).\n\nFor the full repository, [click here](https://github.com/poncest/personal-website/).\n:::\n\n\n#### 10. References\n::: {.callout-tip collapse=\"true\"}\n##### Expand for References\n\n1. Data Sources:\n   - ESPN via { hoopR } package: [hoopR](https://github.com/sportsdataverse/hoopR)\n  \n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}