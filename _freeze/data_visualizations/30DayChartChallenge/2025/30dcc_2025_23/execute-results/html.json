{
  "hash": "1c3ff4fc42da77cbaf3934c9d1e9248e",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Pharmaceutical Giants Stock Performance (2018-2025)\"\nsubtitle: \"Log scale reveals growth patterns during pre-pandemic, pandemic, and recovery periods\"\ndescription: \"A time series visualization examining pharmaceutical giants' stock performance from 2018-2025 using a logarithmic scale to highlight relative growth patterns. This visualization reveals how major pharma companies navigated market volatility through the pre-pandemic period, COVID-19 disruption, and subsequent recovery years.\"\ndate: \"2025-04-23\" \ncategories: [\"30DayChartChallenge\", \"Data Visualization\", \"R Programming\", \"2025\"]\ntags: [\n\"tidyquant\", \"ggplot2\", \"financial-data\", \"log-scale\", \"time-series\", \"pharmaceutical-industry\", \"stock-performance\", \"pandemic-impact\", \"market-trends\", \"directlabels\", \"data-storytelling\"\n  ]\nimage: \"thumbnails/30dcc_2025_23.png\"\nformat:\n  html:\n    toc: true\n    toc-depth: 5\n    code-link: true\n    code-fold: true\n    code-tools: true\n    code-summary: \"Show code\"\n    self-contained: true\n    theme: \n      light: [flatly, assets/styling/custom_styles.scss]\n      dark: [darkly, assets/styling/custom_styles_dark.scss]\neditor_options: \n  chunk_output_type: inline\nexecute: \n  freeze: true                                                  \n  cache: true                                                   \n  error: false\n  message: false\n  warning: false\n  eval: true\nfilters:\n  - social-share\nshare:\n  permalink: \"https://stevenponce.netlify.app/data_visualizations/TidyTuesday/2025/30dcc_2025_23.html\"\n  description: \"Day 23 of #30DayChartChallenge: Exploring pharmaceutical giants' stock performance using logarithmic scaling to reveal growth patterns across pandemic and recovery periods\"\n  twitter: true\n  linkedin: true\n  email: true\n  facebook: false\n  reddit: false\n  stumble: false\n  tumblr: false\n  mastodon: true\n  bsky: true\n---\n\n\n\n![Line chart showing pharmaceutical giants' stock performance from 2018-2025 on a logarithmic scale. The chart displays five companies (LLY, ABBV, MRK, BMY, PFE) with Eli Lilly (LLY) showing the strongest growth, reaching nearly $1,000 by 2025. The COVID-19 pandemic period is highlighted with a pink vertical band in 2020. All companies experienced volatility during this time, with different recovery patterns afterward.](30dcc_2025_23.png){#fig-1}\n\n### <mark> **Steps to Create this Graphic** </mark>\n\n#### 1. Load Packages & Setup\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## 1. LOAD PACKAGES & SETUP ----\nsuppressPackageStartupMessages({\npacman::p_load(\n  tidyverse,      # Easily Install and Load the 'Tidyverse'\n  ggtext,         # Improved Text Rendering Support for 'ggplot2'\n  showtext,       # Using Fonts More Easily in R Graphs\n  janitor,        # Simple Tools for Examining and Cleaning Dirty Data\n  skimr,          # Compact and Flexible Summaries of Data\n  scales,         # Scale Functions for Visualization\n  lubridate,      # Make Dealing with Dates a Little Easier\n  tidyquant,      # Tidy Quantitative Financial Analysis # Tidy Quantitative Financial Analysis # Tidy Quantitative Financial Analysis # Tidy Quantitative Financial Analysis # Tidy Quantitative Financial Analysis\n  ggrepel,        # Automatically Position Non-Overlapping Text Labels with 'ggplot2'\n  camcorder       # Record Your Plot History\n  )\n})\n\n### |- figure size ----\ngg_record(\n    dir    = here::here(\"temp_plots\"),\n    device = \"png\",\n    width  = 8,\n    height = 8,\n    units  = \"in\",\n    dpi    = 320\n)\n\n# Source utility functions\nsuppressMessages(source(here::here(\"R/utils/fonts.R\")))\nsource(here::here(\"R/utils/social_icons.R\"))\nsource(here::here(\"R/utils/image_utils.R\"))\nsource(here::here(\"R/themes/base_theme.R\"))\n```\n:::\n\n\n\n#### 2. Read in the Data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Define timeframe\nend_date <- Sys.Date()\nstart_date <- end_date - years(7)\n\n# Pharmaceutical companies\npharma_symbols <- c(\"PFE\", \"MRK\", \"ABBV\", \"LLY\", \"BMY\")\n\n# Get the stock data\npharma_data <- tq_get(\n  pharma_symbols, \n  from = start_date,\n  to = end_date,\n  get = \"stock.prices\"\n  )\n```\n:::\n\n\n\n#### 3. Examine the Data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(pharma_data)\nskim(pharma_data)\n```\n:::\n\n\n\n#### 4. Tidy Data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### |- Tidy ----\n# Get the last data point for each company for labeling\nlabel_data <- pharma_data |>  \n  group_by(symbol) |>\n  filter(date == max(date)) |>\n  ungroup()\n```\n:::\n\n\n\n#### 5. Visualization Parameters\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### |-  plot aesthetics ----\ncolors <- get_theme_colors(\n  palette = c(\n    \"PFE\" = \"#0000c6\",           \n    \"MRK\" = \"#00857c\",            \n    \"ABBV\" = \"#061d49\",          \n    \"LLY\" = \"#d52b1e\",        \n    \"BMY\" = \"#be2bba\"\n  )\n)\n\n### |-  titles and caption ----\n# text\ntitle_text    <- str_wrap(\"Pharmaceutical Giants Stock Performance (2018-2025)\",\n                          width = 55) \n\nsubtitle_text <- str_wrap(\"Log scale reveals growth patterns during pre-pandemic, pandemic, and recovery periods\",\n                          width = 85)\n\ncaption_text <- create_dcc_caption(\n  dcc_year = 2025,\n  dcc_day = 23,\n  source_text =  \"Yahoo Finance via { tidyquant }\" \n)\n\n### |-  fonts ----\nsetup_fonts()\nfonts <- get_font_families()\n\n### |-  plot theme ----\n\n# Start with base theme\nbase_theme <- create_base_theme(colors)\n\n# Add weekly-specific theme elements\nweekly_theme <- extend_weekly_theme(\n  base_theme,\n  theme(\n    # Text styling \n    plot.title = element_text(face = \"bold\", family = fonts$title, size = rel(1.14), margin = margin(b = 10)),\n    plot.subtitle = element_text(family = fonts$subtitle, color = colors$text, size = rel(0.78), margin = margin(b = 20)),\n    \n    # Axis elements\n    axis.title = element_text(color = colors$text, size = rel(0.8)),\n    axis.text = element_text(color = colors$text, size = rel(0.7)),\n    \n    axis.line.x = element_line(color = \"gray50\", linewidth = .2),\n    \n    # Grid elements\n    panel.grid.minor = element_line(color = \"gray65\", linewidth = 0.05),\n    panel.grid.major = element_line(color = \"gray65\", linewidth = 0.05),\n    \n    # Plot margins \n    plot.margin = margin(t = 10, r = 20, b = 10, l = 20),\n  )\n)\n\n# Set theme\ntheme_set(weekly_theme)\n```\n:::\n\n\n\n#### 6. Plot\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### |-  Plot ----\np <- ggplot() +\n  # Geoms\n  geom_line(\n    data = pharma_data, \n    aes(x = date, y = adjusted, color = symbol),\n    linewidth = 0.6\n  ) +\n  geom_text_repel(\n    data = label_data,\n    aes(x = date, y = adjusted, label = symbol, color = symbol),\n    nudge_x = 70,  \n    hjust = 0,\n    segment.size = 0.5,\n    direction = \"y\",\n    box.padding = 0.5,\n    segment.alpha = 0.6,\n    fontface = \"bold\",\n    size = 3.5\n  ) +\n  # Annotate\n  annotate(\n    \"rect\", \n    xmin = as.Date(\"2020-03-01\"), \n    xmax = as.Date(\"2020-12-01\"),\n    ymin = 10, \n    ymax = 1000,\n    alpha = 0.1, \n    fill = \"red\"\n  ) +\n  annotate(\n    \"text\", \n    x = as.Date(\"2020-07-01\"), \n    y = 15, \n    label = \"COVID-19\\nPandemic\", \n    color = \"darkred\",\n    size = 3\n  ) +\n  annotate(\n    \"label\", \n    x = as.Date(\"2018-04-01\"), \n    y = 900, \n    label = \"LLY = Eli Lilly\\nABBV = AbbVie\\nMRK = Merck\\nBMY = Bristol Myers Squibb\\nPFE = Pfizer\",\n    hjust = 0, \n    vjust = 1,\n    size = 3,\n    color = \"gray30\",\n    fill = \"white\",\n    alpha = 0.8,\n    label.size = 0.5\n  ) +\n  # Scale\n  scale_x_date(\n    date_breaks = \"1 year\", \n    date_labels = \"%Y\",\n    expand = expansion(mult = c(0.01, 0.08))\n  ) +\n  scale_y_log10(\n    labels = scales::dollar_format(accuracy = 1)\n  ) +\n  scale_color_manual(values = colors$palette) +\n  coord_cartesian(\n    xlim = c(start_date, end_date + days(10))\n  ) +\n  # Labs\n  labs(\n    title = title_text,\n    subtitle = subtitle_text,\n    caption = caption_text,\n    x = NULL,\n    y = \"Price (log scale)\",\n  ) +\n  # Theme\n  theme(\n    plot.title = element_text(\n      size = rel(1.6),\n      family = fonts$title,\n      face = \"bold\",\n      color = colors$title,\n      margin = margin(t = 5, b = 5)\n    ),\n    plot.subtitle = element_text(\n      size = rel(0.85),\n      family = fonts$subtitle,\n      color = colors$subtitle,\n      lineheight = 1.2,\n      margin = margin(t = 5, b = 15)\n    ),\n    plot.caption = element_markdown(\n      size = rel(0.55),\n      family = fonts$caption,\n      color = colors$caption,\n      lineheight = 0.65,\n      hjust = 0.5,\n      halign = 0.5,\n      margin = margin(t = 10, b = 5)\n    ),\n  )\n```\n:::\n\n\n\n#### 7. Save\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### |-  plot image ----  \nsave_plot(\n  p, \n  type = \"30daychartchallenge\", \n  year = 2025, \n  day = 23, \n  width = 8, \n  height = 8\n  )\n```\n:::\n\n\n\n#### 8. Session Info\n\n::: {.callout-tip collapse=\"true\"}\n##### Expand for Session Info\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\nR version 4.4.1 (2024-06-14 ucrt)\nPlatform: x86_64-w64-mingw32/x64\nRunning under: Windows 11 x64 (build 22631)\n\nMatrix products: default\n\n\nlocale:\n[1] LC_COLLATE=English_United States.utf8 \n[2] LC_CTYPE=English_United States.utf8   \n[3] LC_MONETARY=English_United States.utf8\n[4] LC_NUMERIC=C                          \n[5] LC_TIME=English_United States.utf8    \n\ntime zone: America/New_York\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices datasets  utils     methods   base     \n\nother attached packages:\n [1] here_1.0.1                 camcorder_0.1.0           \n [3] ggrepel_0.9.6              PerformanceAnalytics_2.0.8\n [5] quantmod_0.4.26            TTR_0.24.4                \n [7] xts_0.14.1                 zoo_1.8-12                \n [9] tidyquant_1.0.11           scales_1.3.0              \n[11] skimr_2.1.5                janitor_2.2.0             \n[13] showtext_0.9-7             showtextdb_3.0            \n[15] sysfonts_0.8.9             ggtext_0.1.2              \n[17] lubridate_1.9.3            forcats_1.0.0             \n[19] stringr_1.5.1              dplyr_1.1.4               \n[21] purrr_1.0.2                readr_2.1.5               \n[23] tidyr_1.3.1                tibble_3.2.1              \n[25] ggplot2_3.5.1              tidyverse_2.0.0           \n\nloaded via a namespace (and not attached):\n [1] rlang_1.1.6         magrittr_2.0.3      furrr_0.3.1        \n [4] snakecase_0.11.1    compiler_4.4.0      systemfonts_1.1.0  \n [7] vctrs_0.6.5         quadprog_1.5-8      pkgconfig_2.0.3    \n[10] fastmap_1.2.0       magick_2.8.5        utf8_1.2.4         \n[13] rmarkdown_2.29      markdown_1.13       prodlim_2024.06.25 \n[16] tzdb_0.5.0          ragg_1.3.3          xfun_0.49          \n[19] jsonlite_1.8.9      recipes_1.2.1       parallel_4.4.0     \n[22] R6_2.5.1            stringi_1.8.4       rsample_1.3.0      \n[25] parallelly_1.43.0   rpart_4.1.23        Rcpp_1.0.13-1      \n[28] knitr_1.49          future.apply_1.11.3 base64enc_0.1-3    \n[31] pacman_0.5.1        Matrix_1.7-0        splines_4.4.0      \n[34] nnet_7.3-19         timechange_0.3.0    tidyselect_1.2.1   \n[37] rstudioapi_0.17.1   yaml_2.3.10         timeDate_4041.110  \n[40] codetools_0.2-20    curl_6.0.0          listenv_0.9.1      \n[43] lattice_0.22-6      withr_3.0.2         evaluate_1.0.1     \n[46] timetk_2.9.0        future_1.34.0       survival_3.5-8     \n[49] xml2_1.3.6          pillar_1.9.0        renv_1.0.3         \n[52] generics_0.1.3      rprojroot_2.0.4     hms_1.1.3          \n[55] commonmark_1.9.2    munsell_0.5.1       globals_0.16.3     \n[58] class_7.3-22        glue_1.8.0          tools_4.4.0        \n[61] data.table_1.16.2   gower_1.0.2         grid_4.4.0         \n[64] RobStatTM_1.0.11    ipred_0.9-15        colorspace_2.1-1   \n[67] repr_1.1.7          cli_3.6.4           textshaping_0.4.0  \n[70] rsvg_2.6.1          fansi_1.0.6         svglite_2.1.3      \n[73] lava_1.8.1          gtable_0.3.6        digest_0.6.37      \n[76] farver_2.1.2        gifski_1.32.0-1     htmlwidgets_1.6.4  \n[79] htmltools_0.5.8.1   lifecycle_1.0.4     hardhat_1.4.1      \n[82] gridtext_0.1.5      MASS_7.3-60.2      \n```\n\n\n:::\n:::\n\n\n:::\n\n#### 9. GitHub Repository\n\n::: {.callout-tip collapse=\"true\"}\n##### Expand for GitHub Repo\n\nThe complete code for this analysis is available in [`30dcc_2025_23.qmd`](https://github.com/poncest/personal-website/blob/master/data_visualizations/TidyTuesday/2025/30dcc_2025_23.qmd).\n\nFor the full repository, [click here](https://github.com/poncest/personal-website/).\n:::\n\n\n#### 10. References\n::: {.callout-tip collapse=\"true\"}\n##### Expand for References\n\n1. Data Sources:\n   - Yahoo Finance via { tidyquant } [{ tidyquant }](https://business-science.github.io/tidyquant/)\n  \n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}