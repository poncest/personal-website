{
  "hash": "8884e4195954c6e986b5e982c58aa2c0",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"NBA 3-Point Shooting Efficiency: Top 4 Teams\"\nsubtitle: \"7-Game rolling averages showing shooting trends throughout the 2023-2024 season\"\ndescription: \"Exploring NBA 3-point shooting efficiency through smoothed time series visualization, showing how top teams' performance fluctuated throughout the 2023-2024 season. Created for Day 19 of the #30DayChartChallenge focusing on time series data with smoothing techniques.\"\ndate: \"2025-04-19\" \ncategories: [\"30DayChartChallenge\", \"Data Visualization\", \"R Programming\", \"2025\"]\ntags: [\n\"ggplot2\", \"hoopR\", \"timeseries\", \"smooth\", \"NBA\", \"basketball\", \"sports analytics\", \"rolling average\", \"facets\", \"ggh4x\"\n  ]\nimage: \"thumbnails/30dcc_2025_19.png\"\nformat:\n  html:\n    toc: true\n    toc-depth: 5\n    code-link: true\n    code-fold: true\n    code-tools: true\n    code-summary: \"Show code\"\n    self-contained: true\n    theme: \n      light: [flatly, assets/styling/custom_styles.scss]\n      dark: [darkly, assets/styling/custom_styles_dark.scss]\neditor_options: \n  chunk_output_type: inline\nexecute: \n  freeze: true                                                  \n  cache: true                                                   \n  error: false\n  message: false\n  warning: false\n  eval: true\nfilters:\n  - social-share\nshare:\n  permalink: \"https://stevenponce.netlify.app/data_visualizations/TidyTuesday/2025/30dcc_2025_19.html\"\n  description: \"Day 19 of #30DayChartChallenge: Time Series & Smooth - Visualizing NBA 3-point shooting efficiency with 7-game rolling averages for the top 4 teams in the 2023-2024 season\"\n  twitter: true\n  linkedin: true\n  email: true\n  facebook: false\n  reddit: false\n  stumble: false\n  tumblr: false\n  mastodon: true\n  bsky: true\n---\n\n\n\n![A 2x2 grid showing 7-game rolling averages of 3-point shooting percentages for four NBA teams (Celtics, Suns, Thunder, and Timberwolves) during the 2023-2024 season. Each panel displays individual game data as gray dots with a colored trend line representing the rolling average. ](30dcc_2025_19.png){#fig-1}\n\n### <mark> **Steps to Create this Graphic** </mark>\n\n#### 1. Load Packages & Setup\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## 1. LOAD PACKAGES & SETUP ----\nsuppressPackageStartupMessages({\npacman::p_load(\n  tidyverse,      # Easily Install and Load the 'Tidyverse'\n  ggtext,         # Improved Text Rendering Support for 'ggplot2'\n  showtext,       # Using Fonts More Easily in R Graphs\n  janitor,        # Simple Tools for Examining and Cleaning Dirty Data\n  skimr,          # Compact and Flexible Summaries of Data\n  scales,         # Scale Functions for Visualization\n  lubridate,      # Make Dealing with Dates a Little Easier\n  hoopR,          # Access Men's Basketball Play by Play Data\n  zoo,            # S3 Infrastructure for Regular and Irregular Time Series (Z's Ordered Observations)\n  ggh4x,          # Hacks for 'ggplot2'\n  camcorder       # Record Your Plot History\n  )\n})\n\n### |- figure size ----\ngg_record(\n    dir    = here::here(\"temp_plots\"),\n    device = \"png\",\n    width  = 8,\n    height = 8,\n    units  = \"in\",\n    dpi    = 320\n)\n\n# Source utility functions\nsuppressMessages(source(here::here(\"R/utils/fonts.R\")))\nsource(here::here(\"R/utils/social_icons.R\"))\nsource(here::here(\"R/utils/image_utils.R\"))\nsource(here::here(\"R/themes/base_theme.R\"))\n```\n:::\n\n\n\n#### 2. Read in the Data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load player box scores\nplayer_boxes <- load_nba_player_box(seasons = 2024)\n```\n:::\n\n\n\n#### 3. Examine the Data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(player_boxes)\nskim(player_boxes)\n```\n:::\n\n\n\n#### 4. Tidy Data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### |- Tidy ----\n# Calculate team season averages\nteam_season_stats <- player_boxes |>        \n  group_by(team_name) |>\n  summarize(\n    games = n_distinct(game_id),\n    three_pt_made = sum(three_point_field_goals_made, na.rm = TRUE),\n    three_pt_attempts = sum(three_point_field_goals_attempted, na.rm = TRUE),\n    three_pt_pct = (three_pt_made / three_pt_attempts) * 100,\n    .groups = \"drop\"\n  ) |>\n  filter(games >= 70) |>  # Ensure sufficient games \n  arrange(desc(three_pt_pct))\n\n# Top 4 teams by 3PT percentage\ntop4_teams <- team_season_stats |> \n  slice_head(n = 4) |> \n  pull(team_name)\n\n# Process game-by-game data for \nteam_shooting <- player_boxes |>\n  filter(team_name %in% top4_teams) |>\n  group_by(team_name, game_date) |>\n  summarize(\n    three_point_made = sum(three_point_field_goals_made, na.rm = TRUE),\n    three_point_attempts = sum(three_point_field_goals_attempted, na.rm = TRUE),\n    .groups = \"drop\"\n  ) |>\n  mutate(\n    three_pt_pct = (three_point_made / three_point_attempts) * 100,\n    game_date = as.Date(game_date)\n  ) |>\n  filter(!is.na(three_pt_pct), !is.infinite(three_pt_pct))\n\n# Calculate team averages for reference lines\nteam_averages <- team_shooting |>\n  group_by(team_name) |>\n  summarize(\n    avg_pct = mean(three_pt_pct, na.rm = TRUE),\n    .groups = \"drop\"\n    )\n\n# Calculate 7-game rolling average\nteam_rolling_data <- team_shooting |>\n  arrange(team_name, game_date) |>\n  group_by(team_name) |>\n  mutate(\n    rolling_avg_pct = rollmean(three_pt_pct, k = 7, fill = NA, align = \"right\"),\n    .groups = \"drop\"\n    )\n```\n:::\n\n\n\n#### 5. Visualization Parameters\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### |-  plot aesthetics ----\ncolors <- get_theme_colors(\n  palette = c(\n    \"Celtics\" = \"#007932\",\n    \"Suns\" = \"#1D1160\", \n    \"Thunder\" =  \"#007cc2\",\n    \"Timberwolves\" = \"#236192\"\n  )\n)\n\n### |-  titles and caption ----\n# text\ntitle_text    <- str_wrap(\"NBA 3-Point Shooting Efficiency: Top 4 Teams\",\n                          width = 55) \n\nsubtitle_text <- str_wrap(\"7-Game rolling averages showing shooting trends throughout the 2023-2024 season\",\n                          width = 85)\n\ncaption_text <- create_dcc_caption(\n  dcc_year = 2025,\n  dcc_day = 19,\n  source_text =  \"ESPN via { hoopR } package\" \n)\n\n### |-  fonts ----\nsetup_fonts()\nfonts <- get_font_families()\n\n### |-  plot theme ----\n\n# Start with base theme\nbase_theme <- create_base_theme(colors)\n\n# Add weekly-specific theme elements\nweekly_theme <- extend_weekly_theme(\n  base_theme,\n  theme(\n\n    # Axis elements\n    axis.title.y = element_text(color = colors$text, size = rel(0.8), margin = margin(r = 10)),\n    axis.text = element_text(color = colors$text, size = rel(0.7)),\n\n    # Grid elements\n    panel.grid.minor = element_blank(),\n    panel.grid.major.x = element_blank(),\n    panel.grid.major.y = element_line(color = \"gray92\"),\n\n    # Legend elements\n    legend.position = \"plot\",\n    legend.title = element_blank(),\n    legend.text = element_text(family = fonts$text, size = rel(0.7)),\n    \n    # Facet elements\n    strip.background = element_rect(fill = \"gray90\", color = NA),\n    strip.text = element_text(face = \"bold\", size = rel(1), margin = margin(10, 0, 10, 0)),\n    \n    # Plot margins \n    plot.margin = margin(t = 10, r = 20, b = 10, l = 20),\n  )\n)\n\n# Set theme\ntheme_set(weekly_theme)\n```\n:::\n\n\n\n#### 6. Plot\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### |-  Plot ----\np <- ggplot(team_rolling_data, aes(x = game_date)) +\n  # Geoms\n  geom_point(aes(y = three_pt_pct), alpha = 0.3, size = 2, color = \"gray50\") +\n  geom_line(aes(y = rolling_avg_pct, color = team_name), linewidth = 2) +\n  geom_hline(\n    data = team_averages, aes(yintercept = avg_pct),\n    linetype = \"dashed\", color = \"gray30\", linewidth = 0.7\n  ) +\n  # Scales\n  scale_x_date(\n    date_breaks = \"2 month\",\n    date_labels = \"%b\",\n    limits = c(min(team_shooting$game_date), max(team_shooting$game_date))\n  ) +\n  scale_y_continuous(\n    limits = c(20, 60),\n    breaks = seq(20, 60, by = 10),\n    labels = function(x) paste0(x, \"%\")\n  ) +\n  scale_color_manual(values = colors$palette) +\n  # Labs\n  labs(\n    title = title_text,\n    subtitle = subtitle_text,\n    caption = caption_text,\n    x = NULL,\n    y = \"3-Point Shooting %\",\n  ) +\n  # Facet\n  facet_wrap2(\n    ~team_name,\n    ncol = 2,\n    strip = strip_themed(\n      background_x = elem_list_rect(fill = colors$palette[levels(factor(team_rolling_data$team_name))]),\n      text_x = elem_list_text(color = \"white\", face = \"bold\", size = 14)\n    )\n  ) +\n  # Theme\n  theme(\n    plot.title = element_text(\n      size = rel(1.8),\n      family = fonts$title,\n      face = \"bold\",\n      color = colors$title,\n      margin = margin(t = 5, b = 5)\n    ),\n    plot.subtitle = element_text(\n      size = rel(0.85),\n      family = fonts$subtitle,\n      color = colors$subtitle,\n      lineheight = 1.2,\n      margin = margin(t = 5, b = 10)\n    ),\n    plot.caption = element_markdown(\n      size = rel(0.6),\n      family = fonts$caption,\n      color = colors$caption,\n      lineheight = 0.65,\n      hjust = 0.5,\n      halign = 0.5,\n      margin = margin(t = 10, b = 5)\n    ),\n  )\n```\n:::\n\n\n\n#### 7. Save\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### |-  plot image ----  \n\nsave_plot(\n  p, \n  type = \"30daychartchallenge\", \n  year = 2025, \n  day = 19, \n  width = 8, \n  height = 8\n  )\n```\n:::\n\n\n\n#### 8. Session Info\n\n::: {.callout-tip collapse=\"true\"}\n##### Expand for Session Info\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\nR version 4.4.1 (2024-06-14 ucrt)\nPlatform: x86_64-w64-mingw32/x64\nRunning under: Windows 11 x64 (build 22631)\n\nMatrix products: default\n\n\nlocale:\n[1] LC_COLLATE=English_United States.utf8 \n[2] LC_CTYPE=English_United States.utf8   \n[3] LC_MONETARY=English_United States.utf8\n[4] LC_NUMERIC=C                          \n[5] LC_TIME=English_United States.utf8    \n\ntime zone: America/New_York\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices datasets  utils     methods   base     \n\nother attached packages:\n [1] here_1.0.1      camcorder_0.1.0 ggh4x_0.2.8     zoo_1.8-12     \n [5] hoopR_2.1.0     scales_1.3.0    skimr_2.1.5     janitor_2.2.0  \n [9] showtext_0.9-7  showtextdb_3.0  sysfonts_0.8.9  ggtext_0.1.2   \n[13] lubridate_1.9.3 forcats_1.0.0   stringr_1.5.1   dplyr_1.1.4    \n[17] purrr_1.0.2     readr_2.1.5     tidyr_1.3.1     tibble_3.2.1   \n[21] ggplot2_3.5.1   tidyverse_2.0.0\n\nloaded via a namespace (and not attached):\n [1] tidyselect_1.2.1    farver_2.1.2        fastmap_1.2.0      \n [4] pacman_0.5.1        promises_1.3.0      digest_0.6.37      \n [7] timechange_0.3.0    lifecycle_1.0.4     rsvg_2.6.1         \n[10] processx_3.8.4      magrittr_2.0.3      compiler_4.4.0     \n[13] rlang_1.1.4         tools_4.4.0         utf8_1.2.4         \n[16] yaml_2.3.10         data.table_1.16.2   knitr_1.49         \n[19] htmlwidgets_1.6.4   curl_6.0.0          xml2_1.3.6         \n[22] repr_1.1.7          websocket_1.4.2     withr_3.0.2        \n[25] grid_4.4.0          fansi_1.0.6         colorspace_2.1-1   \n[28] future_1.34.0       progressr_0.15.1    globals_0.16.3     \n[31] cli_3.6.3           rmarkdown_2.29      ragg_1.3.3         \n[34] generics_0.1.3      RcppParallel_5.1.10 rstudioapi_0.17.1  \n[37] httr_1.4.7          tzdb_0.4.0          commonmark_1.9.2   \n[40] chromote_0.4.0      rvest_1.0.4         parallel_4.4.0     \n[43] base64enc_0.1-3     vctrs_0.6.5         jsonlite_1.8.9     \n[46] hms_1.1.3           listenv_0.9.1       systemfonts_1.1.0  \n[49] magick_2.8.5        glue_1.8.0          parallelly_1.43.0  \n[52] gifski_1.32.0-1     codetools_0.2-20    ps_1.8.1           \n[55] stringi_1.8.4       gtable_0.3.6        later_1.3.2        \n[58] munsell_0.5.1       furrr_0.3.1         pillar_1.9.0       \n[61] htmltools_0.5.8.1   R6_2.5.1            textshaping_0.4.0  \n[64] rprojroot_2.0.4     evaluate_1.0.1      lattice_0.22-6     \n[67] markdown_1.13       gridtext_0.1.5      snakecase_0.11.1   \n[70] renv_1.0.3          Rcpp_1.0.13-1       svglite_2.1.3      \n[73] xfun_0.49           pkgconfig_2.0.3    \n```\n\n\n:::\n:::\n\n\n:::\n\n#### 9. GitHub Repository\n\n::: {.callout-tip collapse=\"true\"}\n##### Expand for GitHub Repo\n\nThe complete code for this analysis is available in [`30dcc_2025_19.qmd`](https://github.com/poncest/personal-website/blob/master/data_visualizations/TidyTuesday/2025/30dcc_2025_19.qmd).\n\nFor the full repository, [click here](https://github.com/poncest/personal-website/).\n:::\n\n\n#### 10. References\n::: {.callout-tip collapse=\"true\"}\n##### Expand for References\n\n1. Data Sources:\n   - ESPN via { hoopR } package: [hoopR](https://github.com/sportsdataverse/hoopR)\n  \n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}