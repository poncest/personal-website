{
  "hash": "5a81f3e7fa6f2f1bbd126c5905521686",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"China's Rise: GDP Ranking Changes (1960-2020)\"\nsubtitle: \"From 5th to 2nd: The WTO Effect on China's Economic Ascen<br>\n                          Values shown in trillion USD (2020)\"\ndescription: \"A bump chart visualization showcasing China's remarkable economic rise from 1960 to 2020, highlighting how WTO membership accelerated its ascent from 8th to 2nd in global GDP rankings.\"\nauthor: \"Steven Ponce\"\ndate: \"2025-04-05\" \ncategories: [\"30DayChartChallenge\", \"Data Visualization\", \"R Programming\", \"2025\"]\ntags: [\n \"ggplot2\", \"ggbump\", \"World Bank\", \"GDP\", \"economic rankings\", \"bump chart\", \"China\", \"WDI\", \"geopolitics\", \"economic history\", \"visualization\", \"ranking\", \"comparison\", \"tidyverse\"\n  ]\nimage: \"thumbnails/30dcc_2025_05.png\"\nformat:\n  html:\n    toc: true\n    toc-depth: 5\n    code-link: true\n    code-fold: true\n    code-tools: true\n    code-summary: \"Show code\"\n    self-contained: true\n    theme: \n      light: [flatly, assets/styling/custom_styles.scss]\n      dark: [darkly, assets/styling/custom_styles_dark.scss]\neditor_options: \n  chunk_output_type: inline\nexecute: \n  freeze: true                                                  \n  cache: true                                                   \n  error: false\n  message: false\n  warning: false\n  eval: true\nfilters:\n  - social-share\nshare:\n  permalink: \"https://stevenponce.netlify.app/data_visualizations/TidyTuesday/2025/30dcc_2025_05.html\"\n  description: \"Visualizing China's dramatic economic rise from 5th to 2nd in global GDP rankings over 60 years, with a clear acceleration after joining the WTO. #30DayChartChallenge Day 5: Comparison & Ranking\"\n  twitter: true\n  linkedin: true\n  email: true\n  facebook: false\n  reddit: false\n  stumble: false\n  tumblr: false\n  mastodon: true\n  bsky: true\n---\n\n\n\n![A bump chart showing GDP ranking changes from 1960-2020 for major economies. China (in bold red) started at 5th place in 1960, dropped to 8th by 1980, began rising after joining the WTO (highlighted in pink), and reached 2nd place by 2020. The US remains consistently in 1st place throughout the period, while Japan and other economies show various ranking changes. GDP values in trillion USD for 2020 are displayed.](30dcc_2025_05.png){#fig-1}\n\n### <mark> **Steps to Create this Graphic** </mark>\n\n#### 1. Load Packages & Setup\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## 1. LOAD PACKAGES & SETUP ----\nsuppressPackageStartupMessages({\npacman::p_load(\n  tidyverse,      # Easily Install and Load the 'Tidyverse'\n  ggtext,         # Improved Text Rendering Support for 'ggplot2'\n  showtext,       # Using Fonts More Easily in R Graphs\n  janitor,        # Simple Tools for Examining and Cleaning Dirty Data\n  skimr,          # Compact and Flexible Summaries of Data\n  scales,         # Scale Functions for Visualization\n  lubridate,      # Make Dealing with Dates a Little Easier\n  ggbump,         # Bump Chart and Sigmoid Curves\n  ggrepel,        # Automatically Position Non-Overlapping Text Labels with 'ggplot2'\n  WDI,            # World Development Indicators and Other World Bank Data\n  camcorder       # Record Your Plot History\n)\n})\n\n### |- figure size ----\ngg_record(\n    dir    = here::here(\"temp_plots\"),\n    device = \"png\",\n    width  = 10,\n    height = 8,\n    units  = \"in\",\n    dpi    = 320\n)\n\n# Source utility functions\nsuppressMessages(source(here::here(\"R/utils/fonts.R\")))\nsource(here::here(\"R/utils/social_icons.R\"))\nsource(here::here(\"R/utils/image_utils.R\"))\nsource(here::here(\"R/themes/base_theme.R\"))\n```\n:::\n\n\n\n#### 2. Read in the Data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Get GDP data (current US$) for top economies\ngdp_data <- WDI(\n  indicator = c(\"gdp\" = \"NY.GDP.MKTP.CD\"),                # GDP in current US$\n  country = c(\"US\", \"CN\", \"JP\", \"DE\", \"GB\", \"IN\", \"FR\", \"IT\", \n              \"BR\", \"CA\", \"KR\", \"RU\", \"AU\", \"ES\", \"MX\"),\n  start = 1960,\n  end = 2020\n)\n```\n:::\n\n\n\n#### 3. Examine the Data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(gdp_data)\nskim(gdp_data)\n```\n:::\n\n\n\n#### 4. Tidy Data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### |- Tidy ----\n# Filter parameters\ncountries_to_keep <- c(\"US\", \"CN\", \"JP\", \"DE\", \"GB\", \"IN\", \"FR\", \"IT\", \"KR\", \"BR\")\nyears_to_keep <- c(1960, 1970, 1980, 1990, 2000, 2010, 2020)\n\n# Filter the data\ngdp_filtered <- gdp_data |>\n  filter(iso2c %in% countries_to_keep) |>\n  filter(year %in% years_to_keep) |>\n  filter(!is.na(gdp))\n\n# Calculate rankings for each year\ngdp_ranked <- gdp_filtered |>\n  group_by(year) |>\n  mutate(rank = rank(-gdp, ties.method = \"first\")) |>\n  ungroup()\n\n# Classify countries into highlighted vs. background\ngdp_ranked <- gdp_ranked |>\n  mutate(\n    # Only 3 highlighted countries (US, China, Japan)\n    highlight_group = case_when(\n      iso2c == \"US\" ~ \"US\",\n      iso2c == \"CN\" ~ \"China\",\n      iso2c == \"JP\" ~ \"Japan\",\n      TRUE ~ \"Other\"\n    ),\n    # Create a size variable for lines and points\n    line_size = case_when(\n      iso2c == \"CN\" ~ 2.5,              # China gets thickest line\n      iso2c %in% c(\"US\", \"JP\") ~ 1.5,   # US and Japan medium\n      TRUE ~ 0.8                        # Others thin\n    ),\n    point_size = case_when(\n      iso2c == \"CN\" ~ 5,                # China gets largest points\n      iso2c %in% c(\"US\", \"JP\") ~ 3.5,   # US and Japan medium\n      TRUE ~ 2                          # Others small\n    ),\n    # Alpha for background countries\n    line_alpha = case_when(\n      iso2c %in% c(\"US\", \"CN\", \"JP\") ~ 1,\n      TRUE ~ 0.5\n    ),\n    # Country labels\n    country_label = case_when(\n      iso2c == \"US\" ~ \"United\\nStates\",\n      iso2c == \"CN\" ~ \"China\",\n      iso2c == \"JP\" ~ \"Japan\",\n      iso2c == \"DE\" ~ \"Germany\",\n      iso2c == \"GB\" ~ \"United\\nKingdom\",\n      iso2c == \"IN\" ~ \"India\",\n      iso2c == \"FR\" ~ \"France\",\n      iso2c == \"IT\" ~ \"Italy\",\n      iso2c == \"KR\" ~ \"South\\nKorea\",\n      iso2c == \"BR\" ~ \"Brazil\",\n      TRUE ~ country\n    ),\n    # Format GDP in trillions \n    gdp_trillion = round(gdp / 1e12, 2),\n    # GDP label\n    gdp_label = paste0(\"$\", gdp_trillion, \"T\")\n  )\n\n# Left label dataset \nleft_labels <- gdp_ranked |> \n  filter(year == 1960) |>\n  mutate(\n    # horizontal adjustments\n    hjust = 1,\n    nudge_x = -1.5,\n    nudge_y = 0\n   \n  )\n\n# Right label dataset \nright_labels <- gdp_ranked |> \n  filter(year == 2020) |>\n  mutate(\n    label_line = str_glue(\"{ country_label } ({ gdp_label })\"),\n    # horizontal adjustments\n    hjust = 0,\n    nudge_x = 1.5,\n    nudge_y = 0\n  ) \n```\n:::\n\n\n\n#### 5. Visualization Parameters\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### |- plot aesthetics ---- \ncolors <- get_theme_colors(palette = c(\n  \"US\" = \"#0066CC\",      \n  \"China\" = \"#CC0000\",   \n  \"Japan\" = \"#FF9900\",   \n  \"Other\" = \"#999999\"   \n  )\n)\n\n### |-  titles and caption ----\n# text\ntitle_text    <- str_glue(\"China's Rise: GDP Ranking Changes (1960-2020)\") \nsubtitle_text <- str_glue(\"From 5th to 2nd: The WTO Effect on China's Economic Ascen<br>\n                          Values shown in trillion USD (2020)\")\n\n# Create caption\ncaption_text <- create_dcc_caption(\n  dcc_year = 2025,\n  dcc_day = 05,\n  source_text =  \"{ WDI } World Bank data in R\" \n)\n\n### |-  fonts ----\nsetup_fonts()\nfonts <- get_font_families()\n\n### |-  plot theme ----\n\n# Start with base theme\nbase_theme <- create_base_theme(colors)\n\n# Add weekly-specific theme elements\nweekly_theme <- extend_weekly_theme(\n  base_theme,\n  theme(\n    # Text styling \n    plot.title = element_text(face = \"bold\", family = fonts$title, size = rel(1.14), margin = margin(b = 10)),\n    plot.subtitle = element_text(family = fonts$subtitle, color = colors$text, size = rel(0.78), margin = margin(b = 20)),\n    \n    # Axis elements\n    axis.title.y = element_text(color = colors$text, size = rel(0.8),\n                              hjust = 1, vjust = 0.95, angle = 0),\n    axis.title.x = element_blank(),\n    axis.text.x = element_text(color = colors$text, size = rel(0.7)),\n    axis.line.x = element_line(color = \"gray50\", linewidth = .2),\n\n    # Grid elements\n    panel.grid.major = element_blank(),\n    panel.grid.minor = element_blank(),\n \n    # Legend elements\n    legend.position = \"plot\",\n    legend.title = element_text(family = fonts$text, size = rel(0.8)),\n    legend.text = element_text(family = fonts$text, size = rel(0.7)),\n    \n    # Plot margins \n    plot.margin = margin(t = 10, r = 20, b = 10, l = 20),\n  )\n)\n\n# Set theme\ntheme_set(weekly_theme)\n```\n:::\n\n\n\n#### 6. Plot\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### |-  Plot ----\np <- ggplot(gdp_ranked, aes(x = year, y = rank, group = country_label)) +\n  # Add background shading\n  annotate(\"rect\",\n    xmin = 1995, xmax = 2005, ymin = 0, ymax = 11,\n    fill = \"#FF8B8B\", alpha = 0.15\n  ) +\n  # Geoms\n  geom_bump(aes(color = highlight_group, size = line_size, alpha = line_alpha), smooth = 8) +\n  geom_point(aes(color = highlight_group, size = point_size, alpha = line_alpha)) +\n  geom_text(                                                                    # left side labels\n    data = left_labels,\n    aes(label = country_label, color = highlight_group, y = rank + nudge_y),\n    hjust = 1,\n    nudge_x = -2,\n    lineheight = 0.9,\n    size = 3.2,\n  ) +\n  geom_text(                                                                    # right side labels\n    data = right_labels,\n    aes(label = label_line, color = highlight_group, y = rank), \n    hjust = 0,\n    nudge_x = 2,\n    size = 2.8,\n    fontface = \"bold\"\n  ) +\n  # Annotate\n  annotate(\"text\",\n    x = 2001, y = 6.7, label = \"China joins WTO\", color = \"gray20\",\n    size = 3.2, fontface = \"italic\"\n  ) +\n  annotate(\"segment\",\n    x = 2000, xend = 2000, y = 6.5, yend = 6.1,\n    arrow = arrow(length = unit(0.2, \"cm\")), linewidth = 0.5, color = \"gray20\"\n  ) +\n  # Scales\n  scale_y_reverse(breaks = 1:10) +\n  scale_x_continuous(\n    breaks = c(1960, 1970, 1980, 1990, 2000, 2010, 2020),\n    limits = c(1955, 2029)\n  ) +\n  scale_color_manual(values = colors$palette) +\n  scale_size_identity() +\n  scale_alpha_identity() +\n  # Labs\n  labs(\n    title = title_text,\n    subtitle = subtitle_text,\n    x = \"Year\",\n    y = \"Rank\",\n    caption = caption_text\n  ) +\n  # Theme\n  theme(\n    plot.title = element_text(\n      size = rel(1.8),\n      family = fonts$title,\n      face = \"bold\",\n      color = colors$title,\n      margin = margin(t = 5, b = 5)\n    ),\n    plot.subtitle = element_markdown(\n      size = rel(1),\n      family = fonts$subtitle,\n      color = colors$subtitle,\n      lineheight = 1.2,\n      margin = margin(t = 5, b = 5)\n    ),\n    plot.caption = element_markdown(\n      size = rel(0.6),\n      family = fonts$caption,\n      color = colors$caption,\n      lineheight = 0.65,\n      hjust = 0.5,\n      halign = 0.5,\n      margin = margin(t = 10, b = 5)\n    ),\n  )\n```\n:::\n\n\n\n#### 7. Save\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### |-  plot image ----  \n\nsave_plot(\n  p, \n  type = \"30daychartchallenge\", \n  year = 2025, \n  day = 05, \n  width = 10, \n  height = 8\n  )\n```\n:::\n\n\n\n#### 8. Session Info\n\n::: {.callout-tip collapse=\"true\"}\n##### Expand for Session Info\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\nR version 4.4.1 (2024-06-14 ucrt)\nPlatform: x86_64-w64-mingw32/x64\nRunning under: Windows 11 x64 (build 22631)\n\nMatrix products: default\n\n\nlocale:\n[1] LC_COLLATE=English_United States.utf8 \n[2] LC_CTYPE=English_United States.utf8   \n[3] LC_MONETARY=English_United States.utf8\n[4] LC_NUMERIC=C                          \n[5] LC_TIME=English_United States.utf8    \n\ntime zone: America/New_York\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices datasets  utils     methods   base     \n\nother attached packages:\n [1] here_1.0.1      camcorder_0.1.0 WDI_2.7.9       ggrepel_0.9.6  \n [5] ggbump_0.1.0    scales_1.3.0    skimr_2.1.5     janitor_2.2.0  \n [9] showtext_0.9-7  showtextdb_3.0  sysfonts_0.8.9  ggtext_0.1.2   \n[13] lubridate_1.9.3 forcats_1.0.0   stringr_1.5.1   dplyr_1.1.4    \n[17] purrr_1.0.2     readr_2.1.5     tidyr_1.3.1     tibble_3.2.1   \n[21] ggplot2_3.5.1   tidyverse_2.0.0\n\nloaded via a namespace (and not attached):\n [1] gtable_0.3.6      xfun_0.49         htmlwidgets_1.6.4 tzdb_0.4.0       \n [5] vctrs_0.6.5       tools_4.4.0       generics_0.1.3    curl_6.0.0       \n [9] gifski_1.32.0-1   fansi_1.0.6       pacman_0.5.1      pkgconfig_2.0.3  \n[13] lifecycle_1.0.4   farver_2.1.2      compiler_4.4.0    textshaping_0.4.0\n[17] munsell_0.5.1     repr_1.1.7        codetools_0.2-20  snakecase_0.11.1 \n[21] htmltools_0.5.8.1 yaml_2.3.10       pillar_1.9.0      magick_2.8.5     \n[25] commonmark_1.9.2  tidyselect_1.2.1  digest_0.6.37     stringi_1.8.4    \n[29] rsvg_2.6.1        rprojroot_2.0.4   fastmap_1.2.0     grid_4.4.0       \n[33] colorspace_2.1-1  cli_3.6.3         magrittr_2.0.3    base64enc_0.1-3  \n[37] utf8_1.2.4        withr_3.0.2       timechange_0.3.0  rmarkdown_2.29   \n[41] ragg_1.3.3        hms_1.1.3         evaluate_1.0.1    knitr_1.49       \n[45] markdown_1.13     rlang_1.1.4       gridtext_0.1.5    Rcpp_1.0.13-1    \n[49] glue_1.8.0        xml2_1.3.6        renv_1.0.3        svglite_2.1.3    \n[53] rstudioapi_0.17.1 jsonlite_1.8.9    R6_2.5.1          systemfonts_1.1.0\n```\n\n\n:::\n:::\n\n\n:::\n\n#### 9. GitHub Repository\n\n::: {.callout-tip collapse=\"true\"}\n##### Expand for GitHub Repo\n\nThe complete code for this analysis is available in [`30dcc_2025_05.qmd`](https://github.com/poncest/personal-website/blob/master/data_visualizations/TidyTuesday/2025/30dcc_2025_05.qmd).\n\nFor the full repository, [click here](https://github.com/poncest/personal-website/).\n:::\n\n\n#### 10. References\n::: {.callout-tip collapse=\"true\"}\n##### Expand for References\n\n1. Data Sources:\n   - World Bank { World Bank data in R } [indicator =  GDP (current US$) (\"NY.GDP.MKTP.CD\")](https://github.com/vincentarelbundock/WDI)\n  \n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}