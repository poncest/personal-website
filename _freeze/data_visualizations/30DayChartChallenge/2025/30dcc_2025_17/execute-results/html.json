{
  "hash": "8c28a8e4595aeaf274efc880939a5cb4",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Birds of a Feather: How NBA's Bird Teams Show Identical Home Nest Advantage\"\nsubtitle: \"Both Hawks and Pelicans win exactly 54.3% of home games and 45.7% of away games\"\ndescription: \"Analyzing NBA's two bird-themed teams reveals a surprising statistical symmetry: both the Atlanta Hawks and New Orleans Pelicans share identical home and away win percentages during the 2023-24 season, demonstrating a perfect mirror image of home court advantage patterns.\"\ndate: \"2025-04-17\" \ncategories: [\"30DayChartChallenge\", \"Data Visualization\", \"R Programming\", \"2025\"]\ntags: [\n\"ggplot2\", \"hoopR\", \"NBA\", \"Sports Analytics\", \"Home Court Advantage\", \"Atlanta Hawks\", \"New Orleans Pelicans\", \"Bird Teams\", \"Relationships\", \"Win Percentage\"\n  ]\nimage: \"thumbnails/30dcc_2025_17.png\"\nformat:\n  html:\n    toc: true\n    toc-depth: 5\n    code-link: true\n    code-fold: true\n    code-tools: true\n    code-summary: \"Show code\"\n    self-contained: true\n    theme: \n      light: [flatly, assets/styling/custom_styles.scss]\n      dark: [darkly, assets/styling/custom_styles_dark.scss]\neditor_options: \n  chunk_output_type: inline\nexecute: \n  freeze: true                                                  \n  cache: true                                                   \n  error: false\n  message: false\n  warning: false\n  eval: true\nfilters:\n  - social-share\nshare:\n  permalink: \"https://stevenponce.netlify.app/data_visualizations/TidyTuesday/2025/30dcc_2025_17.html\"\n  description: \"Day 17 of #30DayChartChallenge: Birds of a Feather - Discovering the identical home court advantage patterns shared by NBA's bird-themed teams\"\n  twitter: true\n  linkedin: true\n  email: true\n  facebook: false\n  reddit: false\n  stumble: false\n  tumblr: false\n  mastodon: true\n  bsky: true\n---\n\n\n\n![Bar chart titled \"Birds of a Feather: How NBA's Bird Teams Show Identical Home Nest Advantage\" comparing Hawks and Pelicans win percentages. Both teams win exactly 54.3% of home games (teal bars) and 45.7% of away games (red bars). Arrows connect the identical percentages between teams, highlighting the perfect mirroring of their home court advantage pattern.](30dcc_2025_17.png){#fig-1}\n\n### <mark> **Steps to Create this Graphic** </mark>\n\n#### 1. Load Packages & Setup\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## 1. LOAD PACKAGES & SETUP ----\nsuppressPackageStartupMessages({\npacman::p_load(\n  tidyverse,      # Easily Install and Load the 'Tidyverse'\n  ggtext,         # Improved Text Rendering Support for 'ggplot2'\n  showtext,       # Using Fonts More Easily in R Graphs\n  janitor,        # Simple Tools for Examining and Cleaning Dirty Data\n  skimr,          # Compact and Flexible Summaries of Data\n  scales,         # Scale Functions for Visualization\n  lubridate,      # Make Dealing with Dates a Little Easier\n  hoopR,          # Access Men's Basketball Play by Play Data\n  ggrepel,        # Automatically Position Non-Overlapping Text Labels with ggplot2\n  camcorder       # Record Your Plot History\n  )\n})\n\n### |- figure size ----\ngg_record(\n    dir    = here::here(\"temp_plots\"),\n    device = \"png\",\n    width  = 8,\n    height = 8,\n    units  = \"in\",\n    dpi    = 320\n)\n\n# Source utility functions\nsuppressMessages(source(here::here(\"R/utils/fonts.R\")))\nsource(here::here(\"R/utils/social_icons.R\"))\nsource(here::here(\"R/utils/image_utils.R\"))\nsource(here::here(\"R/themes/base_theme.R\"))\n```\n:::\n\n\n\n#### 2. Read in the Data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Define the bird teams using their NBA team IDs\npelicans_id <- \"1610612740\"  # New Orleans Pelicans \nhawks_id <- \"1610612737\"     # Atlanta Hawks \n\n# Get team game logs for the 2023-2024 season\npelicans_games <- hoopR::nba_leaguegamelog(season = \"2023-24\", team_id_nullable = pelicans_id)\nhawks_games <- hoopR::nba_leaguegamelog(season = \"2023-24\", team_id_nullable = hawks_id)\n  \n# Extract and prepare data\npelicans_data <- pelicans_games$LeagueGameLog |> mutate(team = \"Pelicans\")\nhawks_data <- hawks_games$LeagueGameLog |> mutate(team = \"Hawks\")\n\n# Combine datasets\nall_games <- bind_rows(pelicans_data, hawks_data)\n```\n:::\n\n\n\n#### 3. Examine the Data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(all_games)\nskim(all_games)\n```\n:::\n\n\n\n#### 4. Tidy Data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### |- Tidy ----\n# Add home/away indicator\nall_games <- all_games |>\n  mutate(location = if_else(MATCHUP |> str_detect(\"@\"), \"Away\", \"Home\"))\n\n# Calculate metrics \nbird_analysis <- all_games |>\n  mutate(\n    game_date = as.Date(GAME_DATE, format = \"%m/%d/%Y\"),\n    FGA_num = as.numeric(FGA),\n    FTA_num = as.numeric(FTA),\n    TOV_num = as.numeric(TOV),\n    OREB_num = as.numeric(OREB),\n    MIN_num = as.numeric(gsub(\":\", \".\", MIN)),\n    PTS_num = as.numeric(PTS),\n    \n    pace = case_when(\n      is.na(MIN_num) | MIN_num == 0 ~ NA_real_,\n      TRUE ~ (FGA_num + TOV_num + 0.44 * FTA_num - OREB_num) / MIN_num * 48\n    ),\n    \n    efficiency = case_when(\n      is.na(FGA_num) | FGA_num == 0 ~ NA_real_,\n      TRUE ~ PTS_num / FGA_num\n    )\n  ) |>\n  filter(!is.na(pace), !is.na(efficiency), !is.infinite(pace), !is.infinite(efficiency))\n\n# Calculate home vs away statistics\nhome_away_summary <- bird_analysis |>\n  group_by(team, location) |>\n  summarize(\n    avg_pace = mean(pace, na.rm = TRUE),\n    avg_efficiency = mean(efficiency, na.rm = TRUE),\n    games_played = n(),\n    wins = sum(WL == \"W\", na.rm = TRUE),\n    win_pct = wins / games_played,\n    .groups = \"drop\"\n  )\n```\n:::\n\n\n\n#### 5. Visualization Parameters\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### |-  plot aesthetics ----\ncolors <- get_theme_colors(\n  palette = c(\n    \"Home\" = \"#008080\", \n    \"Away\" = \"#E03A3E\"\n  )\n)\n\n### |-  titles and caption ----\n# text\ntitle_text    <- str_wrap(\"Birds of a Feather: How NBA's Bird Teams Show Identical Home Nest Advantage\",\n                          width = 55) \n\nsubtitle_text <- str_wrap(\"Both Hawks and Pelicans win exactly 54.3% of home games and 45.7% of away games\",\n                          width = 85)\n\ncaption_text <- create_dcc_caption(\n  dcc_year = 2025,\n  dcc_day = 17,\n  source_text =  \"ESPN via { hoopR } package\" \n)\n\n### |-  fonts ----\nsetup_fonts()\nfonts <- get_font_families()\n\n### |-  plot theme ----\n\n# Start with base theme\nbase_theme <- create_base_theme(colors)\n\n# Add weekly-specific theme elements\nweekly_theme <- extend_weekly_theme(\n  base_theme,\n  theme(\n\n    # Axis elements\n    axis.title.y = element_text(color = colors$text, size = rel(0.8), margin = margin(r = 10)),\n    axis.text = element_text(color = colors$text, size = rel(0.7)),\n\n    # Grid elements\n    panel.grid.minor = element_blank(),\n    panel.grid.major.x = element_blank(),\n    panel.grid.major.y = element_line(color = \"gray92\"),\n\n    # Legend elements\n    legend.position = \"bottom\",\n    legend.title = element_blank(),\n    # legend.title = element_text(family = fonts$text, size = rel(0.8)),\n    legend.text = element_text(family = fonts$text, size = rel(0.7)),\n    \n    # Plot margins \n    plot.margin = margin(t = 10, r = 20, b = 10, l = 20),\n  )\n)\n\n# Set theme\ntheme_set(weekly_theme)\n```\n:::\n\n\n\n#### 6. Plot\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### |-  Plot ----\np <- ggplot(home_away_summary, aes(x = team, y = win_pct, fill = location)) +\n  # Geoms\n  geom_col(\n    position = \"dodge\", \n    width = 0.7\n    ) +\n  geom_text(\n    aes(label = scales::percent(win_pct, accuracy = 0.1)), \n    position = position_dodge(\n      width = 0.7), \n    vjust = -0.7, \n    size = 4, \n    fontface = \"bold\"\n    ) +\n  # Scales\n  scale_y_continuous(\n    labels = scales::percent, limits = c(0, 0.8), \n    breaks = seq(0, 0.8, 0.1)\n    ) +\n  scale_fill_manual(\n    values = colors$palette\n    ) +\n  # Annotate\n  annotate(\n    \"text\", x = 1.5, y = 0.72, \n    label = \"Both bird teams show identical\\nhome vs. away performance patterns\",\n    size = 4, fontface = \"italic\", color = \"gray30\"\n    ) +\n  annotate(\n    \"segment\", x = 1.25, xend = 1.75, y = 0.57, yend = 0.57, \n    arrow = arrow(ends = \"both\", length = unit(0.1, \"inches\")), \n    color = colors$palette[1]\n    ) +\n  annotate(\n    \"segment\", x = 1.25, xend = 1.75, y = 0.48, yend = 0.48, \n    arrow = arrow(ends = \"both\", length = unit(0.1, \"inches\")), \n    olor = colors$palette[2]\n    ) +\n  # Labs\n  labs(\n    title = title_text,\n    subtitle = subtitle_text,\n    caption = caption_text,\n    y = \"Win Percentage\", \n    x = NULL,\n  ) +\n  # Theme\n  theme(\n    plot.title = element_text(\n      size = rel(1.6),\n      family = fonts$title,\n      face = \"bold\",\n      color = colors$title,\n      margin = margin(t = 5, b = 5)\n    ),\n    plot.subtitle = element_text(\n      size = rel(0.85),\n      family = fonts$subtitle,\n      color = colors$subtitle,\n      lineheight = 1.2,\n      margin = margin(t = 5, b = 10)\n    ),\n    plot.caption = element_markdown(\n      size = rel(0.6),\n      family = fonts$caption,\n      color = colors$caption,\n      lineheight = 0.65,\n      hjust = 0.5,\n      halign = 0.5,\n      margin = margin(t = 10, b = 5)\n    ),\n  )\n```\n:::\n\n\n\n#### 7. Save\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### |-  plot image ----  \n\nsave_plot(\n  p, \n  type = \"30daychartchallenge\", \n  year = 2025, \n  day = 17, \n  width = 8, \n  height = 8\n  )\n```\n:::\n\n\n\n#### 8. Session Info\n\n::: {.callout-tip collapse=\"true\"}\n##### Expand for Session Info\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\nR version 4.4.1 (2024-06-14 ucrt)\nPlatform: x86_64-w64-mingw32/x64\nRunning under: Windows 11 x64 (build 22631)\n\nMatrix products: default\n\n\nlocale:\n[1] LC_COLLATE=English_United States.utf8 \n[2] LC_CTYPE=English_United States.utf8   \n[3] LC_MONETARY=English_United States.utf8\n[4] LC_NUMERIC=C                          \n[5] LC_TIME=English_United States.utf8    \n\ntime zone: America/New_York\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices datasets  utils     methods   base     \n\nother attached packages:\n [1] here_1.0.1      camcorder_0.1.0 ggrepel_0.9.6   hoopR_2.1.0    \n [5] scales_1.3.0    skimr_2.1.5     janitor_2.2.0   showtext_0.9-7 \n [9] showtextdb_3.0  sysfonts_0.8.9  ggtext_0.1.2    lubridate_1.9.3\n[13] forcats_1.0.0   stringr_1.5.1   dplyr_1.1.4     purrr_1.0.2    \n[17] readr_2.1.5     tidyr_1.3.1     tibble_3.2.1    ggplot2_3.5.1  \n[21] tidyverse_2.0.0\n\nloaded via a namespace (and not attached):\n [1] tidyselect_1.2.1    farver_2.1.2        fastmap_1.2.0      \n [4] pacman_0.5.1        promises_1.3.0      digest_0.6.37      \n [7] timechange_0.3.0    lifecycle_1.0.4     rsvg_2.6.1         \n[10] processx_3.8.4      magrittr_2.0.3      compiler_4.4.0     \n[13] rlang_1.1.4         tools_4.4.0         utf8_1.2.4         \n[16] yaml_2.3.10         data.table_1.16.2   knitr_1.49         \n[19] htmlwidgets_1.6.4   curl_6.0.0          xml2_1.3.6         \n[22] repr_1.1.7          websocket_1.4.2     withr_3.0.2        \n[25] grid_4.4.0          fansi_1.0.6         colorspace_2.1-1   \n[28] future_1.34.0       globals_0.16.3      cli_3.6.3          \n[31] rmarkdown_2.29      ragg_1.3.3          generics_0.1.3     \n[34] RcppParallel_5.1.10 rstudioapi_0.17.1   httr_1.4.7         \n[37] tzdb_0.4.0          commonmark_1.9.2    chromote_0.4.0     \n[40] rvest_1.0.4         parallel_4.4.0      base64enc_0.1-3    \n[43] vctrs_0.6.5         jsonlite_1.8.9      hms_1.1.3          \n[46] listenv_0.9.1       systemfonts_1.1.0   magick_2.8.5       \n[49] glue_1.8.0          parallelly_1.43.0   gifski_1.32.0-1    \n[52] codetools_0.2-20    ps_1.8.1            stringi_1.8.4      \n[55] gtable_0.3.6        later_1.3.2         munsell_0.5.1      \n[58] furrr_0.3.1         pillar_1.9.0        htmltools_0.5.8.1  \n[61] R6_2.5.1            textshaping_0.4.0   rprojroot_2.0.4    \n[64] evaluate_1.0.1      markdown_1.13       gridtext_0.1.5     \n[67] snakecase_0.11.1    renv_1.0.3          Rcpp_1.0.13-1      \n[70] svglite_2.1.3       xfun_0.49           pkgconfig_2.0.3    \n```\n\n\n:::\n:::\n\n\n:::\n\n#### 9. GitHub Repository\n\n::: {.callout-tip collapse=\"true\"}\n##### Expand for GitHub Repo\n\nThe complete code for this analysis is available in [`30dcc_2025_17.qmd`](https://github.com/poncest/personal-website/blob/master/data_visualizations/TidyTuesday/2025/30dcc_2025_17.qmd).\n\nFor the full repository, [click here](https://github.com/poncest/personal-website/).\n:::\n\n\n#### 10. References\n::: {.callout-tip collapse=\"true\"}\n##### Expand for References\n\n1. Data Sources:\n   - ESPN via { hoopR } package: [hoopR](https://github.com/sportsdataverse/hoopR)\n  \n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}