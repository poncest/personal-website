{
  "hash": "acb42838d9710bff2a9c02d7c0dbe817",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Distribution of Offensive Rebounding Specialization by Position (2024 NBA Season)\"\nsubtitle: \"Offensive rebounds as a proportion of total rebounds - Notice the multi-modal patterns\"\ndescription: \"An analysis of NBA player rebounding specialization patterns using ridge plots to visualize multi-modal distributions. This visualization for Day 10 of the #30DayChartChallenge explores how players within the same position show different rebounding tendencies, with particular focus on offensive rebounding ratios.\"\nauthor: \"Steven Ponce\"\ndate: \"2025-04-10\" \ncategories: [\"30DayChartChallenge\", \"Data Visualization\", \"R Programming\", \"2025\"]\ntags: [\n\"ggplot2\", \"ggridges\", \"basketball\", \"hoopR\", \"NBA\", \"sports analytics\", \"multi-modal\", \"distribution\", \"ridge plot\", \"offensive rebounding\", \"player specialization\"\n  ]\nimage: \"thumbnails/30dcc_2025_10.png\"\nformat:\n  html:\n    toc: true\n    toc-depth: 5\n    code-link: true\n    code-fold: true\n    code-tools: true\n    code-summary: \"Show code\"\n    self-contained: true\n    theme: \n      light: [flatly, assets/styling/custom_styles.scss]\n      dark: [darkly, assets/styling/custom_styles_dark.scss]\neditor_options: \n  chunk_output_type: inline\nexecute: \n  freeze: true                                                  \n  cache: true                                                   \n  error: false\n  message: false\n  warning: false\n  eval: true\nfilters:\n  - social-share\nshare:\n  permalink: \"https://stevenponce.netlify.app/data_visualizations/TidyTuesday/2025/30dcc_2025_10.html\"\n  description: \"Exploring multi-modal distributions in NBA player rebounding patterns. See how positions like centers and forwards show distinct specialization types in their offensive rebounding approach. #30DayChartChallenge #DataViz #NBA\"\n  twitter: true\n  linkedin: true\n  email: true\n  facebook: false\n  reddit: false\n  stumble: false\n  tumblr: false\n  mastodon: true\n  bsky: true\n---\n\n\n\n![Ridge plot showing the distribution of offensive rebounding ratios across NBA positions. Multi-modal patterns are visible, with annotations highlighting different player types: Defensive-focused and Balanced Power Forwards, Perimeter and Inside Forwards, and Traditional and Offensive-focused Centers. Centers show highest ratios around 0.4, while guards have lower ratios centered around 0.2.](30dcc_2025_10.png){#fig-1}\n\n### <mark> **Steps to Create this Graphic** </mark>\n\n#### 1. Load Packages & Setup\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## 1. LOAD PACKAGES & SETUP ----\nsuppressPackageStartupMessages({\npacman::p_load(\ntidyverse,      # Easily Install and Load the 'Tidyverse'\n  tidyverse,      # Easily Install and Load the 'Tidyverse'\n  ggtext,         # Improved Text Rendering Support for 'ggplot2'\n  showtext,       # Using Fonts More Easily in R Graphs\n  janitor,        # Simple Tools for Examining and Cleaning Dirty Data\n  skimr,          # Compact and Flexible Summaries of Data\n  scales,         # Scale Functions for Visualization\n  lubridate,      # Make Dealing with Dates a Little Easier\n  hoopR,          # Access Men's Basketball Play by Play Data\n  ggridges,       # Ridgeline Plots in 'ggplot2'  \n  camcorder       # Record Your Plot History\n)\n})\n\n### |- figure size ----\ngg_record(\n    dir    = here::here(\"temp_plots\"),\n    device = \"png\",\n    width  = 10,\n    height = 8,\n    units  = \"in\",\n    dpi    = 320\n)\n\n# Source utility functions\nsuppressMessages(source(here::here(\"R/utils/fonts.R\")))\nsource(here::here(\"R/utils/social_icons.R\"))\nsource(here::here(\"R/utils/image_utils.R\"))\nsource(here::here(\"R/themes/base_theme.R\"))\n```\n:::\n\n\n\n#### 2. Read in the Data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Get NBA player stats for 2024 season\nnba_players_2024 <- load_nba_player_box(seasons = 2024)\n```\n:::\n\n\n\n#### 3. Examine the Data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(nba_players_2024)\nskim(nba_players_2024)\n```\n:::\n\n\n\n#### 4. Tidy Data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### |- Tidy ----\n# Season stats\nplayer_season_stats <- nba_players_2024 |>\n  group_by(athlete_id, athlete_display_name, athlete_position_abbreviation) |>\n  summarize(\n    games_played = n(),\n    across(\n      c(minutes, points, field_goals_attempted, field_goals_made,\n        three_point_field_goals_attempted, three_point_field_goals_made,\n        free_throws_attempted, free_throws_made, offensive_rebounds,\n        defensive_rebounds, rebounds, assists, turnovers, steals, blocks),\n      ~ sum(.x, na.rm = TRUE),\n      .names = \"total_{.col}\"\n    ),\n    .groups = \"drop\"\n  )\n\n# Players stats\nplayers_stats <- player_season_stats |>\n  filter(total_minutes > 0, games_played >= 10) |>\n  mutate(\n    # metrics\n    min_per_game = total_minutes / games_played,\n    three_pt_rate = total_three_point_field_goals_attempted / total_minutes,\n    \n    # Free throw rate (FT attempts per minute)\n    ft_rate = total_free_throws_attempted / total_minutes,\n    \n    # Offensive rebounding ratio (percentage of total rebounds that are offensive)\n    orb_ratio = total_offensive_rebounds / (total_offensive_rebounds + total_defensive_rebounds + 0.001),\n    \n    # Shooting distance preference (proxy using 3PT to total FG ratio)\n    three_pt_preference = total_three_point_field_goals_attempted / (total_field_goals_attempted + 0.001)\n  ) |>\n  filter(min_per_game >= 10)\n```\n:::\n\n\n\n#### 5. Visualization Parameters\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### |- plot aesthetics ---- \ncolors <- get_theme_colors(\n  palette = c(\"#3182bd\", \"Positive Impact\" = \"#333333\")  \n  )\n\n### |-  titles and caption ----\n# text\ntitle_text    <- str_wrap(\"Distribution of Offensive Rebounding Specialization by Position (2024 NBA Season)\",\n                          width = 60) \nsubtitle_text <- str_wrap(\"Offensive rebounds as a proportion of total rebounds - Notice the multi-modal patterns\", \n                          width = 100)\n\n# Create caption\ncaption_text <- create_dcc_caption(\n  dcc_year = 2025,\n  dcc_day = 10,\n  source_text =  \"ESPN via { hoopR } package\" \n)\n\n### |-  fonts ----\nsetup_fonts()\nfonts <- get_font_families()\n\n### |-  plot theme ----\n\n# Start with base theme\nbase_theme <- create_base_theme(colors)\n\n# Add weekly-specific theme elements\nweekly_theme <- extend_weekly_theme(\n  base_theme,\n  theme(\n    # Text styling \n    plot.title = element_text(face = \"bold\", family = fonts$title, size = rel(1.14), margin = margin(b = 10)),\n    plot.subtitle = element_text(family = fonts$subtitle, color = colors$text, size = rel(0.78), margin = margin(b = 20)),\n    \n    # Axis elements\n    axis.title = element_text(color = colors$text, size = rel(0.8)),\n    axis.text = element_text(color = colors$text, size = rel(0.7)),\n    axis.text.y = element_text(color = colors$text, size = rel(0.68)),\n    \n    axis.line.x = element_line(color = \"gray50\", linewidth = .2),\n\n    # Grid elements\n    panel.grid.minor.x = element_blank(),\n    panel.grid.major.x = element_blank(), \n \n    # Legend elements\n    legend.position = \"top\",\n    legend.title = element_text(family = fonts$text, size = rel(0.8)),\n    legend.text = element_text(family = fonts$text, size = rel(0.7)),\n\n    # Plot margins \n    plot.margin = margin(t = 10, r = 20, b = 10, l = 20),\n  )\n)\n\n# Set theme\ntheme_set(weekly_theme)\n```\n:::\n\n\n\n#### 6. Plot\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### |-  Plot ----\np <- ggplot(players_stats, aes(x = orb_ratio, y = athlete_position_abbreviation)) +\n  # Geoms\n  geom_density_ridges(alpha = 0.7, scale = 1.2, rel_min_height = 0.01, fill = colors$palette[1]) +\n  # Annotation\n  annotate(\"text\", x = 0.25, y = 4.4, label = \"Defensive-focused PFs\", size = 3.5, fontface = \"italic\", color = colors$palette[2]) +\n  annotate(\"text\", x = 0.35, y = 4.4, label = \"Balanced PFs\", size = 3.5, fontface = \"italic\", color = colors$palette[2]) +\n  annotate(\"segment\", x = 0.25, xend = 0.25, y = 4.2, yend = 4, arrow = arrow(length = unit(0.2, \"cm\")), color = colors$palette[2]) +\n  annotate(\"segment\", x = 0.35, xend = 0.35, y = 4.2, yend = 4, arrow = arrow(length = unit(0.2, \"cm\")), color = colors$palette[2]) +\n  \n  annotate(\"text\", x = 0.20, y = 2.4, label = \"Perimeter Fs\", size = 3.5, fontface = \"italic\", color = colors$palette[2]) +\n  annotate(\"text\", x = 0.40, y = 2.4, label = \"Inside Fs\", size = 3.5, fontface = \"italic\", color = colors$palette[2]) +\n  annotate(\"segment\", x = 0.20, xend = 0.20, y = 2.2, yend = 2, arrow = arrow(length = unit(0.2, \"cm\")), color = colors$palette[2]) +\n  annotate(\"segment\", x = 0.40, xend = 0.40, y = 2.2, yend = 2, arrow = arrow(length = unit(0.2, \"cm\")), color = colors$palette[2]) +\n  \n  annotate(\"text\", x = 0.35, y = 1.4, label = \"Traditional Cs\", size = 3.5, fontface = \"italic\", color = colors$palette[2]) +\n  annotate(\"text\", x = 0.48, y = 1.4, label = \"Offensive-focused Cs\", size = 3.5, fontface = \"italic\", color = colors$palette[2]) +\n  annotate(\"segment\", x = 0.35, xend = 0.35, y = 1.2, yend = 1, arrow = arrow(length = unit(0.2, \"cm\")), color = colors$palette[2]) +\n  annotate(\"segment\", x = 0.48, xend = 0.47, y = 1.2, yend = 1, arrow = arrow(length = unit(0.2, \"cm\")), color = colors$palette[2]) +\n  # Scales\n  scale_x_continuous(\n    limits = c(0, 0.6), \n    breaks = seq(0, 0.6, by = 0.1)\n    ) +\n  # Labs\n  labs(\n    title = title_text,\n    subtitle = subtitle_text,\n    caption = caption_text,\n    x = \"Offensive Rebounding Ratio\",\n    y = \"Position\"\n    ) +\n  # Theme\n  theme(\n    plot.title = element_text(\n      size = rel(1.9),\n      family = fonts$title,\n      face = \"bold\",\n      color = colors$title,\n      margin = margin(t = 5, b = 5)\n    ),\n    plot.subtitle = element_text(\n      size = rel(1),\n      family = fonts$subtitle,\n      color = colors$subtitle,\n      lineheight = 1.2,\n      margin = margin(t = 5, b = 20)\n    ),\n    plot.caption = element_markdown(\n      size = rel(0.6),\n      family = fonts$caption,\n      color = colors$caption,\n      lineheight = 0.65,\n      hjust = 0.5,\n      halign = 0.5,\n      margin = margin(t = 10, b = 5)\n    ),\n  )\n```\n:::\n\n\n\n#### 7. Save\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### |-  plot image ----  \n\nsave_plot(\n  p, \n  type = \"30daychartchallenge\", \n  year = 2025, \n  day = 10, \n  width = 10, \n  height = 8\n  )\n```\n:::\n\n\n\n#### 8. Session Info\n\n::: {.callout-tip collapse=\"true\"}\n##### Expand for Session Info\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\nR version 4.4.1 (2024-06-14 ucrt)\nPlatform: x86_64-w64-mingw32/x64\nRunning under: Windows 11 x64 (build 22631)\n\nMatrix products: default\n\n\nlocale:\n[1] LC_COLLATE=English_United States.utf8 \n[2] LC_CTYPE=English_United States.utf8   \n[3] LC_MONETARY=English_United States.utf8\n[4] LC_NUMERIC=C                          \n[5] LC_TIME=English_United States.utf8    \n\ntime zone: America/New_York\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices datasets  utils     methods   base     \n\nother attached packages:\n [1] here_1.0.1      camcorder_0.1.0 ggridges_0.5.6  hoopR_2.1.0    \n [5] scales_1.3.0    skimr_2.1.5     janitor_2.2.0   showtext_0.9-7 \n [9] showtextdb_3.0  sysfonts_0.8.9  ggtext_0.1.2    lubridate_1.9.3\n[13] forcats_1.0.0   stringr_1.5.1   dplyr_1.1.4     purrr_1.0.2    \n[17] readr_2.1.5     tidyr_1.3.1     tibble_3.2.1    ggplot2_3.5.1  \n[21] tidyverse_2.0.0\n\nloaded via a namespace (and not attached):\n [1] tidyselect_1.2.1    farver_2.1.2        fastmap_1.2.0      \n [4] pacman_0.5.1        promises_1.3.0      digest_0.6.37      \n [7] timechange_0.3.0    lifecycle_1.0.4     rsvg_2.6.1         \n[10] processx_3.8.4      magrittr_2.0.3      compiler_4.4.0     \n[13] rlang_1.1.4         tools_4.4.0         utf8_1.2.4         \n[16] yaml_2.3.10         data.table_1.16.2   knitr_1.49         \n[19] htmlwidgets_1.6.4   curl_6.0.0          xml2_1.3.6         \n[22] repr_1.1.7          websocket_1.4.2     withr_3.0.2        \n[25] grid_4.4.0          fansi_1.0.6         colorspace_2.1-1   \n[28] future_1.34.0       progressr_0.15.1    globals_0.16.3     \n[31] cli_3.6.3           rmarkdown_2.29      ragg_1.3.3         \n[34] generics_0.1.3      RcppParallel_5.1.10 rstudioapi_0.17.1  \n[37] httr_1.4.7          tzdb_0.4.0          commonmark_1.9.2   \n[40] chromote_0.4.0      rvest_1.0.4         parallel_4.4.0     \n[43] base64enc_0.1-3     vctrs_0.6.5         jsonlite_1.8.9     \n[46] hms_1.1.3           listenv_0.9.1       systemfonts_1.1.0  \n[49] magick_2.8.5        glue_1.8.0          parallelly_1.43.0  \n[52] gifski_1.32.0-1     codetools_0.2-20    ps_1.8.1           \n[55] stringi_1.8.4       gtable_0.3.6        later_1.3.2        \n[58] munsell_0.5.1       furrr_0.3.1         pillar_1.9.0       \n[61] htmltools_0.5.8.1   R6_2.5.1            textshaping_0.4.0  \n[64] rprojroot_2.0.4     evaluate_1.0.1      markdown_1.13      \n[67] gridtext_0.1.5      snakecase_0.11.1    renv_1.0.3         \n[70] Rcpp_1.0.13-1       svglite_2.1.3       xfun_0.49          \n[73] pkgconfig_2.0.3    \n```\n\n\n:::\n:::\n\n\n:::\n\n#### 9. GitHub Repository\n\n::: {.callout-tip collapse=\"true\"}\n##### Expand for GitHub Repo\n\nThe complete code for this analysis is available in [`30dcc_2025_10.qmd`](https://github.com/poncest/personal-website/blob/master/data_visualizations/TidyTuesday/2025/30dcc_2025_10.qmd).\n\nFor the full repository, [click here](https://github.com/poncest/personal-website/).\n:::\n\n\n#### 10. References\n::: {.callout-tip collapse=\"true\"}\n##### Expand for References\n\n1. Data Sources:\n   - ESPN via { hoopR } package: [hoopR](https://github.com/sportsdataverse/hoopR)\n  \n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}