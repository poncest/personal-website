{
  "hash": "cae0faa514e42ade26bcc9e2f26fb214",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Gender Representation in the International Mathematical Olympiad\"\nsubtitle: |\n  | Left: Total number of  male and female contestants by country\n  | Proportion of total contestants who were male and female each year\nauthor: \"Steven Ponce\"\ndate: \"2024-09-21\"\ncategories: [\"TidyTuesday\", \"Data Visualization\", \"R Programming\", \"2024\"]\nimage: \"thumbnails/tt_2024_39.png\"\n\nformat:\n  html:\n    code-fold: true\n    df_print: kable\n  \neditor_options: \n  chunk_output_type: console\n\nexecute: \n  error: false\n  message: false\n  warning: false\n  eval: false\n\n# share:\n#   permalink: \"https://stevenponce.netlify.app/data_visualizations.html\"\n#   linkedin: true\n#   twitter: true\n#   email: true\n---\n\n![Gender Representation in the International Mathematical Olympiad. On the left, a bar chart shows the total number of male and female contestants by country (raw counts), with the UK, Russia, and Romania having the highest totals. Male contestants dominate in nearly every country. On the right, a line chart shows the proportion of male and female contestants each year from 1959 to 2024, with males consistently comprising around 87% of contestants and females around 13%. Annotations highlight that despite an increase in overall contestants, the gender gap has remained the same.](tt_2024_39.png){#fig-1}\n\n### <mark> __Steps to Create this Graphic__ </mark>\n\n#### 1. Load Packages & Setup \n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: load\n\npacman::p_load(\n  tidyverse,         # Easily Install and Load the 'Tidyverse'\n  ggtext,            # Improved Text Rendering Support for 'ggplot2'\n  showtext,          # Using Fonts More Easily in R Graphs\n  janitor,           # Simple Tools for Examining and Cleaning Dirty Data\n  skimr,             # Compact and Flexible Summaries of Data\n  scales,            # Scale Functions for Visualization\n  lubridate,         # Make Dealing with Dates a Little Easier\n  MetBrewer,         # Color Palettes Inspired by Works at the Metropolitan Museum of Art\n  MoMAColors,        # Color Palettes Inspired by Artwork at the Museum of Modern Art in New York City\n  glue,              # Interpreted String Literals\n  patchwork,         # The Composer of Plots\n  geomtextpath       # Curved Text in 'ggplot2' \n )  \n\n# ### |- figure size ----\ncamcorder::gg_record(\n  dir    = here::here(\"temp_plots\"),\n  device = \"png\",\n  width  =  11,\n  height =  10,\n  units  = \"in\",\n  dpi    = 320\n)\n\n### |- resolution ----\nshowtext_opts(dpi = 320, regular.wt = 300, bold.wt = 800)\n```\n````\n:::\n\n\n#### 2. Read in the Data \n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: read\n\ntt <-tidytuesdayR::tt_load(2024, week = 39) \n\ncountry_results <- tt$country_results_df |> clean_names() |> glimpse()\nindividual_results <- tt$individual_results_df |> clean_names() |> glimpse()\ntimeline <- tt$timeline_df |> clean_names() |> glimpse()\n\ntidytuesdayR::readme(tt)\nrm(tt)\n```\n````\n:::\n\n\n#### 3. Examing the Data \n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: examine\n\nglimpse(country_results)\nglimpse(individual_results)\nglimpse(timeline)\n```\n````\n:::\n\n\n#### 4. Tidy Data \n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: tidy\n\n# first plot data (pyramid style chart) ----\n\n# Calculate the total number of male and female contestants per country\ngender_by_country_summary <- timeline |>\n  group_by(country) |>\n  summarize(\n    male = sum(male_contestant, na.rm = TRUE),\n    female = sum(female_contestant, na.rm = TRUE),\n    total_contestants = male + female\n  ) |>\n  ungroup() |>\n  arrange(desc(total_contestants))\n\n# Prepare the data for a pyramid chart\ngender_by_country <- gender_by_country_summary |>\n  pivot_longer(\n    cols = c(male, female),\n    names_to = \"gender\",\n    values_to = \"count\"\n  ) |>\n  mutate(count = ifelse(gender == \"female\", -count, count)) # Negative for female\n\n# Modify the country labels to shorten or reformat names\ngender_by_country <- gender_by_country |>\n  mutate(\n    country = case_when(\n      country == \"United States of America\" ~ \"USA\",\n      country == \"United Kingdom\" ~ \"UK\",\n      country == \"People's Republic of China\" ~ \"China\",\n      country == \"Union of Soviet Socialist Republics\" ~ \"USSR\",\n      country == \"Republic of Korea\" ~ \"South Korea\",\n      country == \"Russian Federation\" ~ \"Russia\",\n      country == \"German Democratic Republic\" ~ \"East Germany\",\n      TRUE ~ country # Keep all other country names as they are\n    )\n  )\n\n\n# second plot (line chart) ----\n\n# Data prep: Normalize by total contestants and calculate the gap\ngender_representation_normalized <- timeline |>\n    filter(!is.na(female_contestant) & !is.na(male_contestant)) |>\n    mutate(\n        total_contestants = female_contestant + male_contestant,\n        female_percentage = (female_contestant / total_contestants) * 100,\n        male_percentage = (male_contestant / total_contestants) * 100\n        ) |>\n    select(year, female_percentage, male_percentage)\n\n# Pivot longer\ngender_representation_normalized_long <- gender_representation_normalized |>\n    pivot_longer(\n      cols = c(female_percentage, male_percentage), \n      names_to = \"gender\", \n      values_to = \"percentage\"\n      ) |>\n    mutate(gender = ifelse(gender == \"female_percentage\", \"Female\", \"Male\"))\n\n# Split the data into two separate datasets for ribbon use\nmale_data <- gender_representation_normalized_long |> filter(gender == \"Male\")\nfemale_data <- gender_representation_normalized_long |> filter(gender == \"Female\")\n```\n````\n:::\n\n\n\n#### 5. Visualization Parameters \n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: params\n\n### |- plot aesthetics ----\nbkg_col      <- colorspace::lighten('#f7f5e9', 0.05)    \ntitle_col    <- \"gray20\"           \nsubtitle_col <- \"gray20\"     \ncaption_col  <- \"gray30\"   \ntext_col     <- \"gray20\"    \ncol_palette  <- MoMAColors::moma.colors(palette_name = 'Klein', type = \"discrete\")[c(1,2)]\n\n### |-  titles and caption ----\n# icons\ntt <- str_glue(\"#TidyTuesday: { 2024 } Week { 39 } &bull; Source: IMO Team and Individual Results<br>\")\nli <- str_glue(\"<span style='font-family:fa6-brands'>&#xf08c;</span>\")\ngh <- str_glue(\"<span style='font-family:fa6-brands'>&#xf09b;</span>\")\nmn <- str_glue(\"<span style='font-family:fa6-brands'>&#xf4f6;</span>\")\n\n# text\nmale   <- str_glue(\"<span style='color:{ col_palette[2] }'>**male**</span>\")\nfemale <- str_glue(\"<span style='color:{ col_palette[1] }'>**female**</span>\")\n\ntitle_text    <- str_glue(\"Gender Representation in the International Mathematical Olympiad\")\nsubtitle_text <- str_glue(\"__Left:__ Total number of  { male } and { female } contestants by country (_raw counts_).<br>\n                          __Right:__ Proportion of total contestants who were { male } and { female }  each year (_% of total contestants per year_)\")\ncaption_text  <- str_glue(\"{tt} {li} stevenponce &bull; {mn} @sponce1(graphic.social) {gh} poncest &bull; #rstats #ggplot2\")\n\n### |-  fonts ----\nfont_add(\"fa6-brands\", \"fonts/6.4.2/Font Awesome 6 Brands-Regular-400.otf\")\nfont_add_google(\"Oswald\", regular.wt = 400, family = \"title\")\nfont_add_google(\"Merriweather Sans\", regular.wt = 400, family = \"subtitle\")\nfont_add_google(\"Merriweather Sans\", regular.wt = 400, family = \"text\")\nfont_add_google(\"Noto Sans\", regular.wt = 400, family = \"caption\")\nshowtext_auto(enable = TRUE)\n\n### |-  plot theme ----\ntheme_set(theme_minimal(base_size = 14, base_family = \"text\"))                \n\ntheme_update(\n    plot.title.position   = \"plot\",\n    plot.caption.position = \"plot\",\n    legend.position       = 'plot',\n    plot.background       = element_rect(fill = bkg_col, color = bkg_col),\n    panel.background      = element_rect(fill = bkg_col, color = bkg_col),\n    plot.margin           = margin(t = 10, r = 20, b = 10, l = 20),\n    axis.title.x          = element_text(margin = margin(10, 0, 0, 0), size = rel(1.1), \n                                         color = text_col, family = \"text\", face = \"bold\", hjust = 0.5),\n    axis.title.y          = element_text(margin = margin(0, 10, 0, 0), size = rel(1.1), \n                                         color = text_col, family = \"text\", face = \"bold\", hjust = 0.5),\n    axis.text             = element_text(size = rel(0.8), color = text_col, family = \"text\"),\n)  \n```\n````\n:::\n\n\n\n#### 6. Plot\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: plot\n\n### |-  first plot ----  \n\n# Pyramid style chart\np1 <- ggplot(gender_by_country, aes(x = reorder(country, total_contestants), y = count, fill = gender)) +\n  geom_bar(stat = \"identity\", width = 0.75, alpha = 0.85) +\n\n  # Geoms\n  # Adding labels outside the bars\n  geom_text(aes(label = comma(abs(count))),\n    position = position_nudge(y = ifelse(gender_by_country$gender == \"female\", -50, 50)),\n    size = 3.6, hjust = ifelse(gender_by_country$gender == \"female\", 1, 0), color = text_col\n  ) +\n\n  # Adding a single country label next to the bars\n  geom_text(aes(y = -900, label = country), # Position countries next to the bars\n    size = 3.6, hjust = 0.5, vjust = 0, color = text_col\n  ) +\n\n  # Scales\n  scale_y_continuous(\n    breaks = seq(-1000, 1000, by = 500),\n    labels = scales::comma_format(),\n    limits = c(-1200, 1600)\n  ) +\n  scale_fill_manual(values = col_palette) +\n  coord_flip(clip = \"off\") +\n\n  # labs\n  labs(\n    x = NULL,\n    y = \"Number of Contestants\",\n    fill = \"Gender\"\n  ) +\n\n  # Theme\n  theme(\n    axis.text.y = element_blank(),\n    axis.title.y = element_blank(),\n    axis.ticks.y = element_blank(),\n    panel.grid.major.y = element_blank(),\n  )\n\n\n### |-  second plot ----  \n\n# Create the plot, including the ribbon and the textlines\np2 <- ggplot() +\n\n  # Geoms\n  # Add ribbon to fill the area between male and female percentages\n  geom_ribbon(aes(x = male_data$year, ymin = female_data$percentage, ymax = male_data$percentage),\n    fill = \"lightblue\", alpha = 0.5\n  ) +\n\n  # Add the geom_textline for male and female percentages\n  geom_textline(aes(x = year, y = percentage, color = gender, label = gender),\n    data = gender_representation_normalized_long,\n    linewidth = 1,\n    family = \"text\",\n    size = 5,\n    fontface = \"bold\",\n    hjust = 0.5, # move labels to the right\n    offset = unit(0.3, \"cm\"), # move labels up\n    text_smoothing = 30 # smooth text (more legible)\n  ) +\n\n  # Adding geom_point and geom_text for the start and end percentages for male and female\n  geom_point(\n    data = filter(gender_representation_normalized_long, year == min(year) | year == max(year)),\n    aes(x = year, y = percentage, color = gender), size = 4\n  ) +\n\n  # Female\n  geom_text(\n    data = filter(\n      gender_representation_normalized_long,\n      (year == min(year) | year == max(year)) & gender == \"Female\"\n    ),\n    aes(\n      x = year, y = percentage, label = scales::percent(percentage / 100, accuracy = 1),\n      color = gender\n    ), size = 5, nudge_x = -0.005, vjust = -1.3, fontface = \"bold\", family = \"text\"\n  ) +\n\n  # Male\n  geom_text(\n    data = filter(\n      gender_representation_normalized_long,\n      (year == min(year) | year == max(year)) & gender == \"Male\"\n    ),\n    aes(\n      x = year, y = percentage, label = scales::percent(percentage / 100, accuracy = 1),\n      color = gender\n    ), size = 5, nudge_x = 0.005, vjust = 1.9, fontface = \"bold\", family = \"text\"\n  ) +\n\n  # Labs\n  labs(\n    x = \"Year\",\n    y = \"Percentage of Contestants\",\n    color = \"Gender\"\n  ) +\n\n  # Scales\n  scale_x_continuous() +\n  scale_y_continuous(labels = scales::label_percent(scale = 1)) +\n  scale_color_manual(values = col_palette) +\n  coord_cartesian(clip = \"off\")\n\n\n#### |-  combined plot ----  \n# Annotation and aspect ratio of p2\np2 <- p2 + \n    annotate(\n        \"text\", \n        x = 1962, \n        y = 50, \n        label = \"Even though the overall contestant count has increased,\\n the gender gap has remained the same.\", \n        size = 4, \n        fontface = \"italic\", \n        family = \"text\", \n        color = 'gray40',\n        hjust = 0\n    ) +\n    theme(aspect.ratio = 0.85)  \n\n# Combine plots\ncombined_plot <- (p1 | p2) +\n    patchwork::plot_layout(\n        ncol = 2, \n        widths = c(1, 1.25),  # Adjusting relative widths\n        guides = 'collect'    # Collect legends\n    ) +\n    \n    # Labs\n    plot_annotation(\n        title = title_text,\n        subtitle = subtitle_text,\n        caption = caption_text\n    ) &\n    \n    # Theme \n    theme(\n        plot.margin = margin(10, 20, 10, 20),  \n        \n        plot.title = element_markdown(\n            size = rel(1.7),   \n            family = \"title\",\n            face = \"bold\",\n            color = title_col,\n            lineheight = 1.1,\n            margin = margin(t = 5, b = 5)\n        ),\n        plot.subtitle = element_markdown(\n            size = rel(0.88), \n            family = 'subtitle',\n            color = subtitle_col,\n            lineheight = 1.1, \n            margin = margin(t = 5, b = 5)\n        ),\n        plot.caption = element_markdown(\n            size = rel(0.65),\n            family = \"caption\",\n            color = caption_col,\n            lineheight = 1.1,\n            hjust = 0.5,\n            halign = 1,\n            margin = margin(t = 5, b = 5)\n        )\n    )\n\n# Show the combined plot\ncombined_plot  \n```\n````\n:::\n\n\n#### 7. Save\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: save\n\n### |-  plot image ----  \n\nlibrary(ggplotify)\n# Convert patchwork plot to grob \n# There was some issues between patchwork and ggsave\nplot_grob <- as.grob(combined_plot)\n\n# Save the plot again\nggsave(\n    filename = here::here(\"data_visualizations/TidyTuesday/2024/tt_2024_39.png\"),\n    plot = plot_grob,\n    width  = 11,\n    height = 10,\n    units  = \"in\",\n    dpi    = 320\n)\n\n### |-  plot thumbnail----  \nmagick::image_read(here::here(\"data_visualizations/TidyTuesday/2024/tt_2024_39.png\")) |> \n  magick::image_resize(geometry = \"400\") |> \n  magick::image_write(here::here(\"data_visualizations/TidyTuesday/2024/thumbnails/tt_2024_39.png\"))\n```\n````\n:::\n\n\n\n#### 8. Session Info\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r, eval=TRUE}}\ninfo <- capture.output(sessioninfo::session_info())\n# Remove lines that contain \"[1]\" and \"[2]\" (the file paths)\nfiltered_info <- grep(\"\\\\[1\\\\]|\\\\[2\\\\]\", info, value = TRUE, invert = TRUE)\ncat(filtered_info, sep = \"\\n\")\n```\n````\n\n::: {.cell-output .cell-output-stdout}\n\n```\n─ Session info ───────────────────────────────────────────────────────────────\n setting  value\n version  R version 4.4.1 (2024-06-14 ucrt)\n os       Windows 11 x64 (build 22631)\n system   x86_64, mingw32\n ui       RTerm\n language (EN)\n collate  English_United States.utf8\n ctype    English_United States.utf8\n tz       America/New_York\n date     2025-05-22\n pandoc   3.4 @ C:/Program Files/RStudio/resources/app/bin/quarto/bin/tools/ (via rmarkdown)\n\n─ Packages ───────────────────────────────────────────────────────────────────\n ! package     * version date (UTC) lib source\n P digest        0.6.37  2024-08-19 [?] RSPM (R 4.4.0)\n P evaluate      1.0.1   2024-10-10 [?] RSPM (R 4.4.0)\n P fastmap       1.2.0   2024-05-15 [?] RSPM (R 4.4.0)\n P htmltools     0.5.8.1 2024-04-04 [?] RSPM (R 4.4.0)\n P htmlwidgets   1.6.4   2023-12-06 [?] CRAN (R 4.4.0)\n P jsonlite      1.8.9   2024-09-20 [?] RSPM (R 4.4.0)\n P knitr         1.49    2024-11-08 [?] RSPM (R 4.4.0)\n P rmarkdown     2.29    2024-11-04 [?] RSPM (R 4.4.0)\n P rstudioapi    0.17.1  2024-10-22 [?] RSPM (R 4.4.0)\n P sessioninfo   1.2.2   2021-12-06 [?] RSPM (R 4.4.0)\n P xfun          0.49    2024-10-31 [?] RSPM (R 4.4.0)\n P yaml          2.3.10  2024-07-26 [?] RSPM (R 4.4.0)\n\n\n P ── Loaded and on-disk path mismatch.\n\n──────────────────────────────────────────────────────────────────────────────\n```\n\n\n:::\n:::\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}