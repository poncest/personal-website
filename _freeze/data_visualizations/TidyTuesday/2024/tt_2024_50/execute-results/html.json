{
  "hash": "8beb4795dd76022331899bb3be8d7002",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Top 20 Perfume Brands Ranked by Average Rating and Portfolio Size\"\nsubtitle: \"This chart displays the leading perfume brands based on their average customer ratings. The length of each bar represents the brand's average rating, while the height indicates the number of fragrances in their portfolio.\"\ndescription: \"Analysis of top perfume brands using TidyTuesday data. Creating a Mekko chart visualization to showcase ratings and portfolio sizes using R and ggplot2.\"\nauthor: \"Steven Ponce\"\ndate: \"2024-12-07\"\ncategories: [TidyTuesday, Data Visualization, R Programming]  \ntags: [TidyTuesday, ggplot2, R, Data Analysis, Visualization, Perfume Brands]\nimage: \"thumbnails/tt_2024_50.png\"\n\nformat:\n  html:\n    toc: true\n    toc-depth: 5\n    code-link: true\n    code-fold: true\n    code-tools: true\n    code-summary: \"Show code\"\n    self-contained: true\n    theme: \n      light: [flatly, assets/styling/custom_styles.scss]\n      dark: [darkly, assets/styling/custom_styles_dark.scss]\n\neditor_options: \n  chunk_output_type: inline\n\nexecute: \n  freeze: true                                                  \n  cache: true                                                   \n  error: false\n  message: false\n  warning: false\n  eval: true\n\nfilters:\n  - social-share\nshare:\n  permalink: \"https://stevenponce.netlify.app/data_visualizations/TidyTuesday/2024/tt_2024_50.html\"\n  description: \"Exploring perfume brand ratings and portfolio sizes through data visualization using TidyTuesday's Parfumo dataset. #rstats #TidyTuesday #DataViz\"\n  twitter: true\n  linkedin: true\n  email: true\n  facebook: false\n  reddit: false\n  stumble: false\n  tumblr: false\n  mastodon: true\n  bsky: true\n---\n\n\n\n![Mekko chart displaying the top 20 perfume brands ranked by average rating and portfolio size. The length of each bar represents the brand's average rating, and the height represents the number of fragrances. Notable brands include Ensar Oud, Guerlain, and Sunnamusk, with annotations highlighting their portfolio sizes.](tt_2024_50.png){#fig-1}\n\n\n### <mark> __Steps to Create this Graphic__ </mark>\n\n#### 1. Load Packages & Setup \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## 1. LOAD PACKAGES & SETUP ----\nsuppressPackageStartupMessages({\n    pacman::p_load(\n    tidyverse,      # Easily Install and Load the 'Tidyverse'\n    ggtext,         # Improved Text Rendering Support for 'ggplot2'\n    showtext,       # Using Fonts More Easily in R Graphs\n    janitor,        # Simple Tools for Examining and Cleaning Dirty Data\n    skimr,          # Compact and Flexible Summaries of Data\n    scales,         # Scale Functions for Visualization\n    glue,           # Interpreted String Literals\n    here            # A Simpler Way to Find Your Files\n    )   \n})\n\nsuppressMessages(source(here::here(\"_setup.R\")))\n\n### |- figure size ----\ncamcorder::gg_record(\n  dir    = here::here(\"temp_plots\"),\n  device = \"png\",\n  width  =  8,\n  height =  16,\n  units  = \"in\",\n  dpi    = 320\n)\n\n### |- resolution ----\nshowtext_opts(dpi = 320, regular.wt = 300, bold.wt = 800)\n```\n:::\n\n\n\n#### 2. Read in the Data \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# tt <- tidytuesdayR::tt_load(2024, week = 50)\n#\n# parfumo_data_raw  <- tt$parfumo_data |> clean_names()\n#\n# tidytuesdayR::readme(tt)\n# rm(tt)\n\n# Option 2: Read directly from GitHub\nparfumo_data_raw <- readr::read_csv(\"https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2024/2024-12-10/parfumo_data_clean.csv\")\nparfumo_data_raw <- parfumo_data_raw |> clean_names()\n```\n:::\n\n\n\n#### 3. Examine the Data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(parfumo_data_raw)\nskim(parfumo_data_raw)\n```\n:::\n\n\n\n#### 4. Tidy Data \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### |- tidy data ----\n\nparfumo_brand_stats <- parfumo_data_raw |>\n    group_by(brand) |>\n    summarise(\n        n_fragrances = n(),\n        avg_rating = mean(rating_value, na.rm = TRUE),\n        .groups = \"drop\"\n    ) |>\n    filter(n_fragrances >= 50) |> # Filter for brands with at least 50 fragrances\n    arrange(desc(avg_rating)) |>\n    head(20) |> # Select the top 20 brands based on average rating\n    # Create y-coordinates for rectangles\n    mutate(\n        ymax = cumsum(n_fragrances),\n        ymin = lag(ymax, default = 0),\n        font_size = ifelse(n_fragrances > 200, 7.5, 4.5), # Larger bars get a bigger font size\n        brand = case_when(\n            brand == \"Abdul Samad Al Qurashi / عبدالصمد القرشي\" ~ \"Abdul Samad Al Qurashi\", # Arabic characters were not rendering properly\n            brand == \"Teone Reinthal Natural Perfume\" ~ \"Teone Reinthal\\nNatural Perfume\",\n            TRUE ~ as.character(brand)\n        )\n    )\n```\n:::\n\n\n\n\n#### 5. Visualization Parameters \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### |-  plot aesthetics ----\nbkg_col      <- \"#f5f5f2\"\ntitle_col    <- \"gray20\"\nsubtitle_col <- \"gray20\"\ncaption_col  <- \"gray30\"\ntext_col     <- \"gray30\"\nnote_col     <- \"gray40\" \nbar_col      <- \"#1B2B48\"\n\n# icons\ntt <- str_glue(\"#TidyTuesday: { 2024 } Week { 50 } &bull; Source: Parfumo Fragrance Dataset<br>\")\nli <- str_glue(\"<span style='font-family:fa6-brands'>&#xf08c;</span>\")\ngh <- str_glue(\"<span style='font-family:fa6-brands'>&#xf09b;</span>\")\nbs <- str_glue(\"<span style='font-family:fa6-brands'>&#xe671; </span>\")\n\n# text\ntitle_text    <- str_glue(\"Top 20 Perfume Brands Ranked by Average Rating<br>\n                          and Portfolio Size\")\nsubtitle_text <- str_glue(\"This chart displays the leading perfume brands based on their average<br>\n                          customer ratings. The length of each bar represents the brand\\\\'s average<br>\n                          rating, while the height indicates the number of fragrances in their portfolio.\")\ncaption_text <- str_glue(\"{tt} {li} stevenponce &bull; {bs} sponce1 &bull; {gh} poncest &bull; #rstats #ggplot2\")\n\n### |-  fonts ----\nsetup_fonts()\n\n### |-  plot theme ----\ntheme_set(theme_minimal(base_size = 14, base_family = \"text\"))\n\ntheme_update(\n    plot.title.position   = \"plot\",\n    plot.caption.position = \"plot\",\n    legend.position       = \"plot\",\n    plot.background       = element_rect(fill = bkg_col, color = bkg_col),\n    panel.background      = element_rect(fill = bkg_col, color = bkg_col),\n    plot.margin           = margin(t = 10, r = 20, b = 10, l = 20),\n    axis.title.x          = element_text(margin = margin(10, 0, 0, 0), size = rel(1.1),\n                                         color = text_col, family = \"text\", face = \"bold\", hjust = 0.5),\n    axis.title.y.right    = element_text(margin = margin(0, 20, 0, 10), size = rel(1.1),\n                                         color = text_col, family = \"text\", face = \"bold\",\n                                         angle = 0, vjust = 1.0, hjust = 1),\n    axis.line.x           = element_line(color = \"#252525\", linewidth = .2),\n    axis.title            = element_text(size = rel(0.93), face = \"bold\", color = text_col),\n    axis.text             = element_text(size = rel(0.79), color = text_col),\n    legend.title          = element_blank(),\n    legend.text           = element_text(size = rel(0.71), color = text_col),\n    panel.grid.major.x    = element_blank(),\n    panel.grid.major.y    = element_line(color = \"gray90\", linewidth = 0.2),\n    panel.grid.minor      = element_blank()\n)\n```\n:::\n\n\n\n\n#### 6. Plot \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### |-  initial plot ----\n\np <- ggplot(parfumo_brand_stats) +\n    # Horizontal bar chart with variable width\n    geom_rect(\n        aes(\n            xmin = 0,\n            xmax = avg_rating,\n            ymin = ymin,\n            ymax = ymax\n        ),\n        color = \"#e0e0e0\",\n        fill = bar_col,\n        linewidth = ifelse(parfumo_brand_stats$n_fragrances > 200, 1, 0.3)\n    ) +\n    # Add brand names to bars\n    geom_text(\n        aes(\n            x = 0.2,\n            y = ymin + ((ymax - ymin) / 2),\n            label = ifelse(n_fragrances >= 80, brand, \"\"),\n        ),\n        color = ifelse(parfumo_brand_stats$n_fragrances < 200, \"#e0e0e0\", \"white\"),\n        hjust = 0,\n        size = parfumo_brand_stats$font_size\n    ) +\n    # Add ratings to bars\n    geom_text(\n        aes(\n            x = avg_rating - 0.3,\n            y = ymin + ((ymax - ymin) / 2),\n            label = ifelse(n_fragrances >= 80,\n                           paste(sprintf(\"(%.1f)\", avg_rating)),\n                           \"\"\n            ),\n        ),\n        color = ifelse(parfumo_brand_stats$n_fragrances < 200, \"#e0e0e0\", \"white\"),\n        hjust = 1,\n        size = 3.2\n    ) +\n    # Scales\n    scale_x_continuous(\n        limits = c(0, 11),\n        breaks = seq(0, 11, 2),\n        expand = c(0, 0, 0.05, 0)\n    ) +\n    scale_y_continuous(\n        expand = c(0, 0, 0.01, 0),\n        position = \"right\",\n        labels = scales::comma,\n        breaks = seq(0, max(parfumo_brand_stats$ymax), 1000)\n    ) +\n    # Labs\n    labs(\n        x = \"Average Rating\",\n        y = \"Number of\\nFragrances\",\n        title    = title_text,\n        subtitle = subtitle_text,\n        caption  = caption_text\n    ) +\n    # Theme\n    theme(\n        plot.title      = element_markdown(\n            size        = rel(1.8),\n            family      = \"title\",\n            face        = \"bold\",\n            color       = title_col,\n            lineheight  = 1.1,\n            margin      = margin(t = 5, b = 5)\n        ),\n        plot.subtitle   = element_markdown(\n            size        = rel(1.06),\n            family      = \"subtitle\",\n            color       = text_col,\n            lineheight  = 1.1,\n            margin      = margin(t = 5, b = 20)\n        ),\n        plot.caption    = element_markdown(\n            size        = rel(.65),\n            family      = \"caption\",\n            color       = caption_col,\n            lineheight  = 0.65,\n            hjust       = 0.5,\n            halign      = 0.5,\n            margin      = margin(t = 10, b = 5)\n        ),\n    )\n\nannotation_data <- tibble(\n    x = c(9, 9, 9),\n    y = c(parfumo_brand_stats$ymin[3] + ((parfumo_brand_stats$ymax[3] - parfumo_brand_stats$ymin[3]) / 2),\n          parfumo_brand_stats$ymin[18] + ((parfumo_brand_stats$ymax[18] - parfumo_brand_stats$ymin[18]) / 2),\n          parfumo_brand_stats$ymin[8] + ((parfumo_brand_stats$ymax[8] - parfumo_brand_stats$ymin[8]) / 2)),\n    xend = c(parfumo_brand_stats$avg_rating[3], parfumo_brand_stats$avg_rating[18], parfumo_brand_stats$avg_rating[8]),\n    yend = c((parfumo_brand_stats$ymin[3] + parfumo_brand_stats$ymax[3]) / 2,\n             (parfumo_brand_stats$ymin[18] + parfumo_brand_stats$ymax[18]) / 2,\n             (parfumo_brand_stats$ymin[8] + parfumo_brand_stats$ymax[8]) / 2),\n    label = c(\"Ensar Oud / Oriscent has\\n534 fragrances in its portfolio\",\n              \"Guerlain has 586 fragrances\\nin its portfolio\",\n              \"Sunnamusk has 57 fragrances\\nin its portfolio\")\n)\n\np <- p +\n    # Add annotation outside the grid\n    coord_cartesian(\n        expand = FALSE,\n        clip = \"off\",\n        xlim = c(0, 11)\n    ) +\n    \n    # Add labels and curves programmatically\n    geom_label(\n        data = annotation_data,\n        aes(\n            x = x + 0.2,\n            y = y,\n            label = label\n        ),\n        size = 4,\n        color = note_col,\n        hjust = 0,\n        lineheight = 1,\n        label.size = NA,\n        label.padding = unit(0, \"lines\"),\n        fill = \"transparent\"\n    ) +\n    geom_curve(\n        data = annotation_data,\n        aes(\n            x = x,\n            y = y,\n            xend = xend,\n            yend = yend\n        ),\n        curvature = 0,\n        color = note_col,\n        arrow = arrow(type = \"closed\", length = unit(0.1, \"inches\"))\n    )  \n```\n:::\n\n\n\n\n\n#### 7. Save\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### |-  plot image ----  \n\nsource(here::here(\"R/image_utils.R\"))\nsave_plot(p, type = \"tidytuesday\", year = 2024, week = 50, height = 16, width = 8)\n```\n:::\n\n\n\n\n\n#### 8. Session Info\n\n::: {.callout-tip collapse=\"true\"}\n##### Expand for Session Info\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\nR version 4.4.1 (2024-06-14 ucrt)\nPlatform: x86_64-w64-mingw32/x64\nRunning under: Windows 11 x64 (build 22631)\n\nMatrix products: default\n\n\nlocale:\n[1] LC_COLLATE=English_United States.utf8 \n[2] LC_CTYPE=English_United States.utf8   \n[3] LC_MONETARY=English_United States.utf8\n[4] LC_NUMERIC=C                          \n[5] LC_TIME=English_United States.utf8    \n\ntime zone: America/New_York\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices datasets  utils     methods   base     \n\nother attached packages:\n [1] here_1.0.1      glue_1.8.0      scales_1.3.0    skimr_2.1.5    \n [5] janitor_2.2.0   showtext_0.9-7  showtextdb_3.0  sysfonts_0.8.9 \n [9] ggtext_0.1.2    lubridate_1.9.3 forcats_1.0.0   stringr_1.5.1  \n[13] dplyr_1.1.4     purrr_1.0.2     readr_2.1.5     tidyr_1.3.1    \n[17] tibble_3.2.1    ggplot2_3.5.1   tidyverse_2.0.0\n\nloaded via a namespace (and not attached):\n [1] gtable_0.3.6      xfun_0.49         htmlwidgets_1.6.4 tzdb_0.4.0       \n [5] vctrs_0.6.5       tools_4.4.0       generics_0.1.3    curl_6.0.0       \n [9] parallel_4.4.0    gifski_1.32.0-1   fansi_1.0.6       pacman_0.5.1     \n[13] pkgconfig_2.0.3   lifecycle_1.0.4   farver_2.1.2      compiler_4.4.0   \n[17] textshaping_0.4.0 munsell_0.5.1     repr_1.1.7        codetools_0.2-20 \n[21] snakecase_0.11.1  htmltools_0.5.8.1 yaml_2.3.10       crayon_1.5.3     \n[25] pillar_1.9.0      camcorder_0.1.0   magick_2.8.5      commonmark_1.9.2 \n[29] tidyselect_1.2.1  digest_0.6.37     stringi_1.8.4     rsvg_2.6.1       \n[33] rprojroot_2.0.4   fastmap_1.2.0     grid_4.4.0        colorspace_2.1-1 \n[37] cli_3.6.3         magrittr_2.0.3    base64enc_0.1-3   utf8_1.2.4       \n[41] withr_3.0.2       bit64_4.5.2       timechange_0.3.0  rmarkdown_2.29   \n[45] bit_4.5.0         ragg_1.3.3        hms_1.1.3         evaluate_1.0.1   \n[49] knitr_1.49        markdown_1.13     rlang_1.1.4       gridtext_0.1.5   \n[53] Rcpp_1.0.13-1     xml2_1.3.6        renv_1.0.3        svglite_2.1.3    \n[57] rstudioapi_0.17.1 vroom_1.6.5       jsonlite_1.8.9    R6_2.5.1         \n[61] systemfonts_1.1.0\n```\n\n\n:::\n:::\n\n\n:::\n\n\n\n#### 9. GitHub Repository\n\n::: {.callout-tip collapse=\"true\"}\n##### Expand for GitHub Repo\n \nThe complete code for this analysis is available in [`tt_2024_50.qmd`](https://github.com/poncest/personal-website/blob/master/data_visualizations/TidyTuesday/2024/tt_2024_50.qmd).\n\nFor the full repository, [click here](https://github.com/poncest/personal-website/).\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}