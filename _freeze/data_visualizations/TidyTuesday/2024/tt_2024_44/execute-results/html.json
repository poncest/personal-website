{
  "hash": "f2a354983e477528a47ec1e61d5e1e0a",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Monster Movies by Decade and Title Type\"\nsubtitle: \"An exploration of 'monster' movies from 1960 onwards, categorized by type.\"\nauthor: \"Steven Ponce\"\ndate: \"2024-10-28\"\ncategories: [\"TidyTuesday\", \"Data Visualization\", \"R Programming\", \"2024\"]\nimage: \"thumbnails/tt_2024_44.png\"\nformat:\n  html:\n    toc: true\n    toc-depth: 5\n    code-link: true\n    code-fold: true\n    code-tools: true\n    code-summary: \"Show code\"\n    self-contained: true\neditor_options: \n  \n  chunk_output_type: inline\nexecute: \n  error: false\n  message: false\n  warning: false\n  eval: true\n# share:\n#   permalink: \"https://stevenponce.netlify.app/data_visualizations.png\"\n#   linkedin: true\n#   twitter: true\n#   email: true\n---\n\n![Bar mosaic chart showing the distribution of 'monster' movies by decade and title type (Movie, TV Movie, Video) from 1960 to 2020. Movies dominate in recent decades, while TV Movies and Videos were more prominent in earlier years.](tt_2024_44.png){#fig-1}\n\n\n### <mark> __Steps to Create this Graphic__ </mark>\n\n#### 1. Load Packages & Setup \n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: load\n#| warning: false\n\n## 1. LOAD PACKAGES & SETUP ----\nif (!require(\"pacman\")) install.packages(\"pacman\")\npacman::p_load(\n    tidyverse,         # Easily Install and Load the 'Tidyverse'\n    ggtext,            # Improved Text Rendering Support for 'ggplot2'\n    showtext,          # Using Fonts More Easily in R Graphs\n    janitor,           # Simple Tools for Examining and Cleaning Dirty Data\n    scales,            # Scale Functions for Visualization\n    glue,              # Interpreted String Literals\n    here,              # A Simpler Way to Find Your Files\n    ggmosaic           # Mosaic Plots in the 'ggplot2' Framework # Mosaic Plots in the 'ggplot2' Framework\n)   \n\n### |- figure size ----\ncamcorder::gg_record(\n    dir    = here::here(\"temp_plots\"),\n    device = \"png\",\n    width  =  10,\n    height =  8,\n    units  = \"in\",\n    dpi    = 320\n)\n\n### |- resolution ----\nshowtext_opts(dpi = 320, regular.wt = 300, bold.wt = 800)\n```\n````\n:::\n\n\n#### 2. Read in the Data \n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: read\n#| include: true\n#| eval: true\n#| warning: false\n\ntt <-tidytuesdayR::tt_load(2024, week = 44) \n\nmonster_movie_genres <- tt$monster_movie_genres |> clean_names() \nmonster_movies       <- tt$monster_movies|> clean_names() \n\ntidytuesdayR::readme(tt)\nrm(tt)\n```\n````\n:::\n\n\n#### 3. Examine the Data\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: examine\n#| include: true\n#| eval: true\n#| results: 'hide'\n#| warning: false\n\nglimpse(monster_movie_genres)\nglimpse(monster_movies)\n```\n````\n:::\n\n\n#### 4. Tidy Data \n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: tidy\n#| warning: false\n\n### |- tidy data ----\nplot_data <- monster_movies |>\n    mutate(title_type = str_to_title(title_type)) |> \n    mutate(decade = (year %/% 10) * 10) |> \n    filter(decade >= 1960) |> \n    drop_na(title_type, decade) |>\n    count(title_type, decade) \n```\n````\n:::\n\n\n\n#### 5. Visualization Parameters \n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: params\n#| include: true\n#| warning: false\n\n### |- plot aesthetics ----\nbkg_col      <- colorspace::lighten('#f7f5e9', 0.05)    \ntitle_col    <- \"gray20\"           \nsubtitle_col <- \"gray20\"     \ncaption_col  <- \"gray30\"   \ntext_col     <- \"gray20\"    \ncol_palette  <- paletteer::paletteer_d(\"rcartocolor::TealRose\")[c(1,3,6)] \n# show_col(col_palette)\n\n### |-  titles and caption ----\n# icons\ntt <- str_glue(\"#TidyTuesday: { 2024 } Week { 44 } &bull; Source: IMDb non-commercial datasets<br>\")\nli <- str_glue(\"<span style='font-family:fa6-brands'>&#xf08c;</span>\")\ngh <- str_glue(\"<span style='font-family:fa6-brands'>&#xf09b;</span>\")\nmn <- str_glue(\"<span style='font-family:fa6-brands'>&#xf4f6;</span>\")\n\n# text\ntitle_text    <- str_glue(\"Monster Movies by Decade and Title Type\")\nsubtitle_text <- str_glue(\"An exploration of 'monster' movies from 1960 onwards, categorized by type.\")\ncaption_text  <- str_glue(\"{tt} {li} stevenponce &bull; {mn} @sponce1(graphic.social) {gh} poncest &bull; #rstats #ggplot2\")\n\n### |-  fonts ----\nfont_add(\"fa6-brands\", here::here(\"fonts/6.4.2/Font Awesome 6 Brands-Regular-400.otf\"))\nfont_add_google(\"Oswald\", regular.wt = 400, family = \"title\")\nfont_add_google(\"Merriweather Sans\", regular.wt = 400, family = \"subtitle\")\nfont_add_google(\"Merriweather Sans\", regular.wt = 400, family = \"text\")\nfont_add_google(\"Noto Sans\", regular.wt = 400, family = \"caption\")\nfont_add_google(\"Shadows Into Light\", regular.wt = 400, family = \"anotation\")\nshowtext_auto(enable = TRUE)\n\n### |-  plot theme ----\ntheme_set(theme_minimal(base_size = 14, base_family = \"text\"))                \n\ntheme_update(\n    plot.title.position   = \"plot\",\n    plot.caption.position = \"plot\",\n    legend.position       = \"plot\",\n    plot.background       = element_rect(fill = bkg_col, color = bkg_col),\n    panel.background      = element_rect(fill = bkg_col, color = bkg_col),\n    plot.margin           = margin(t = 10, r = 20, b = 10, l = 20),\n    axis.title.x          = element_text(margin = margin(10, 0, 0, 0), size = rel(1.1), \n                                         color = text_col, family = \"text\", face = \"bold\", hjust = 0.5),\n    axis.title.y          = element_text(margin = margin(0, 10, 0, 0), size = rel(1.1), \n                                         color = text_col, family = \"text\", face = \"bold\", hjust = 0.5),\n    axis.text             = element_text(size = rel(0.8), color = text_col, family = \"text\"),\n    panel.grid.minor      = element_blank(),\n    panel.grid.major      = element_blank()\n)  \n```\n````\n:::\n\n\n\n#### 6. Plot \n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: plot\n#| warning: false\n\n### |- initial plot ----\n\n# Mekko Chart\n\np <- plot_data |>\n    ggplot() +\n    \n    # Geoms\n    geom_mosaic(aes(weight = n, x = product(decade), fill = title_type)) +\n    \n    # Scales\n    scale_y_continuous() +\n    scale_fill_manual(values = col_palette) +\n    coord_cartesian(clip = 'off') +\n    \n    # Labs\n    labs(\n        x = \"Decade\", \n        y = \"Proportion\",\n        title = title_text,\n        subtitle = subtitle_text,\n        caption = caption_text\n        ) +\n    \n    # Theme\n    theme(\n        plot.title = element_text(\n            size = rel(2.2),\n            family = \"title\",\n            face = \"bold\",\n            color = title_col,\n            lineheight = 1.1,\n            margin = margin(t = 5, b = 5)\n        ),\n        plot.subtitle = element_text(\n            size = rel(1),\n            family = \"subtitle\",\n            color = subtitle_col,\n            lineheight = 1.1,\n            margin = margin(t = 5, b = 5)\n        ),\n        plot.caption = element_markdown(\n            size = rel(0.75),\n            family = \"caption\",\n            color = caption_col,\n            lineheight = 1.1,\n            hjust = 0.5,\n            halign = 1,\n            margin = margin(t = 15, b = 5)\n        )\n    )\n\n### |- annotated plot ----\np <- p +\n    annotate(\n        \"text\",\n        x = .55, y = .5, label = \"Movie\",\n        color = \"#fafafa\", size = 7, vjust = 1, hjust = 0,\n        fontface = \"bold\", family = \"text\"\n    ) +\n    annotate(\n        \"text\",\n        x = .55, y = .8, label = \"TV Movie\",\n        color = \"gray40\", size = 7, vjust = 1, hjust = 0,\n        fontface = \"bold\", family = \"text\"\n    ) +\n    annotate(\n        \"text\",\n        x = .55, y = .95, label = \"Video\",\n        color = \"#fafafa\", size = 7, vjust = 1, hjust = 0,\n        fontface = \"bold\", family = \"text\"\n    )\n```\n````\n:::\n\n\n\n\n#### 7. Save\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: save\n#| warning: false\n\n### |-  plot image ----  \n\n# Save the plot as PNG\nggsave(\n  filename = here::here(\"data_visualizations/TidyTuesday/2024/tt_2024_44.png\"), \n  plot = p,\n  width = 10, height = 8, units = \"in\", dpi = 320\n)\n\n### |-  plot thumbnail----  \nmagick::image_read(here::here(\"data_visualizations/TidyTuesday/2024/tt_2024_44.png\")) |> \n  magick::image_resize(geometry = \"400\") |> \n  magick::image_write(here::here(\"data_visualizations/TidyTuesday/2024/thumbnails/tt_2024_44.png\"))\n```\n````\n:::\n\n\n\n\n#### 8. Session Info\n\n::: {.callout-tip collapse=\"true\"}\n##### Expand for Session Info\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\nR version 4.4.1 (2024-06-14 ucrt)\nPlatform: x86_64-w64-mingw32/x64\nRunning under: Windows 11 x64 (build 22631)\n\nMatrix products: default\n\n\nlocale:\n[1] LC_COLLATE=English_United States.utf8 \n[2] LC_CTYPE=English_United States.utf8   \n[3] LC_MONETARY=English_United States.utf8\n[4] LC_NUMERIC=C                          \n[5] LC_TIME=English_United States.utf8    \n\ntime zone: America/New_York\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices datasets  utils     methods   base     \n\nother attached packages:\n [1] ggmosaic_0.3.3  here_1.0.1      glue_1.8.0      scales_1.3.0   \n [5] janitor_2.2.0   showtext_0.9-7  showtextdb_3.0  sysfonts_0.8.9 \n [9] ggtext_0.1.2    lubridate_1.9.3 forcats_1.0.0   stringr_1.5.1  \n[13] dplyr_1.1.4     purrr_1.0.2     readr_2.1.5     tidyr_1.3.1    \n[17] tibble_3.2.1    ggplot2_3.5.1   tidyverse_2.0.0 pacman_0.5.1   \n\nloaded via a namespace (and not attached):\n [1] tidyselect_1.2.1   viridisLite_0.4.2  farver_2.1.2       fastmap_1.2.0     \n [5] lazyeval_0.2.2     gh_1.4.1           digest_0.6.37      timechange_0.3.0  \n [9] lifecycle_1.0.4    rsvg_2.6.1         magrittr_2.0.3     compiler_4.4.0    \n[13] rlang_1.1.6        tools_4.4.0        utf8_1.2.4         yaml_2.3.10       \n[17] data.table_1.16.2  knitr_1.49         labeling_0.4.3     htmlwidgets_1.6.4 \n[21] bit_4.5.0          curl_6.0.0         plyr_1.8.9         xml2_1.3.6        \n[25] camcorder_0.1.0    tidytuesdayR_1.1.2 withr_3.0.2        productplots_0.1.1\n[29] grid_4.4.0         fansi_1.0.6        colorspace_2.1-1   paletteer_1.6.0   \n[33] gitcreds_0.1.2     cli_3.6.4          rmarkdown_2.29     crayon_1.5.3      \n[37] ragg_1.3.3         generics_0.1.3     rstudioapi_0.17.1  httr_1.4.7        \n[41] tzdb_0.5.0         commonmark_1.9.2   parallel_4.4.0     vctrs_0.6.5       \n[45] jsonlite_1.8.9     hms_1.1.3          bit64_4.5.2        ggrepel_0.9.6     \n[49] systemfonts_1.1.0  magick_2.8.5       plotly_4.10.4      gifski_1.32.0-1   \n[53] rematch2_2.1.2     codetools_0.2-20   stringi_1.8.4      gtable_0.3.6      \n[57] prismatic_1.1.2    munsell_0.5.1      pillar_1.9.0       rappdirs_0.3.3    \n[61] htmltools_0.5.8.1  R6_2.5.1           httr2_1.0.6        textshaping_0.4.0 \n[65] rprojroot_2.0.4    vroom_1.6.5        evaluate_1.0.1     markdown_1.13     \n[69] gridtext_0.1.5     snakecase_0.11.1   renv_1.0.3         Rcpp_1.0.13-1     \n[73] svglite_2.1.3      xfun_0.49          pkgconfig_2.0.3   \n```\n\n\n:::\n:::\n\n:::\n\n#### 9. GitHub Repository\n\n::: {.callout-tip collapse=\"true\"}\n\n##### Expand for GitHub Repo\n \n[Access the GitHub repository here](https://github.com/poncest/personal-website/)\n:::\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}