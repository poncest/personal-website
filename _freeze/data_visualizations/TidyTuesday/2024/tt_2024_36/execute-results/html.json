{
  "hash": "426d50426f42bc80c3bdc721c324bf1c",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Top 20 Responses to Key Questions in the 2024 Stack Overflow Survey\"\nsubtitle: \"Analysis of AI Tool Usage and Work Situation Across Countries\"\nauthor: \"Steven Ponce\"\ndate: \"2024-09-02\"\ncategories:\n  - \"#TidyTuesday\"\nimage: \"thumbnails/tt_2024_36.png\"\nformat:\n  html:\n    code-fold: true\neditor_options: \n  chunk_output_type: console\nexecute: \n  error: false\n  message: false\n  warning: false\n  eval: false\n\nfilters:\n  - social-share\nshare:\n  permalink: \"https://stevenponce.netlify.app/data_visualizations.html\"\n  linkedin: true\n  twitter: true\n  email: true\n---\n\n\n![The Sankey diagram illustrates the top 20 responses to key questions in the 2024 Stack Overflow survey, tracking the flow of responses about AI tool usage and work situations in selected countries. The responses are divided into categories like \"Yes,\" \"No Plan,\" \"Plan Soon,\" \"Hybrid,\" \"In-person,\" and \"Remote,\" and the paths are color-coded to show different questions and responses from each country.](tt_2024_36.png){#fig-1}\n\n### <mark> __Steps to Create this Graphic__ </mark>\n\n#### 1. Load Packages & Setup \n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(\n  tidyverse,     # Easily Install and Load the 'Tidyverse'\n  ggtext,        # Improved Text Rendering Support for 'ggplot2'\n  showtext,      # Using Fonts More Easily in R Graphs\n  janitor,       # Simple Tools for Examining and Cleaning Dirty Data\n  skimr,         # Compact and Flexible Summaries of Data\n  scales,        # Scale Functions for Visualization\n  lubridate,     # Make Dealing with Dates a Little Easier\n  MetBrewer,     # Color Palettes Inspired by Works at the Metropolitan Museum of Art\n  MoMAColors,    # Color Palettes Inspired by Artwork at the Museum of Modern Art in New York City\n  glue,          # Interpreted String Literals\n  ggalluvial,    # Alluvial Plots in 'ggplot2' # Alluvial Plots in 'ggplot2' # Alluvial Plots in 'ggplot2'\n  ggrepel,       # Automatically Position Non-Overlapping Text Labels with 'ggplot2'\n  magick         # Advanced Graphics and Image-Processing in R \n )  \n\n### |- figure size ----\ncamcorder::gg_record(\n  dir    = here::here(\"temp_plots\"),\n  device = \"png\",\n  width  =  7.77,\n  height =  8,\n  units  = \"in\",\n  dpi    = 320\n)\n\n### |- resolution ----\nshowtext_opts(dpi = 320, regular.wt = 300, bold.wt = 800)\n```\n:::\n\n\n#### 2. Read in the Data \n\n\n::: {.cell}\n\n```{.r .cell-code}\ntt <- tidytuesdayR::tt_load(2024, week = 36) \n\nresponse_crosswalk <- tt$qname_levels_single_response_crosswalk |> clean_names() |> glimpse()\nsurvey_questions   <- tt$stackoverflow_survey_questions |> clean_names() |> glimpse()\nsingle_response    <- tt$stackoverflow_survey_single_response |> clean_names() |> glimpse()\n\ntidytuesdayR::readme(tt)\nrm(tt)\n```\n:::\n\n\n#### 3. Examing the Data \n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(response_crosswalk)\nglimpse(survey_questions)\nglimpse(single_response)\n```\n:::\n\n\n#### 4. Tidy Data \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Tidyy\ntidy_data <- single_response |>\n    pivot_longer(cols = -c(response_id, country, currency, comp_total, converted_comp_yearly), \n                 names_to = \"qname\", \n                 values_to = \"response_code\") |>\n    left_join(response_crosswalk, by = c(\"qname\", \"response_code\" = \"level\")) |>\n    left_join(survey_questions, by = \"qname\") |> \n    mutate(\n        country = case_when(\n            country == \"United Kingdom of Great Britain and Northern Ireland\" ~ \"UK\",\n            country == \"United States of America\" ~ \"USA\",\n            TRUE ~ as.factor(country)\n        )\n    ) |> \n    drop_na(country) \n\n# Prepare data for Alluvial plot\nalluvial_data <- tidy_data |>\n    filter(qname %in% c(\"remote_work\", \"ai_select\")) |> \n    count(question, country, label) |>\n    arrange(desc(n)) |>\n    slice_head(n = 20) |> \n    mutate(\n        question = str_remove(question, \"\\\\s*\\\\*\"),                             # Removing the '*' from questions\n        question = case_when(\n            question == \"Do you currently use AI tools in your development process?\" ~ \"AI Tool Usage\",\n            question == \"Which best describes your current work situation?\" ~ \"Work Situation\",\n            TRUE ~ question\n        ),\n        label = case_when(\n            label == \"No, and I don't plan to\" ~ \"No Plan\",\n            label == \"No, but I plan to soon\" ~ \"Plan Soon\",\n            label == \"Hybrid (some remote, some in-person)\" ~ \"Hybrid\",\n            TRUE ~ label\n        ),\n        ) |> \n    filter(!is.na(label))\n\n# Plot data\nplot_data <- alluvial_data |> \n    filter(!is.na(question))\n```\n:::\n\n\n\n#### 5. Visualization Parameters \n\n\n::: {.cell}\n\n```{.r .cell-code}\n### |- plot aesthetics ----\nbkg_col      <- colorspace::lighten('#f7f5e9', 0.05)    \ntitle_col    <- \"gray20\"           \nsubtitle_col <- \"gray20\"     \ncaption_col  <- \"gray30\"   \ntext_col     <- \"gray20\"    \ncol_palette  <- MoMAColors::moma.colors(palette_name = \"Koons\", n = 2, type = 'discrete')\n\n### |-  titles and caption ----\n# icons\ntt <- str_glue(\"#TidyTuesday: { 2024 } Week { 36 } &bull; Source: Stack Overflow Annual Developer Survey 2024<br>\")\nli <- str_glue(\"<span style='font-family:fa6-brands'>&#xf08c;</span>\")\ngh <- str_glue(\"<span style='font-family:fa6-brands'>&#xf09b;</span>\")\nmn <- str_glue(\"<span style='font-family:fa6-brands'>&#xf4f6;</span>\")\n\n# text\ntitle_text    <- str_glue(\"Top 20 Responses to Key Questions in the 2024 Stack Overflow Survey\")\nsubtitle_text <- str_glue(\"Analysis of AI Tool Usage and Work Situation Across Countries\")\ncaption_text  <- str_glue(\"{tt} {li} stevenponce &bull; {mn} @sponce1(graphic.social) {gh} poncest &bull; #rstats #ggplot2\")\n\n### |-  fonts ----\nfont_add(\"fa6-brands\", \"fonts/6.4.2/Font Awesome 6 Brands-Regular-400.otf\")\nfont_add_google(\"Oswald\", regular.wt = 400, family = \"title\")\nfont_add_google(\"Merriweather Sans\", regular.wt = 400, family = \"subtitle\")\nfont_add_google(\"Merriweather Sans\", regular.wt = 400, family = \"text\")\nfont_add_google(\"Noto Sans\", regular.wt = 400, family = \"caption\")\nshowtext_auto(enable = TRUE)\n\n### |-  plot theme ----\ntheme_set(theme_minimal(base_size = 14, base_family = \"text\"))                \n\ntheme_update(\n    plot.title.position   = \"plot\",\n    plot.caption.position = \"plot\",\n    legend.position       = 'top',\n    plot.background       = element_rect(fill = bkg_col, color = bkg_col),\n    panel.background      = element_rect(fill = bkg_col, color = bkg_col),\n    plot.margin           = margin(t = 20, r = 20, b = 20, l = 20),\n    axis.title.x          = element_text(margin = margin(10, 0, 0, 0), size = rel(1.1), color = text_col, family = \"text\", face = \"bold\", hjust = 0.5),\n    axis.title.y          = element_text(margin = margin(0, 10, 0, 0), size = rel(1.1), color = text_col, family = \"text\", face = \"bold\", hjust = 0.5),\n    axis.text             = element_text(size = rel(0.8), color = text_col, family = \"text\"),\n    axis.line.x           = element_line(color = \"gray40\", linewidth = .15),\n    panel.grid.minor.y    = element_blank(),\n    panel.grid.major.y    = element_line(linetype = \"dotted\", linewidth = 0.1, color = 'gray'),\n    panel.grid.minor.x    = element_blank(),\n    panel.grid.major.x    = element_blank(),\n)  \n```\n:::\n\n\n\n#### 6. Plot\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### |-  final plot ----  \np <- ggplot(plot_data, aes(axis1 = question, axis2 = country, axis3 = label, y = n)) +\n    \n    # Geoms\n    geom_alluvium(aes(fill = question), width = 1/12) +\n    geom_stratum(aes(fill = question), width = 1/8, alpha = 0.4) +\n    geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), size = 3.5, hjust = 0, nudge_x = 0.08) +\n    \n    # Labs\n    labs(\n        y = \"Number of Responses\",\n        x = \"\",\n        fill = \"Question: \",\n        title    = title_text,\n        subtitle = subtitle_text,\n        caption  = caption_text\n    ) +\n    \n    # Scales\n    scale_x_discrete(limits = c(\"Question\", \"Country\", \"Response\"), expand = c(0.15, 0.05)) +\n    scale_y_continuous(labels = scales::number_format(scale = 1/1000, suffix = \" K\")) +\n    scale_fill_manual(values = col_palette, na.translate = FALSE) +    \n    coord_cartesian(clip = 'off') +\n    \n    # Theme\n    theme(\n        plot.title = element_text(\n            size = rel(1.3),\n            family = \"title\",\n            color = title_col,\n            face = \"bold\",\n            lineheight = 0.85,\n            margin = margin(t = 5, b = 5)\n        ),\n        plot.subtitle = element_text(\n            size = rel(1),\n            family = \"subtitle\",\n            color = title_col,\n            lineheight = 1,\n            margin = margin(t = 5, b = 15)\n        ),\n        plot.caption = element_markdown(\n            size = rel(.5),\n            family = \"caption\",\n            color = caption_col,\n            lineheight = 0.6,\n            hjust = 0,\n            halign = 0,\n            margin = margin(t = 0, b = 0)\n        )\n    )\n```\n:::\n\n\n#### 7. Save\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### |-  plot image ----  \nggsave(\n  filename = here::here(\"data_visualizations/TidyTuesday/2024/tt_2024_36.png\"),\n  plot = p,\n  width  =  7.77,\n  height =  8,\n  units  = \"in\",\n  dpi    = 320\n)\n\n### |-  plot thumbnail----  \nmagick::image_read(here::here(\"data_visualizations/TidyTuesday/2024/tt_2024_36.png\")) |> \n  magick::image_resize(geometry = \"400\") |> \n  magick::image_write(here::here(\"data_visualizations/TidyTuesday/2024/thumbnails/tt_2024_36.png\"))\n```\n:::\n\n\n\n#### 8. Session Info\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsessionInfo()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nR version 4.4.1 (2024-06-14 ucrt)\nPlatform: x86_64-w64-mingw32/x64\nRunning under: Windows 10 x64 (build 19045)\n\nMatrix products: default\n\n\nlocale:\n[1] LC_COLLATE=English_United States.utf8 \n[2] LC_CTYPE=English_United States.utf8   \n[3] LC_MONETARY=English_United States.utf8\n[4] LC_NUMERIC=C                          \n[5] LC_TIME=English_United States.utf8    \n\ntime zone: America/New_York\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices datasets  utils     methods   base     \n\nloaded via a namespace (and not attached):\n [1] htmlwidgets_1.6.4 compiler_4.4.0    fastmap_1.2.0     cli_3.6.3        \n [5] htmltools_0.5.8.1 tools_4.4.0       rstudioapi_0.16.0 yaml_2.3.10      \n [9] rmarkdown_2.28    knitr_1.48        jsonlite_1.8.8    xfun_0.47        \n[13] digest_0.6.37     rlang_1.1.4       renv_1.0.3        evaluate_0.24.0  \n```\n\n\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}