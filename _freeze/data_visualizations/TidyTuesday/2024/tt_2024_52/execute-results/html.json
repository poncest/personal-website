{
  "hash": "771dfff5624a76b9c0361247fe075a12",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"More Holidays Associated with Lower Air Traffic Volatility in Larger Markets\"\nsubtitle: \"Higher holiday frequency correlates with reduced traffic volatility, especially in larger markets. Lower CV values indicate more stable traffic patterns\"\ndescription: \"Analysis of global holiday patterns and air traffic volatility reveals that larger markets with more frequent holidays tend to experience more stable passenger traffic patterns. Small markets show positive correlation (r=0.48) while larger markets show progressively decreasing negative correlations, suggesting holidays may help stabilize air traffic in developed markets.\"\nauthor: \"Steven Ponce\"\ndate: \"2024-12-09\" \ncategories: [TidyTuesday, Data Visualization, R Programming]  \ntags: [ggplot2, air-travel, holidays, time-series, correlation-analysis, market-analysis, traffic-patterns, data-visualization, tidyverse, aviation]\nimage: \"thumbnails/tt_2024_52.png\"\n\nformat:\n  html:\n    toc: true\n    toc-depth: 5\n    code-link: true\n    code-fold: true\n    code-tools: true\n    code-summary: \"Show code\"\n    self-contained: true\n    theme: \n      light: [flatly, assets/styling/custom_styles.scss]\n      dark: [darkly, assets/styling/custom_styles_dark.scss]\n\neditor_options: \n  chunk_output_type: inline\n\nexecute: \n  freeze: true                                                  \n  cache: true                                                   \n  error: false\n  message: false\n  warning: false\n  eval: true\n\nfilters:\n  - social-share\nshare:\n  permalink: \"https://stevenponce.netlify.app/data_visualizations/TidyTuesday/2024/tt_2024_52.html\"\n  description: \"Analysis shows larger markets with more holidays have more stable air traffic patterns suggesting holidays help regulate passenger flow in developed markets\"\n  twitter: true\n  linkedin: true\n  email: true\n  facebook: false\n  reddit: false\n  stumble: false\n  tumblr: false\n  mastodon: true\n  bsky: true\n---\n\n\n\n![Scatter plot panels show the relationship between average monthly holidays and air traffic volatility (CV) across different market sizes (Small, Medium, Large, Very Large). Larger markets show lower volatility (CV) with more holidays. Data points are sized by annual passenger traffic, with industry median volatility and trend lines highlighted. Source: WorldPop Hub.](tt_2024_52.png){#fig-1}\n\n\n### <mark> __Steps to Create this Graphic__ </mark>\n\n#### 1. Load Packages & Setup \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## 1. LOAD PACKAGES & SETUP ----\nsuppressPackageStartupMessages({\npacman::p_load(\n    tidyverse,      # Easily Install and Load the 'Tidyverse'\n    ggtext,         # Improved Text Rendering Support for 'ggplot2'\n    showtext,       # Using Fonts More Easily in R Graphs\n    janitor,        # Simple Tools for Examining and Cleaning Dirty Data\n    skimr,          # Compact and Flexible Summaries of Data\n    scales,         # Scale Functions for Visualization\n    glue,           # Interpreted String Literals\n    here,           # A Simpler Way to Find Your Files\n    camcorder       # Record Your Plot History\n)\n})\n\nsuppressMessages(source(here::here(\"_setup.R\")))\n\n### |- figure size ----\ncamcorder::gg_record(\n  dir    = here::here(\"temp_plots\"),\n  device = \"png\",\n  width  =  10,\n  height =  10,\n  units  = \"in\",\n  dpi    = 320\n)\n\n### |- resolution ----\nshowtext_opts(dpi = 320, regular.wt = 300, bold.wt = 800)\n```\n:::\n\n\n\n#### 2. Read in the Data \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# tt <- tidytuesdayR::tt_load(2024, week = 50)\n#\n# parfumo_data_raw  <- tt$parfumo_data |> clean_names()\n#\n# tidytuesdayR::readme(tt)\n# rm(tt)\n\n# Option 2: Read directly from GitHub\nglobal_holidays_raw <- readr::read_csv(\n    'https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2024/2024-12-24/global_holidays.csv') |> \n    clean_names()\n\nmonthly_passengers_raw <- readr::read_csv(\n    'https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2024/2024-12-24/monthly_passengers.csv') |> \n    clean_names()\n```\n:::\n\n\n\n#### 3. Examine the Data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(global_holidays_raw)\nskim(global_holidays_raw)\n\nglimpse(monthly_passengers_raw)\nskim(monthly_passengers_raw)\n```\n:::\n\n\n\n#### 4. Tidy Data \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### |- tidy data ----\n\n## Clean and join the datasets ----\nmonthly_passengers_clean <- monthly_passengers_raw |>\n    mutate(\n        date = ymd(paste(year, month, \"01\", sep = \"-\")),\n        total_passengers = coalesce(total, total_os)     # Use total_os when total is NA\n    )\n\nmonthly_holidays_clean <- global_holidays_raw |>\n    mutate(\n        year = year(date),\n        month = month(date)\n    ) |>\n    group_by(iso3, year, month) |>\n    summarise(\n        holiday_count = n(),\n        public_holidays = sum(type == \"Public holiday\"),\n        .groups = \"drop\"\n    )\n\ncombined_data <- monthly_passengers_clean |>\n    left_join(monthly_holidays_clean, by = c(\"iso3\", \"year\", \"month\"))\n\n# Housekeeping\nrm(global_holidays_raw, monthly_passengers_raw, monthly_holidays_clean, monthly_passengers_clean)\n\n\n## data plot ---\nvolatility_df <- combined_data |>\n    # Calculate summary statistics by country\n    group_by(iso3) |>\n    summarise(\n        mean_traffic = mean(total_passengers, na.rm = TRUE),\n        sd_traffic = sd(total_passengers, na.rm = TRUE),\n        cv = sd_traffic / mean_traffic,\n        avg_holidays = mean(holiday_count, na.rm = TRUE),\n        total_observations = n(),\n        traffic_size = sum(total_passengers, na.rm = TRUE),\n        .groups = \"drop\"\n    ) |>\n    # Remove NA, infinite, or outlier values\n    filter(\n        complete.cases(cv, avg_holidays),\n        total_observations >= 12,              # At least one year of data\n        cv >= 0,                               # Ensure no negative coefficients of variation\n        cv <= quantile(cv, 0.95, na.rm = TRUE) # Remove extreme outliers\n    ) |>\n    # Add size categories for visualization\n    mutate(\n        size_category = cut(\n            traffic_size,\n            breaks = quantile(traffic_size, probs = seq(0, 1, 0.25), na.rm = TRUE),\n            labels = c(\"Small\", \"Medium\", \"Large\", \"Very Large\"),\n            include.lowest = TRUE\n        )\n    )\n```\n:::\n\n\n\n\n#### 5. Visualization Parameters \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### |-  plot aesthetics ----\nbkg_col      <- \"#f5f5f2\"\ntitle_col    <- \"gray20\"\nsubtitle_col <- \"gray30\"\ntext_col     <- \"gray30\"\ncaption_col  <- \"gray40\"\ncol_palette  <- c(\"#4B79B7\", \"#F8F9FA\", \"#2C3E50\", \"#34495E\", \"#7F8C8D\")      \n\n### |-  titles and caption ----\n# icons\ntt <- str_glue(\"#TidyTuesday: { 2024 } Week { 52 } &bull; Source: WorldPop Hub<br>\")\nli <- str_glue(\"<span style='font-family:fa6-brands'>&#xf08c;</span>\")\ngh <- str_glue(\"<span style='font-family:fa6-brands'>&#xf09b;</span>\")\nbs <- str_glue(\"<span style='font-family:fa6-brands'>&#xe671; </span>\")\n\n# text\ntitle_text    <- str_glue(\"More Holidays Associated with Lower Air Traffic Volatility\\nin Larger Markets\")\nsubtitle_text <- str_glue(\"Higher holiday frequency correlates with reduced traffic volatility, especially in larger markets<br>\n                          Lower CV values indicate more stable traffic patterns<br><br>\n                          **Coefficient of Variation in Traffic**\")\ncaption_text <- str_glue(\"{tt} {li} stevenponce &bull; {bs} sponce1 &bull; {gh} poncest &bull; #rstats #ggplot2\")\n\n### |-  fonts ----\nfont_add(\"fa6-brands\", here::here(\"fonts/6.6.0/Font Awesome 6 Brands-Regular-400.otf\"))\nfont_add_google(\"Oswald\", regular.wt = 400, family = \"title\")\nfont_add_google(\"Merriweather Sans\", regular.wt = 400, family = \"subtitle\")\nfont_add_google(\"Merriweather Sans\", regular.wt = 400, family = \"text\")\nfont_add_google(\"Noto Sans\", regular.wt = 400, family = \"caption\")\nshowtext_auto(enable = TRUE)\n\n### |-  plot theme ----\ntheme_set(theme_minimal(base_size = 14, base_family = \"text\"))\n\ntheme_update(\n    plot.title.position   = \"plot\",\n    plot.caption.position = \"plot\",\n    plot.background       = element_rect(fill = bkg_col, color = bkg_col),\n    panel.background      = element_rect(fill = bkg_col, color = bkg_col),\n    plot.margin           = margin(t = 10, r = 20, b = 10, l = 20),\n    axis.title.x          = element_text(margin = margin(10, 0, 0, 0), size = rel(1.05),\n                                         color = text_col, family = \"text\", face = \"bold\", hjust = 0.5),\n    axis.title.y          = element_text(margin = margin(0, 10, 0, 0), size = rel(1.05),\n                                         color = text_col, family = \"text\", face = \"bold\", hjust = 0.5),\n    axis.line.x           = element_line(color = \"#252525\", linewidth = .2),\n    axis.title            = element_text(size = rel(0.93), face = \"bold\", color = text_col),\n    axis.text             = element_text(size = rel(0.79), color = text_col),\n    panel.grid.major.x    = element_blank(),\n    panel.grid.major.y    = element_line(color = alpha(col_palette[5], 0.2), linewidth = 0.2),\n    panel.grid.minor      = element_blank(),\n    strip.text            = element_textbox(\n        size              = rel(0.9),\n        face              = 'bold',\n        color             = col_palette[3],\n        fill              = alpha(col_palette[1], 0.1),\n        box.color         = alpha(col_palette[1], 0.5),\n        halign            = 0.5,\n        linetype          = 1,\n        r                 = unit(3, \"pt\"),\n        width             = unit(1, \"npc\"),\n        padding           = margin(5, 10, 5, 10),\n        margin            = margin(b = 10)\n    ),\n    panel.spacing.x       = unit(2, 'lines'),\n    panel.spacing.y       = unit(1, 'lines'),\n    legend.margin         = margin(-25, 5, 0, 0), # align the legend with the y-axis label\n    legend.justification.top = \"right\",\n    legend.position       = \"top\",\n    legend.title          = element_text(size = rel(0.7)),\n    legend.text           = element_text(size = rel(0.6)),\n    \n)\n```\n:::\n\n\n\n\n#### 6. Plot \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### |-  Plot ----\np <- ggplot(volatility_df, aes(x = avg_holidays, y = cv)) +\n    # Add reference line for overall median\n    geom_hline(\n        yintercept = median(volatility_df$cv),\n        linetype = \"dashed\",\n        color = \"gray50\",\n        alpha = 0.3\n    ) +\n    # Add points\n    geom_point(\n        aes(\n            size = traffic_size,\n            alpha = cv  # Vary transparency by CV\n        ),\n        color = col_palette[1]\n    ) +\n    # Add trend line\n    geom_smooth(\n        color = col_palette[3],\n        method = \"loess\",\n        linewidth = 1,\n        se = TRUE\n    ) +\n    # Add labels for extreme points (cv)\n    ggrepel::geom_text_repel(\n        data = volatility_df |> \n            group_by(size_category) |>  \n            filter(cv == max(cv) | cv == min(cv)),\n        aes(label = iso3),\n        size = 3,\n        color = col_palette[4],\n        max.overlaps = 2,\n        box.padding = 0.5,\n        segment.color = col_palette[5],\n        segment.alpha = 0.5\n    ) +\n    # Add single annotation for the median line\n    geom_text(\n        data = volatility_df |> filter(size_category == \"Small\"),\n        x = 9,  \n        y = median(volatility_df$cv) + 0.02, \n        label = \"Industry median volatility\",\n        size = 3,\n        color = \"gray50\",\n        hjust = 1,\n        vjust = -0.5\n    ) +\n    # Add correlation annotation in each facet\n    geom_text(\n        data = volatility_df |>  \n            group_by(size_category) |>\n            summarise(\n                cor = cor(avg_holidays, cv),\n                .groups = \"drop\"\n            ),\n        aes(x = 8, y = 0.65, \n            label = sprintf(\"r = %.2f\", cor)),\n        size = 3,\n        hjust = 1\n    ) +\n    \n    # Scales\n    scale_y_continuous(\n        breaks = seq(0, 1, by = .25),\n        limits = c(-.25, .75),\n        labels = percent_format()\n    ) +\n    scale_x_continuous(\n        breaks = seq(2, 8, by = 2),\n        limits = c(1, 9),\n        expand = expansion(mult = c(0.02, 0.08))          \n    ) +\n    scale_size_continuous(\n        range = c(2, 8),\n        labels = scales::label_number(scale = 1e-6, suffix = \"M\")\n    ) +\n    scale_alpha_continuous(\n        range = c(0.4, 0.8),\n        guide = \"none\"\n    ) +\n    # Labs\n    labs(\n        x = \"Average Number of Holidays per Month\",\n        y = NULL,\n        size  = \"Annual Passenger Traffic (M)\",\n        color = \"Market Size\",\n        title    = title_text,\n        subtitle = subtitle_text,\n        caption  = caption_text\n    ) +\n    # Facets\n    facet_wrap(\n        ~size_category,\n        labeller = as_labeller(function(x) paste(x, \"Market\")),\n        scales = \"fixed\"\n    ) +\n    # Theme\n    theme(\n        plot.title = element_text(\n            size   = rel(2),\n            family = \"title\",\n            face   = \"bold\",\n            color  = title_col,\n            lineheight = 1.1,\n            margin = margin(t = 5, b = 5)\n        ),\n        plot.subtitle = element_markdown(\n            size   = rel(1),\n            family = \"subtitle\",\n            color  = subtitle_col,\n            lineheight = 1.1,\n            margin = margin(t = 5, b = 5)\n        ),\n        plot.caption = element_markdown(\n            family = \"caption\",\n            size   = rel(0.65),\n            color  = caption_col,\n            hjust  = 0.5,\n            margin = margin(t = 10)\n        )\n    )   \n```\n:::\n\n\n\n\n\n#### 7. Save\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### |-  plot image ----  \n\nsource(here::here(\"R/image_utils.R\"))\nsave_plot(p, type = \"tidytuesday\", year = 2024, week = 52, width = 10, height = 10)\n```\n:::\n\n\n\n\n\n#### 8. Session Info\n\n::: {.callout-tip collapse=\"true\"}\n##### Expand for Session Info\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\nR version 4.4.1 (2024-06-14 ucrt)\nPlatform: x86_64-w64-mingw32/x64\nRunning under: Windows 11 x64 (build 22631)\n\nMatrix products: default\n\n\nlocale:\n[1] LC_COLLATE=English_United States.utf8 \n[2] LC_CTYPE=English_United States.utf8   \n[3] LC_MONETARY=English_United States.utf8\n[4] LC_NUMERIC=C                          \n[5] LC_TIME=English_United States.utf8    \n\ntime zone: America/New_York\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices datasets  utils     methods   base     \n\nother attached packages:\n [1] gghighlight_0.4.1 marquee_0.1.0     patchwork_1.3.0   camcorder_0.1.0  \n [5] here_1.0.1        glue_1.8.0        scales_1.3.0      skimr_2.1.5      \n [9] janitor_2.2.0     showtext_0.9-7    showtextdb_3.0    sysfonts_0.8.9   \n[13] ggtext_0.1.2      lubridate_1.9.3   forcats_1.0.0     stringr_1.5.1    \n[17] dplyr_1.1.4       purrr_1.0.2       readr_2.1.5       tidyr_1.3.1      \n[21] tibble_3.2.1      ggplot2_3.5.1     tidyverse_2.0.0  \n\nloaded via a namespace (and not attached):\n [1] gtable_0.3.6       xfun_0.49          htmlwidgets_1.6.4  tzdb_0.4.0        \n [5] yulab.utils_0.1.8  vctrs_0.6.5        tools_4.4.0        generics_0.1.3    \n [9] curl_6.0.0         parallel_4.4.0     gifski_1.32.0-1    fansi_1.0.6       \n[13] pacman_0.5.1       pkgconfig_2.0.3    ggplotify_0.1.2    lifecycle_1.0.4   \n[17] compiler_4.4.0     farver_2.1.2       textshaping_0.4.0  munsell_0.5.1     \n[21] repr_1.1.7         codetools_0.2-20   snakecase_0.11.1   htmltools_0.5.8.1 \n[25] yaml_2.3.10        crayon_1.5.3       pillar_1.9.0       magick_2.8.5      \n[29] commonmark_1.9.2   tidyselect_1.2.1   digest_0.6.37      stringi_1.8.4     \n[33] rsvg_2.6.1         rprojroot_2.0.4    fastmap_1.2.0      grid_4.4.0        \n[37] colorspace_2.1-1   cli_3.6.3          magrittr_2.0.3     base64enc_0.1-3   \n[41] utf8_1.2.4         withr_3.0.2        bit64_4.5.2        timechange_0.3.0  \n[45] rmarkdown_2.29     bit_4.5.0          hms_1.1.3          evaluate_1.0.1    \n[49] knitr_1.49         markdown_1.13      gridGraphics_0.5-1 rlang_1.1.4       \n[53] gridtext_0.1.5     Rcpp_1.0.13-1      xml2_1.3.6         renv_1.0.3        \n[57] vroom_1.6.5        svglite_2.1.3      rstudioapi_0.17.1  jsonlite_1.8.9    \n[61] R6_2.5.1           fs_1.6.5           systemfonts_1.1.0 \n```\n\n\n:::\n:::\n\n\n:::\n\n\n\n#### 9. GitHub Repository\n\n::: {.callout-tip collapse=\"true\"}\n##### Expand for GitHub Repo\n \nThe complete code for this analysis is available in [`tt_2024_52.qmd`](https://github.com/poncest/personal-website/blob/master/data_visualizations/TidyTuesday/2024/tt_2024_52.qmd).\n\nFor the full repository, [click here](https://github.com/poncest/personal-website/).\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}