{
  "hash": "b6623c2d4740c81ee5e4625ddd9556f1",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"The Arcane Hierarchy: D&D Spellcasting Classes Compared\"\nsubtitle: \"While Wizards master the most spells overall, Clerics maintain the largest collection of unique divine magic, highlighting distinct magical specializations across classes.\"\ndescription: \"An analysis of D&D spellcasting classes examining spell distribution and progression patterns, revealing the unique balance between versatility and specialization among magical practitioners.\"\nauthor: \"Steven Ponce\"\ndate: \"2024-12-08\" \ncategories: [TidyTuesday, Data Visualization, R Programming]  \ntags: [D&D, RPG Games, ggplot2, patchwork, data-viz, spells, fantasy-gaming, class-analysis, tidyverse, spell-progression]\nimage: \"thumbnails/tt_2024_51_TEST_MODULES.png\"\n\nformat:\n  html:\n    toc: true\n    toc-depth: 5\n    code-link: true\n    code-fold: true\n    code-tools: true\n    code-summary: \"Show code\"\n    self-contained: true\n    theme: \n      light: [flatly, assets/styling/custom_styles.scss]\n      dark: [darkly, assets/styling/custom_styles_dark.scss]\n\neditor_options: \n  chunk_output_type: inline\n\nexecute: \n  freeze: true                                                  \n  cache: true                                                   \n  error: false\n  message: false\n  warning: false\n  eval: true\n\nfilters:\n  - social-share\nshare:\n  permalink: \"https://stevenponce.netlify.app/data_visualizations/TidyTuesday/2024/tt_2024_51_TEST_MODULES.html\"\n  description: \"DnD Magic Analysis: Comparing Wizards versatility vs Clerics unique spells. A data story on spellcasting class specializations. #DnD #DataViz #rstats\"\n  twitter: true\n  linkedin: true\n  email: true\n  facebook: false\n  reddit: false\n  stumble: false\n  tumblr: false\n  mastodon: true\n  bsky: true\n---\n\n\n\n![Dual-panel visualization comparing Dungeons & Dragons (D&D) Free Rules 2024 spellcasting classes. The left panel features a horizontal bar chart highlighting the number of class-exclusive spells, with Clerics having the most (21 spells), followed by Wizards (16 spells), and other classes having significantly fewer (1-4 spells). The right panel contains faceted line charts showing spell progression patterns across levels 0â€“9 for each class, arranged in descending order of total spells. Wizards peak at around 30 spells at level 2, with other classes showing distinct progression patterns that reflect their magical capabilities.](tt_2024_51_TEST_MODULES.png){#fig-1}\n\n\n### <mark> __Steps to Create this Graphic__ </mark>\n\n#### 1. Load Packages & Setup \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## 1. LOAD PACKAGES & SETUP ----\nsuppressPackageStartupMessages({\n    pacman::p_load(\n    tidyverse,      # Easily Install and Load the 'Tidyverse'\n    ggtext,         # Improved Text Rendering Support for 'ggplot2'\n    showtext,       # Using Fonts More Easily in R Graphs\n    janitor,        # Simple Tools for Examining and Cleaning Dirty Data\n    skimr,          # Compact and Flexible Summaries of Data\n    scales,         # Scale Functions for Visualization\n    glue,           # Interpreted String Literals\n    here,           # A Simpler Way to Find Your Files\n    camcorder,      # Record Your Plot History \n    patchwork,      # The Composer of Plots\n    marquee,        # Markdown Parser and Renderer for R Graphics \n    gghighlight     # Highlight Lines and Points in 'ggplot2'\n    )   \n})\n\n# Source utility functions\nsuppressMessages(source(here::here(\"R/utils/fonts.R\")))\nsource(here::here(\"R/utils/social_icons.R\"))\nsource(here::here(\"R/utils/image_utils.R\"))\nsource(here::here(\"R/themes/base_theme.R\"))\n```\n:::\n\n\n\n#### 2. Read in the Data \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# tt <- tidytuesdayR::tt_load(2024, week = 50)\n#\n# parfumo_data_raw  <- tt$parfumo_data |> clean_names()\n#\n# tidytuesdayR::readme(tt)\n# rm(tt)\n\n# Option 2: Read directly from GitHub\nspells_raw <- spells <- readr::read_csv(\n  'https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2024/2024-12-17/spells.csv') |> \n  clean_names()\n```\n:::\n\n\n\n#### 3. Examine the Data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(spells_raw)\nskim(spells_raw)\n```\n:::\n\n\n\n#### 4. Tidy Data \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### |- tidy data ----\n\n## Plot 1: Exclusive Spells Data ----\nexclusive_df <- spells_raw |>\n    # Calculate class availability\n    mutate(\n        available_to = rowSums(select(spells_raw, bard:wizard))\n    ) |>\n    # Get exclusive spells\n    filter(available_to == 1) |>  \n    select(bard:wizard) |>\n    # Calculate totals\n    summarise(across(everything(), sum)) |>\n    # Reshape to long format\n    pivot_longer(\n        everything(),\n        names_to = \"class\",\n        values_to = \"exclusive_spells\"\n    ) |>\n    # Format and calculate percentages\n    mutate(\n        class = str_to_title(class),\n        total_spells = sum(exclusive_spells),\n        pct = exclusive_spells / total_spells,\n        label = scales::percent(pct, accuracy = 0.1),\n        class = fct_reorder(class, exclusive_spells, .desc = TRUE)\n    )\n\n## Plot 2: Progression Data ----\nprogression_df <- spells_raw |>\n    # Initial selection and reshape\n    select(level, bard:wizard) |>\n    pivot_longer(\n        -level,\n        names_to = \"class\",\n        values_to = \"has_spell\"\n    ) |>\n    # Process available spells\n    filter(has_spell) |>\n    # Count spells per class and level\n    group_by(class, level) |>\n    summarise(\n        count = n(),\n        .groups = \"drop\"\n    ) |>\n    # Calculate totals and format\n    group_by(class) |>\n    mutate(\n        total_spells = sum(count)\n    ) |>\n    ungroup() |>\n    # Format and order class factor\n    mutate(\n        class = str_to_title(class),\n        # Order by total spells descending\n        class = fct_reorder(class, total_spells, .desc = TRUE)\n    )\n```\n:::\n\n\n\n\n#### 5. Visualization Parameters \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### |-  plot aesthetics ----\n# Get base colors with custom palette\ncolors <- get_theme_colors(palette = \"#AB4459\") \n\n\n### |-  titles and caption ----\ntitle_text    <- str_glue(\"The Arcane Hierarchy: D&D Spellcasting Classes Compared\")\nsubtitle_text <- \"While **_Wizards_** master the most spells overall, **_Clerics_** maintain the largest collection of unique divine magic, highlighting distinct magical specializations across classes.\"\n\n# Create caption\ncaption_text <- create_social_caption(\n    tt_year = 2024,\n    tt_week = 51,\n    source_text = \"D&D Free Rules (2024), Spell Descriptions\"\n)\n\n### |-  fonts ----\nsetup_fonts()\nfonts <- get_font_families()\n\n### |-  plot theme ----\n\n# Start with base theme\nbase_theme <- create_base_theme(colors)\n\n# Add weekly-specific theme elements\nweekly_theme <- extend_weekly_theme(\n    base_theme,\n    theme(\n        # Weekly-specific modifications\n        panel.grid.major.x = element_blank(),\n        panel.grid.major.y = element_line(color = \"gray90\", linewidth = 0.2),\n        panel.grid.minor   = element_blank(),\n        strip.text         = element_textbox(size = rel(0.9),\n                                             face = 'bold',\n                                             color = colors$text,\n                                             hjust = 0.5,\n                                             halign = 0.5,\n                                             r = unit(3, \"pt\"),\n                                             width = unit(6, \"npc\"),\n                                             padding = margin(2, 0, 2, 0),\n                                             margin = margin(3, 3, 3, 3),\n                                             fill = \"transparent\"\n        ),\n        panel.spacing = unit(1.5, 'lines')\n    )\n)\n\n# Set theme\ntheme_set(weekly_theme)\n```\n:::\n\n\n\n\n#### 6. Plot \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### |-  Plot 1 ----\nexclusive_plot <- ggplot(exclusive_df,\n                         aes(y = fct_reorder(class, exclusive_spells), x = exclusive_spells)) +\n    # Geoms\n    geom_bar(stat = \"identity\", \n             fill = colors$palette,\n             alpha = 0.8,\n             width = 0.75\n    ) +\n    geom_text(\n        aes(label = sprintf(\"%d spells\", exclusive_spells),),\n        size = 3.5,\n        color = if_else(exclusive_df$exclusive_spells < 15, colors$text, \"#fafafa\"),\n        hjust = if_else(exclusive_df$exclusive_spells < 15, -0.2, 1.2),\n    ) +\n    \n    # Scales\n    scale_x_continuous(\n        expand = expansion(mult = c(0, 0.05)),\n        breaks = seq(0, 25, by = 5)\n    ) +\n    scale_y_discrete() +\n    coord_cartesian(clip = 'off') +\n    \n    # Labs\n    labs(\n        title = \"Class-Exclusive Spells in D&D\",\n        subtitle = \"Distribution of spells unique to each character class\",\n        x = \"Number of Exclusive Spells\",\n        y = NULL\n    ) +\n    \n    # Theme\n    theme(\n        plot.title = element_text(\n            family = fonts$title, \n            size   = rel(1.4), \n            face   = \"bold\",\n            color  = colors$title,\n            margin = margin(b = 10)\n        ),\n        plot.subtitle = element_text(\n            family = fonts$text,\n            size   = rel(0.9),\n            color  = colors$subtitle,\n            margin = margin(b = 5)\n        ),\n        panel.grid.minor = element_blank(),\n        panel.grid.major.y = element_blank(),\n    ) \n\n### |-  Plot 2 ----\nprogression_plot <- ggplot(progression_df,\n                           aes(x = level, y = count, group = class)) +\n    # Geoms\n    geom_line(size = 0.3, alpha = 0.2) +\n    geom_point(size = 1, alpha = 0.2) +\n    gghighlight(\n        use_direct_label = FALSE,\n        unhighlighted_params = list(\n            size = 0.3,\n            alpha = 0.2,\n            color = 'gray20'\n        )\n    ) +\n    geom_line(color = colors$palette, linewidth = 1.2) +\n    geom_point(color = colors$palette, size = 2.5) +\n    \n    # Scales\n    scale_x_continuous(breaks = seq(0, 9, by = 3)) +\n    scale_y_continuous(breaks = seq(0, 35, by = 10)) +\n    coord_cartesian(clip = 'off') +\n    \n    # Labs\n    labs(\n        title = \"Spell Progression Patterns by Character Class\",\n        subtitle = \"Each class shows distinct patterns in spell availability across levels\",\n        x = \"Spell Level\",\n        y = \"Number of Available Spells\"\n    ) +\n    \n    # Facet\n    facet_wrap(~class, ncol = 4) +\n    \n    # Theme\n    theme(\n        plot.title = element_text(\n            family = fonts$title, \n            size   = rel(1.4), \n            face   = \"bold\",\n            color  = colors$title,\n            margin = margin(b = 10)\n        ),\n        plot.subtitle = element_text(\n            family = fonts$text,\n            size   = rel(0.9),\n            color  = colors$subtitle,\n            margin = margin(b = 15)\n        )\n    ) \n\n### |-  combined plots ----\ncombined_plot <- (\n    exclusive_plot + plot_spacer() + progression_plot + \n        plot_layout(widths = c(0.6, 0.02, 1.2))  \n)\n\ncombined_plot <- combined_plot +\n    plot_annotation(\n        title    = title_text,\n        subtitle = subtitle_text,\n        caption  = caption_text,\n        theme = theme(\n            plot.title = element_text(\n                family = fonts$title, \n                size   = rel(2.3), \n                face   = \"bold\",\n                color  = colors$title,\n                margin = margin(b = 10)\n            ),\n            plot.subtitle = element_marquee(\n                family = fonts$text,\n                lineheight = 1.1,\n                width  = 1,\n                size   = rel(1.1),\n                color  = colors$subtitle,\n                margin = margin(b = 5)\n            ),\n            plot.caption = element_markdown(\n                family = fonts$caption,\n                size   = rel(0.65),\n                color  = colors$caption,\n                hjust  = 0.5,\n                margin = margin(t = 5)\n            ),\n            plot.margin = margin(10, 10, 10, 10),\n            plot.background = element_rect(fill = colors$background, color = colors$background),\n            panel.background = element_rect(fill = colors$background, color = colors$background)\n        )\n    ) \n```\n:::\n\n\n\n\n\n#### 7. Save\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### |-  plot image ----  \n\nsave_plot_patchwork(combined_plot, type = \"tidytuesday\", year = 2024, week = 51, width = 12, height = 8)\n```\n:::\n\n\n\n\n\n#### 8. Session Info\n\n::: {.callout-tip collapse=\"true\"}\n##### Expand for Session Info\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\nR version 4.4.1 (2024-06-14 ucrt)\nPlatform: x86_64-w64-mingw32/x64\nRunning under: Windows 11 x64 (build 22631)\n\nMatrix products: default\n\n\nlocale:\n[1] LC_COLLATE=English_United States.utf8 \n[2] LC_CTYPE=English_United States.utf8   \n[3] LC_MONETARY=English_United States.utf8\n[4] LC_NUMERIC=C                          \n[5] LC_TIME=English_United States.utf8    \n\ntime zone: America/New_York\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices datasets  utils     methods   base     \n\nother attached packages:\n [1] gghighlight_0.4.1 marquee_0.1.0     patchwork_1.3.0   camcorder_0.1.0  \n [5] here_1.0.1        glue_1.8.0        scales_1.3.0      skimr_2.1.5      \n [9] janitor_2.2.0     showtext_0.9-7    showtextdb_3.0    sysfonts_0.8.9   \n[13] ggtext_0.1.2      lubridate_1.9.3   forcats_1.0.0     stringr_1.5.1    \n[17] dplyr_1.1.4       purrr_1.0.2       readr_2.1.5       tidyr_1.3.1      \n[21] tibble_3.2.1      ggplot2_3.5.1     tidyverse_2.0.0  \n\nloaded via a namespace (and not attached):\n [1] gtable_0.3.6       xfun_0.49          htmlwidgets_1.6.4  tzdb_0.4.0        \n [5] yulab.utils_0.1.8  vctrs_0.6.5        tools_4.4.0        generics_0.1.3    \n [9] curl_6.0.0         parallel_4.4.0     gifski_1.32.0-1    fansi_1.0.6       \n[13] pacman_0.5.1       pkgconfig_2.0.3    ggplotify_0.1.2    lifecycle_1.0.4   \n[17] compiler_4.4.0     farver_2.1.2       textshaping_0.4.0  munsell_0.5.1     \n[21] repr_1.1.7         codetools_0.2-20   snakecase_0.11.1   htmltools_0.5.8.1 \n[25] yaml_2.3.10        crayon_1.5.3       pillar_1.9.0       magick_2.8.5      \n[29] commonmark_1.9.2   tidyselect_1.2.1   digest_0.6.37      stringi_1.8.4     \n[33] rsvg_2.6.1         rprojroot_2.0.4    fastmap_1.2.0      grid_4.4.0        \n[37] colorspace_2.1-1   cli_3.6.3          magrittr_2.0.3     base64enc_0.1-3   \n[41] utf8_1.2.4         withr_3.0.2        bit64_4.5.2        timechange_0.3.0  \n[45] rmarkdown_2.29     bit_4.5.0          hms_1.1.3          evaluate_1.0.1    \n[49] knitr_1.49         markdown_1.13      gridGraphics_0.5-1 rlang_1.1.4       \n[53] gridtext_0.1.5     Rcpp_1.0.13-1      xml2_1.3.6         renv_1.0.3        \n[57] vroom_1.6.5        svglite_2.1.3      rstudioapi_0.17.1  jsonlite_1.8.9    \n[61] R6_2.5.1           fs_1.6.5           systemfonts_1.1.0 \n```\n\n\n:::\n:::\n\n\n:::\n\n\n\n#### 9. GitHub Repository\n\n::: {.callout-tip collapse=\"true\"}\n##### Expand for GitHub Repo\n \nThe complete code for this analysis is available in [`tt_2024_51_TEST_MODULES.qmd`](https://github.com/poncest/personal-website/blob/master/data_visualizations/TidyTuesday/2024/tt_2024_51_TEST_MODULES.qmd).\n\nFor the full repository, [click here](https://github.com/poncest/personal-website/).\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}