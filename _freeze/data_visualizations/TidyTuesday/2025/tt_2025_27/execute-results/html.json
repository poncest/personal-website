{
  "hash": "ab43e594cfb4a99ef1ba5b4b2fff6ada",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Gender Differences in Color Ranking Accuracy\"\nsubtitle: \"Analysis of ~64K users from the xkcd Color Survey.\"\ndescription: \"An analysis of gender differences in color ranking accuracy using data from the famous xkcd Color Survey. This study examines 64,775 users who ranked colors on a 1-5 scale, revealing statistically significant but practically small differences between groups. \"\nauthor: \"Steven Ponce\"\ndate: \"2025-07-08\" \ncategories: [\"TidyTuesday\", \"Data Visualization\", \"R Programming\", \"2025\"]\ntags: [\n  \"data-visualization\", \n  \"gender-differences\", \n  \"color-perception\", \n  \"statistical-analysis\", \n  \"effect-size\", \n  \"xkcd\", \n  \"cohen-d\", \n  \"confidence-intervals\", \n  \"survey-analysis\", \n  \"colorblindness\", \n  \"psychology\", \n  \"perception\", \n  \"ggplot2\", \n  \"patchwork\"\n]\nimage: \"thumbnails/tt_2025_27.png\"\nformat:\n  html:\n    toc: true\n    toc-depth: 5\n    code-link: true\n    code-fold: true\n    code-tools: true\n    code-summary: \"Show code\"\n    self-contained: true\n    theme: \n      light: [flatly, assets/styling/custom_styles.scss]\n      dark: [darkly, assets/styling/custom_styles_dark.scss]\neditor_options: \n  chunk_output_type: inline\nexecute: \n  freeze: true                                    \n  cache: true                                       \n  error: false\n  message: false\n  warning: false\n  eval: true\n---\n\n![Two-panel chart showing gender differences in color ranking accuracy from 64,775 xkcd Color Survey users. Top panel shows distribution curves where males have slightly higher accuracy scores than females. Bottom panel displays mean accuracy with confidence intervals: Males with normal vision score highest (0.414), followed by females with normal vision (0.409), females who are colorblind (0.393), and males who are colorblind (0.39). A dashed vertical line shows the overall mean (0.412). The gender difference is small (1.3%) but statistically significant.](tt_2025_27.png){#fig-1}\n\n### <mark> **Steps to Create this Graphic** </mark>\n\n#### 1. Load Packages & Setup\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: load\n#| warning: false\n#| message: false\n#| results: \"hide\"\n\n## 1. LOAD PACKAGES & SETUP ----\nsuppressPackageStartupMessages({\nif (!require(\"pacman\")) install.packages(\"pacman\")\npacman::p_load(\n  tidyverse,  # Easily Install and Load the 'Tidyverse'\n    ggtext,     # Improved Text Rendering Support for 'ggplot2'\n    showtext,   # Using Fonts More Easily in R Graphs\n    janitor,    # Simple Tools for Examining and Cleaning Dirty Data\n    scales,     # Scale Functions for Visualization\n    glue,       # Interpreted String Literals\n    patchwork,  # The Composer of Plots\n    effsize     # Efficient Effect Size Computation \n  )})\n\n### |- figure size ----\ncamcorder::gg_record(\n  dir    = here::here(\"temp_plots\"),\n  device = \"png\",\n   width  = 10,\n  height =  10,\n  units  = \"in\",\n  dpi    = 320\n)\n\n# Source utility functions\nsuppressMessages(source(here::here(\"R/utils/fonts.R\")))\nsource(here::here(\"R/utils/social_icons.R\"))\nsource(here::here(\"R/utils/image_utils.R\"))\nsource(here::here(\"R/themes/base_theme.R\"))\n```\n````\n:::\n\n\n#### 2. Read in the Data\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: read\n#| include: true\n#| eval: true\n#| warning: false\n\ntt <- tidytuesdayR::tt_load(2025, week = 27)\n\nanswers <- tt$answers |> clean_names()\nusers <- tt$users |> clean_names()\n\ntidytuesdayR::readme(tt)\nrm(tt)\n```\n````\n:::\n\n\n#### 3. Examine the Data\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: examine\n#| include: true\n#| eval: true\n#| results: 'hide'\n#| warning: false\n\nglimpse(answers)\nglimpse(users)\n```\n````\n:::\n\n\n#### 4. Tidy Data\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: tidy\n#| warning: false\n\n# Data preparation\nuser_accuracy <- answers |>\n  left_join(users, by = \"user_id\") |>\n  filter(!is.na(y_chromosome), !is.na(colorblind)) |>\n  group_by(user_id, y_chromosome, colorblind) |>\n  summarise(\n    avg_user_rank = mean(rank, na.rm = TRUE),\n    accuracy_score = 1 / avg_user_rank,\n    total_answers = n(),\n    .groups = \"drop\"\n  ) |>\n  filter(total_answers >= 5)\n\n# Plot 1 data\naccuracy_by_groups <- user_accuracy |>\n  mutate(\n    chromosome_label = ifelse(y_chromosome == 1, \"Males\", \"Females\"),\n    colorblind_label = ifelse(colorblind == 1, \"Colorblind\", \"Normal Vision\"),\n    user_group = case_when(\n      y_chromosome == 1 & colorblind == 0 ~ \"Males\\nNormal Vision\",\n      y_chromosome == 1 & colorblind == 1 ~ \"Males\\nColorblind\",\n      y_chromosome == 0 & colorblind == 0 ~ \"Females\\nNormal Vision\",\n      y_chromosome == 0 & colorblind == 1 ~ \"Females\\nColorblind\"\n    )\n  ) |>\n  filter(!is.na(user_group))\n\n# Plot 2 data\ngroup_stats <- accuracy_by_groups |>\n  group_by(user_group) |>\n  summarise(\n    n = n(),\n    mean_acc = mean(accuracy_score),\n    median_acc = median(accuracy_score),\n    se_acc = sd(accuracy_score) / sqrt(n()),\n    ci_lower = mean_acc - 1.96 * se_acc,\n    ci_upper = mean_acc + 1.96 * se_acc,\n    .groups = \"drop\"\n  ) |>\n  mutate(\n    gender = ifelse(str_detect(user_group, \"Males\"), \"Males\", \"Females\"),\n    vision = ifelse(str_detect(user_group, \"Colorblind\"), \"Colorblind\", \"Normal Vision\")\n  )\n\n# key statistics\n\n# overall mean for reference line\noverall_mean <- mean(accuracy_by_groups$accuracy_score)\n\n# t-test\ngender_ttest <- t.test(accuracy_score ~ chromosome_label, data = accuracy_by_groups)\n\n# Percentage difference\nsummary_stats <- accuracy_by_groups %>%\n  group_by(chromosome_label, colorblind_label) %>%\n  summarise(\n    n = n(),\n    mean_acc = mean(accuracy_score),\n    .groups = \"drop\"\n  )\n\nmale_mean <- summary_stats$mean_acc[summary_stats$chromosome_label == \"Males\" &\n  summary_stats$colorblind_label == \"Normal Vision\"]\nfemale_mean <- summary_stats$mean_acc[summary_stats$chromosome_label == \"Females\" &\n  summary_stats$colorblind_label == \"Normal Vision\"]\n\npercentage_diff <- ((male_mean - female_mean) / female_mean) * 100\n\n# Effect size\ngender_cohens_d <- cohen.d(\n  accuracy_by_groups$accuracy_score,\n  accuracy_by_groups$chromosome_label\n)\ncohens_d_value <- abs(gender_cohens_d$estimate)\n\n# Descriptive variables\ngender_sig <- ifelse(gender_ttest$p.value < 0.001, \"p < 0.001\",\n                     ifelse(gender_ttest$p.value < 0.01, \"p < 0.01\",\n                            ifelse(gender_ttest$p.value < 0.05, \"p < 0.05\", \n                                   paste(\"p =\", round(gender_ttest$p.value, 3)))))\n\ngender_effect_desc <- ifelse(cohens_d_value < 0.2, \"very small\",\n                             ifelse(cohens_d_value < 0.5, \"small\", \n                                    ifelse(cohens_d_value < 0.8, \"medium\", \"large\")))\n```\n````\n:::\n\n\n#### 5. Visualization Parameters\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: params\n#| include: true\n#| warning: false\n\n### |-  plot aesthetics ----\ncolors <- get_theme_colors(\n  palette = c(\"#DDA853\", \"#27548A\")\n)\n\n### |- titles and caption ----\ntitle_text <- str_glue(\"Gender Differences in Color Ranking Accuracy\")\n\nsubtitle_text <- str_glue(\n    \"Analysis of \", scales::comma(nrow(accuracy_by_groups)), \" users from the xkcd Color Survey.<br><br>\",        \n    \"**Key Findings:**<br>\", \n    \"Males show \", round(percentage_diff, 1), \"% higher accuracy. \",\n    \"Gender effect size is \", gender_effect_desc, \" (\", gender_sig, \"). \",\n    \"Colorblindness has minimal impact.\"\n    )\n\ncaption_text <- create_social_caption(\n  tt_year = 2025,\n  tt_week = 27,\n  source_text =  \"xkcd Color Survey SQLite database\"\n)\n\n### |-  fonts ----\nsetup_fonts()\nfonts <- get_font_families()\n\n### |-  plot theme ----\n\n# Start with base theme\nbase_theme <- create_base_theme(colors)\n\n# Add weekly-specific theme elements\nweekly_theme <- extend_weekly_theme(\n  base_theme,\n  theme(\n    # Axis elements\n    axis.text = element_text(color = colors$text, size = rel(0.7)),\n    axis.title.x = element_text(color = colors$text, face = \"bold\", size = rel(0.8), margin = margin(t = 15)),\n    axis.title.y = element_text(color = colors$text, face = \"bold\", size = rel(0.8), margin = margin(r = 10)),\n\n    # Grid elements\n    panel.grid.major.y = element_line(color = \"gray50\", linewidth = 0.05),\n    panel.grid.minor = element_blank(),\n    panel.grid.major.x = element_blank(),\n\n    # Legend elements\n    legend.position = \"plot\",\n    legend.title = element_text(family = fonts$tsubtitle, color = colors$text, size = rel(0.8), face = \"bold\"),\n    legend.text = element_text(family = fonts$tsubtitle, color = colors$text, size = rel(0.7)),\n\n    # Plot margin\n    plot.margin = margin(t = 15, r = 15, b = 15, l = 15),\n  )\n)\n\n# Set theme\ntheme_set(weekly_theme)\n```\n````\n:::\n\n\n#### 6. Plot\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: plot\n#| warning: false\n\n# Plot 1: Distribution plot\np1 <- ggplot(accuracy_by_groups, aes(x = accuracy_score, fill = chromosome_label)) +\n  # Geoms\n  geom_density(alpha = 0.65, size = 0.8) +\n  # Annotations\n  geom_richtext(\n    data = tibble(\n      accuracy_score = c(0.55, 0.6),\n      y = c(6, 6),\n      chromosome_label = c(\"Females\", \"Males\"),\n      label = c(\"More variable\", \"Slightly more accurate\")\n    ), aes(x = accuracy_score, y = y, label = label),\n    inherit.aes = FALSE,\n    size = 3.5, fontface = \"italic\",\n    color = colors$palette\n  ) +\n  # Scales\n  scale_fill_manual(\n    values = colors$palette,\n    name = \"Group\"\n  ) +\n  # Labs\n  labs(\n    title = \"Distribution of Color Accuracy\",\n    subtitle = \"Males show slight rightward shift (higher accuracy)\",\n    x = \"Accuracy Score\",\n    y = \"Density\"\n  ) +\n  # Facets\n  facet_wrap(~chromosome_label) +\n  # Theme\n  theme(\n    legend.position = \"none\",\n    panel.grid.minor = element_blank(),\n    strip.text = element_text(face = \"bold\", size = 12),\n    plot.title = element_text(\n      size = rel(1.5),\n      family = fonts$title,\n      face = \"bold\",\n      color = colors$title,\n      hjust = 0.5,\n      lineheight = 1.1,\n      margin = margin(t = 5, b = 5)\n    ),\n    plot.subtitle = element_text(\n      size = rel(0.9),\n      family = fonts$subtitle,\n      color = colors$subtitle,\n      hjust = 0.5,\n      lineheight = 1.2,\n      margin = margin(t = 5, b = 20)\n    ),\n  )\n\n# Plot 2: dot-range plot\np2 <- ggplot(group_stats, aes(x = mean_acc, y = reorder(user_group, mean_acc))) +\n  # Geoms\n  geom_segment(\n    aes(\n      x = ci_lower, xend = ci_upper,\n      y = user_group, yend = user_group,\n      color = gender\n    ),\n    size = 1.5, alpha = 0.8\n  ) +\n  geom_point(aes(color = gender), size = 4, alpha = 0.9) +\n  geom_text(aes(label = paste0(\"n=\", scales::comma(n))),\n    hjust = 0.5, vjust = 2.5, size = 3, color = \"gray30\"\n  ) +\n  geom_text(aes(label = round(mean_acc, 3)),\n    hjust = 0.5, vjust = -2, size = 3.5, fontface = \"bold\"\n  ) +\n  geom_vline(\n    xintercept = overall_mean,\n    linetype = \"dashed\", color = \"gray50\", alpha = 0.7\n  ) +\n  # Annotate\n  annotate(\"text\",\n    x = overall_mean + 0.004, y = 0.5,\n    label = paste0(\"Overall Mean\\n(\", round(overall_mean, 3), \")\"),\n    hjust = 0.5, vjust = 0, size = 3,\n    color = \"gray50\", fontface = \"italic\"\n  ) +\n  # Scales\n  scale_color_manual(\n    values = colors$palette,\n    name = \"Gender\"\n  ) +\n  scale_x_continuous(\n    labels = scales::number_format(accuracy = 0.001),\n    limits = c(\n      min(group_stats$ci_lower) * 0.95,\n      max(group_stats$ci_upper) * 1.05\n    )\n  ) +\n  # Labs\n  labs(\n    title = \"Mean Color Accuracy with 95% Confidence Intervals\",\n    subtitle = \"Colorblindness has surprisingly minimal impact on ranking performance\",\n    x = \"Mean Accuracy Score\",\n    y = NULL\n  ) +\n  # Theme\n  theme(\n    legend.position = \"plot\",\n    panel.grid.minor = element_blank(),\n    panel.grid.major.y = element_blank(),\n    axis.text.y = element_text(size = 11),\n    plot.title = element_text(\n      size = rel(1.5),\n      family = fonts$title,\n      face = \"bold\",\n      color = colors$title,\n      hjust = 0.5,\n      lineheight = 1.1,\n      margin = margin(t = 5, b = 5)\n    ),\n    plot.subtitle = element_text(\n      size = rel(0.9),\n      family = fonts$subtitle,\n      color = colors$subtitle,\n      hjust = 0.5,\n      lineheight = 1.2,\n      margin = margin(t = 5, b = 5)\n    ),\n  )\n\n# Combine plots \ncombined_plot <- p1 / p2 +\n  plot_layout(heights = c(0.8, 1.2)) \n  \ncombined_plot <- combined_plot +  \n  plot_annotation(\n    title = title_text,\n    subtitle = subtitle_text,\n    caption = caption_text,\n    theme = theme(\n      plot.title = element_text(\n        size = rel(1.75),\n        family = fonts$title,\n        face = \"bold\",\n        color = colors$title,\n        lineheight = 1.1,\n        margin = margin(t = 5, b = 5)\n      ),\n      plot.subtitle = element_markdown(\n        size = rel(0.9),\n        family = fonts$subtitle,\n        color = colors$subtitle,\n        lineheight = 1.2,\n        margin = margin(t = 5, b = 10)\n      ),\n      plot.caption = element_markdown(\n        size = rel(0.6),\n        family = fonts$caption,\n        color = colors$caption,\n        hjust = 0.5,\n        margin = margin(t = 10)\n      )\n    )\n  )\n```\n````\n:::\n\n\n#### 7. Save\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: save\n#| warning: false\n\n### |-  plot image ----  \nsave_plot_patchwork(\n  plot = combined_plot, \n  type = \"tidytuesday\", \n  year = 2025, \n  week = 27, \n  width  = 10,\n  height = 10\n)\n```\n````\n:::\n\n\n#### 8. Session Info\n\n::: {.callout-tip collapse=\"true\"}\n##### Expand for Session Info\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\nR version 4.4.1 (2024-06-14 ucrt)\nPlatform: x86_64-w64-mingw32/x64\nRunning under: Windows 11 x64 (build 22631)\n\nMatrix products: default\n\n\nlocale:\n[1] LC_COLLATE=English_United States.utf8 \n[2] LC_CTYPE=English_United States.utf8   \n[3] LC_MONETARY=English_United States.utf8\n[4] LC_NUMERIC=C                          \n[5] LC_TIME=English_United States.utf8    \n\ntime zone: America/New_York\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices datasets  utils     methods   base     \n\nother attached packages:\n [1] here_1.0.1      effsize_0.8.1   patchwork_1.3.0 glue_1.8.0     \n [5] scales_1.3.0    janitor_2.2.0   showtext_0.9-7  showtextdb_3.0 \n [9] sysfonts_0.8.9  ggtext_0.1.2    lubridate_1.9.3 forcats_1.0.0  \n[13] stringr_1.5.1   dplyr_1.1.4     purrr_1.0.2     readr_2.1.5    \n[17] tidyr_1.3.1     tibble_3.2.1    ggplot2_3.5.1   tidyverse_2.0.0\n[21] pacman_0.5.1   \n\nloaded via a namespace (and not attached):\n [1] gtable_0.3.6       httr2_1.0.6        xfun_0.49          htmlwidgets_1.6.4 \n [5] gh_1.4.1           tzdb_0.5.0         yulab.utils_0.1.8  vctrs_0.6.5       \n [9] tools_4.4.0        generics_0.1.3     parallel_4.4.0     curl_6.0.0        \n[13] gifski_1.32.0-1    fansi_1.0.6        pkgconfig_2.0.3    ggplotify_0.1.2   \n[17] lifecycle_1.0.4    compiler_4.4.0     farver_2.1.2       munsell_0.5.1     \n[21] codetools_0.2-20   snakecase_0.11.1   htmltools_0.5.8.1  yaml_2.3.10       \n[25] crayon_1.5.3       pillar_1.9.0       camcorder_0.1.0    magick_2.8.5      \n[29] commonmark_1.9.2   tidyselect_1.2.1   digest_0.6.37      stringi_1.8.4     \n[33] labeling_0.4.3     rsvg_2.6.1         rprojroot_2.0.4    fastmap_1.2.0     \n[37] grid_4.4.0         colorspace_2.1-1   cli_3.6.4          magrittr_2.0.3    \n[41] utf8_1.2.4         withr_3.0.2        rappdirs_0.3.3     bit64_4.5.2       \n[45] timechange_0.3.0   rmarkdown_2.29     tidytuesdayR_1.1.2 gitcreds_0.1.2    \n[49] bit_4.5.0          hms_1.1.3          evaluate_1.0.1     knitr_1.49        \n[53] markdown_1.13      gridGraphics_0.5-1 rlang_1.1.6        gridtext_0.1.5    \n[57] Rcpp_1.0.13-1      xml2_1.3.6         renv_1.0.3         vroom_1.6.5       \n[61] svglite_2.1.3      rstudioapi_0.17.1  jsonlite_1.8.9     R6_2.5.1          \n[65] fs_1.6.5           systemfonts_1.1.0 \n```\n\n\n:::\n:::\n\n:::\n\n#### 9. GitHub Repository\n\n::: {.callout-tip collapse=\"true\"}\n##### Expand for GitHub Repo\n\nThe complete code for this analysis is available in [`tt_2025_27.qmd`](https://github.com/poncest/personal-website/blob/master/data_visualizations/TidyTuesday/2025/tt_2025_27.qmd).\n\nFor the full repository, [click here](https://github.com/poncest/personal-website/).\n:::\n\n#### 10. References\n\n::: {.callout-tip collapse=\"true\"}\n##### Expand for References\n\n1.  Data Sources:\n\n-   TidyTuesday 2025 Week 27: \\[The xkcd Color Survey Results\\](https://github.com/rfordatascience/tidytuesday/blob/main/data/2025/2025-07-08)\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}