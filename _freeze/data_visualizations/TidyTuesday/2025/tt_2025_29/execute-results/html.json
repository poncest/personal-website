{
  "hash": "ce51582b42333ed14703f701bbe0cb21",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Evolution of MTA Art Materials (1980-2020)\"\nsubtitle: \"Tracking material preferences across four decades of transit art\"\ndescription: \"An analysis of MTA's permanent art catalog using gghighlight to reveal how material preferences evolved from 1980-2020. Mosaic & Tile dominated early installations, Glass surged dramatically in the 2000s, and Steel & Iron emerged as a modern choice.\"\nauthor: \"Steven Ponce\"\ndate: \"2025-07-22\" \ncategories: [\"TidyTuesday\", \"Data Visualization\", \"R Programming\", \"2025\"]\ntags: [\n  \"gghighlight\",\n  \"faceted-visualization\", \n  \"time-series\",\n  \"material-trends\",\n  \"transit-art\",\n  \"MTA\",\n  \"New-York\",\n  \"art-analysis\",\n  \"ggplot2\",\n  \"data-storytelling\",\n  \"public-art\"\n]\nimage: \"thumbnails/tt_2025_29.png\"\nformat:\n  html:\n    toc: true\n    toc-depth: 5\n    code-link: true\n    code-fold: true\n    code-tools: true\n    code-summary: \"Show code\"\n    self-contained: true\n    theme: \n      light: [flatly, assets/styling/custom_styles.scss]\n      dark: [darkly, assets/styling/custom_styles_dark.scss]\neditor_options: \n  chunk_output_type: inline\nexecute: \n  freeze: true                                    \n  cache: true                                       \n  error: false\n  message: false\n  warning: false\n  eval: true\n---\n\n![Faceted line chart showing MTA art material usage from 1980-2020. Seven panels display trends for different materials: Mosaic & Tile shows steady usage with peaks around 1990 and 2014; Glass has dramatic spikes in 2002 and 2010; Steel & Iron emerge mainly after 2005; Bronze & Copper peaks around 1988; Ceramic, Paint & Pigments, and Stone show minimal, sporadic usage throughout the period.](tt_2025_29.png){#fig-1}\n\n### <mark> **Steps to Create this Graphic** </mark>\n\n#### 1. Load Packages & Setup\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: load\n#| warning: false\n#| message: false\n#| results: \"hide\"\n\n## 1. LOAD PACKAGES & SETUP ----\nsuppressPackageStartupMessages({\nif (!require(\"pacman\")) install.packages(\"pacman\")\npacman::p_load(\n    tidyverse,  # Easily Install and Load the 'Tidyverse'\n    ggtext,     # Improved Text Rendering Support for 'ggplot2'\n    showtext,   # Using Fonts More Easily in R Graphs\n    janitor,    # Simple Tools for Examining and Cleaning Dirty Data\n    scales,     # Scale Functions for Visualization\n    glue,       # Interpreted String Literals\n    gghighlight # Highlight Lines and Points in 'ggplot2'\n  )})\n\n### |- figure size ----\ncamcorder::gg_record(\n  dir    = here::here(\"temp_plots\"),\n  device = \"png\",\n  width  = 8,\n  height = 8,\n  units  = \"in\",\n  dpi    = 320\n)\n\n# Source utility functions\nsuppressMessages(source(here::here(\"R/utils/fonts.R\")))\nsource(here::here(\"R/utils/social_icons.R\"))\nsource(here::here(\"R/utils/image_utils.R\"))\nsource(here::here(\"R/themes/base_theme.R\"))\n```\n````\n:::\n\n\n#### 2. Read in the Data\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: read\n#| include: true\n#| eval: true\n#| warning: false\n\ntt <- tidytuesdayR::tt_load(2025, week = 29)\n\nmta_art <- tt$mta_art |> clean_names()\nstation_lines <- tt$station_lines |> clean_names()\n\ntidytuesdayR::readme(tt)\nrm(tt)\n```\n````\n:::\n\n\n#### 3. Examine the Data\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: examine\n#| include: true\n#| eval: true\n#| results: 'hide'\n#| warning: false\n\nglimpse(mta_art)\nglimpse(station_lines)\n```\n````\n:::\n\n\n#### 4. Tidy Data\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: tidy\n#| warning: false\n\n# Define a function to categorize materials\ncategorize_material <- function(art_material_string) {\n  case_when(\n    str_detect(str_to_lower(art_material_string), \"mosaic|tile\") ~ \"Mosaic & Tile\",\n    str_detect(str_to_lower(art_material_string), \"bronze|brass|copper\") ~ \"Bronze & Copper\",\n    str_detect(str_to_lower(art_material_string), \"glass|stained\") ~ \"Glass\",\n    str_detect(str_to_lower(art_material_string), \"ceramic|porcelain|terra\") ~ \"Ceramic\",\n    str_detect(str_to_lower(art_material_string), \"steel|iron|metal\") ~ \"Steel & Iron\",\n    str_detect(str_to_lower(art_material_string), \"stone|granite|marble\") ~ \"Stone\",\n    str_detect(str_to_lower(art_material_string), \"paint|acrylic|oil\") ~ \"Paint & Pigments\",\n    TRUE ~ \"Other Materials\"\n  )\n}\n\n# Process the raw data\nmta_art_cleaned <- mta_art |>\n  filter(!is.na(art_date), !is.na(art_material)) |>\n  mutate(\n    material_category = categorize_material(art_material)\n  ) |>\n  filter(\n    material_category != \"Other Materials\",\n    !is.na(material_category)\n  )\n\n# Calculate material totals for proper ordering\nmaterial_totals <- mta_art_cleaned |>\n  count(material_category, sort = TRUE)\n\n# Prepare time series data\ntimeseries_data <- mta_art_cleaned |>\n  mutate(\n    # Create 2-year time bins\n    year_bin = 2 * floor(art_date / 2),\n    # Convert to ordered factor using levels from material_totals\n    material_category = factor(material_category, levels = material_totals$material_category)\n  ) |>\n  # Count installations by time period and material\n  count(year_bin, material_category, name = \"installations\") |>\n  # Fill in missing combinations with zeros\n  complete(\n    year_bin = seq(min(year_bin), max(year_bin), by = 2),\n    material_category,\n    fill = list(installations = 0)\n  )\n```\n````\n:::\n\n\n#### 5. Visualization Parameters\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: params\n#| include: true\n#| warning: false\n\n### |-  plot aesthetics ----\nhighlight_color <- \"#4A9782\"\n\ncolors <- get_theme_colors(\n  palette = c(\n      \"Mosaic & Tile\" = highlight_color,\n      \"Glass\" = highlight_color, \n      \"Bronze & Copper\" = highlight_color,\n      \"Ceramic\" = highlight_color,\n      \"Steel & Iron\" = highlight_color,\n      \"Stone\" = highlight_color,\n      \"Paint & Pigments\" = highlight_color\n\n  )\n)\n\n### |- titles and caption ----\ntitle_text <- str_glue(\"Evolution of MTA Art Materials (1980-2020)\")\nsubtitle_text <- str_glue(\"Tracking material preferences across four decades of transit art\")\n\ncaption_text <- create_social_caption(\n  tt_year = 2025,\n  tt_week = 29,\n  source_text =  \"MTA Permanent Art Catalog: Beginning 1980\"\n)\n\n### |-  fonts ----\nsetup_fonts()\nfonts <- get_font_families()\n\n### |-  plot theme ----\n\n# Start with base theme\nbase_theme <- create_base_theme(colors)\n\n# Add weekly-specific theme elements\nweekly_theme <- extend_weekly_theme(\n  base_theme,\n  theme(\n    axis.line = element_blank(), \n    axis.ticks = element_blank(), \n    \n    # Grid elements\n    panel.grid.major.y = element_line(color = \"gray90\",linetype = \"solid\", linewidth = 0.3),\n    panel.grid.minor.y = element_blank(), \n    panel.grid.major.x = element_blank(), \n    panel.grid.minor.x = element_blank(), \n  \n    # Axis elements\n    axis.text = element_text(color = colors$text, size = rel(0.7)),\n    axis.title.x = element_text(color = colors$text, face = \"bold\", size = rel(0.8), margin = margin(t = 15)),\n    axis.title.y = element_text(color = colors$text, face = \"bold\", size = rel(0.8), margin = margin(r = 10)),\n\n    # Legend elements\n    legend.position = \"plot\",\n    legend.title = element_text(family = fonts$tsubtitle, color = colors$text, size = rel(0.8), face = \"bold\"),\n    legend.text = element_text(family = fonts$tsubtitle, color = colors$text, size = rel(0.7)),\n\n    # Plot margin\n    plot.margin = margin(t = 15, r = 15, b = 15, l = 15),\n  )\n)\n\n# Set theme\ntheme_set(weekly_theme)\n```\n````\n:::\n\n\n#### 6. Plot\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: plot\n#| warning: false\n\np <- timeseries_data |>\n  ggplot(aes(x = year_bin, y = installations, color = material_category)) +\n\n  # Geoms\n  geom_line(size = 1.3, alpha = 0.9) +\n  gghighlight(\n    use_direct_label = FALSE,\n    unhighlighted_params = list(\n      linewidth = 0.3,\n      alpha = 0.75,\n      color = \"gray60\"\n    )\n  ) +\n  # Scales\n  scale_color_manual(\n    values = c(\n      \"Mosaic & Tile\" = highlight_color,\n      \"Glass\" = highlight_color,\n      \"Bronze & Copper\" = highlight_color,\n      \"Ceramic\" = highlight_color,\n      \"Steel & Iron\" = highlight_color,\n      \"Stone\" = highlight_color,\n      \"Paint & Pigments\" = highlight_color\n    ),\n    guide = \"none\"\n  ) +\n  scale_x_continuous(\n    breaks = seq(1980, 2020, 20),\n    expand = expansion(mult = c(0.01, 0.01))\n  ) +\n  scale_y_continuous(\n    expand = expansion(mult = c(0.0, 0.1))\n  ) +\n  # Labs\n  labs(\n    title = title_text,\n    subtitle = subtitle_text,\n    caption = caption_text,\n    x = NULL,\n    y = \"Number of Installations\"\n  ) +\n  # Facets\n  facet_wrap(~material_category,\n    scales = \"free_y\", ncol = 3\n  ) +\n  # Theme\n  theme(\n    plot.title = element_text(\n      size = rel(1.7),\n      family = fonts$title,\n      face = \"bold\",\n      color = colors$title,\n      lineheight = 1.1,\n      margin = margin(t = 5, b = 5)\n    ),\n    plot.subtitle = element_text(\n      size = rel(0.95),\n      family = fonts$subtitle,\n      color = alpha(colors$subtitle, 0.9),\n      lineheight = 1.2,\n      margin = margin(t = 5, b = 20)\n    ),\n    plot.caption = element_markdown(\n      size = rel(0.65),\n      family = fonts$caption,\n      color = colors$caption,\n      hjust = 0,\n      margin = margin(t = 15, b = 5, l = 0),\n      lineheight = 1.3\n    ),\n    strip.text = element_text(\n      size = 12,\n      face = \"bold\",\n      color = \"gray20\",\n      family = fonts$body_bold,\n      margin = margin(t = 5, b = 5)\n    ),\n    strip.background = element_rect(\n      fill = \"gray95\",\n      color = \"white\",\n      linewidth = 0.5\n    ),\n    panel.spacing = unit(1.5, \"lines\"),\n  )\n```\n````\n:::\n\n\n#### 7. Save\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: save\n#| warning: false\n\n### |-  plot image ----  \nsave_plot(\n  plot = p, \n  type = \"tidytuesday\", \n  year = 2025, \n  week = 29, \n  width  = 8,\n  height = 8\n)\n```\n````\n:::\n\n\n#### 8. Session Info\n\n::: {.callout-tip collapse=\"true\"}\n##### Expand for Session Info\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\nR version 4.4.1 (2024-06-14 ucrt)\nPlatform: x86_64-w64-mingw32/x64\nRunning under: Windows 11 x64 (build 22631)\n\nMatrix products: default\n\n\nlocale:\n[1] LC_COLLATE=English_United States.utf8 \n[2] LC_CTYPE=English_United States.utf8   \n[3] LC_MONETARY=English_United States.utf8\n[4] LC_NUMERIC=C                          \n[5] LC_TIME=English_United States.utf8    \n\ntime zone: America/La_Paz\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices datasets  utils     methods   base     \n\nother attached packages:\n [1] here_1.0.1        gghighlight_0.4.1 glue_1.8.0        scales_1.3.0     \n [5] janitor_2.2.0     showtext_0.9-7    showtextdb_3.0    sysfonts_0.8.9   \n [9] ggtext_0.1.2      lubridate_1.9.3   forcats_1.0.0     stringr_1.5.1    \n[13] dplyr_1.1.4       purrr_1.0.2       readr_2.1.5       tidyr_1.3.1      \n[17] tibble_3.2.1      ggplot2_3.5.1     tidyverse_2.0.0   pacman_0.5.1     \n\nloaded via a namespace (and not attached):\n [1] gtable_0.3.6       xfun_0.49          httr2_1.0.6        htmlwidgets_1.6.4 \n [5] gh_1.4.1           tzdb_0.5.0         vctrs_0.6.5        tools_4.4.0       \n [9] generics_0.1.3     parallel_4.4.0     curl_6.0.0         gifski_1.32.0-1   \n[13] fansi_1.0.6        pkgconfig_2.0.3    lifecycle_1.0.4    farver_2.1.2      \n[17] compiler_4.4.0     textshaping_0.4.0  munsell_0.5.1      codetools_0.2-20  \n[21] snakecase_0.11.1   htmltools_0.5.8.1  yaml_2.3.10        crayon_1.5.3      \n[25] pillar_1.9.0       camcorder_0.1.0    magick_2.8.5       commonmark_1.9.2  \n[29] tidyselect_1.2.1   digest_0.6.37      stringi_1.8.4      labeling_0.4.3    \n[33] rsvg_2.6.1         rprojroot_2.0.4    fastmap_1.2.0      grid_4.4.0        \n[37] colorspace_2.1-1   cli_3.6.4          magrittr_2.0.3     utf8_1.2.4        \n[41] withr_3.0.2        rappdirs_0.3.3     bit64_4.5.2        timechange_0.3.0  \n[45] rmarkdown_2.29     tidytuesdayR_1.1.2 gitcreds_0.1.2     bit_4.5.0         \n[49] ragg_1.3.3         hms_1.1.3          evaluate_1.0.1     knitr_1.49        \n[53] markdown_1.13      rlang_1.1.6        gridtext_0.1.5     Rcpp_1.0.13-1     \n[57] xml2_1.3.6         renv_1.0.3         vroom_1.6.5        svglite_2.1.3     \n[61] rstudioapi_0.17.1  jsonlite_1.8.9     R6_2.5.1           systemfonts_1.1.0 \n```\n\n\n:::\n:::\n\n:::\n\n#### 9. GitHub Repository\n\n::: {.callout-tip collapse=\"true\"}\n##### Expand for GitHub Repo\n\nThe complete code for this analysis is available in [`tt_2025_29.qmd`](https://github.com/poncest/personal-website/blob/master/data_visualizations/TidyTuesday/2025/tt_2025_29.qmd).\n\nFor the full repository, [click here](https://github.com/poncest/personal-website/).\n:::\n\n#### 10. References\n\n::: {.callout-tip collapse=\"true\"}\n##### Expand for References\n\n1.  Data Sources:\n\n-   TidyTuesday 2025 Week 29: \\[MTA Permanent Art Catalog\\](https://github.com/rfordatascience/tidytuesday/blob/main/data/2025/2025-07-22)\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}