{
  "hash": "7516a5136b91f40d531801c32f7db33a",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Geographic Distribution of U.S. Law Enforcement Agencies\"\nsubtitle: \"Showing 17,157 agencies across seven categories. City and County agencies account for 83% of all agencies. \"\ndescription: \"A detailed visualization examining the geographic distribution of U.S. law enforcement agencies across seven distinct categories, highlighting the dominance of City and County agencies while revealing unique regional patterns in the distribution of specialized law enforcement entities.\"\nauthor: \"Steven Ponce\"\ndate: \"2025-02-14\" \ncategories: [\"TidyTuesday\", \"Data Visualization\", \"R Programming\", \"2025\"]\ntags: [\n   \"maps\",\n   \"law-enforcement\",\n   \"geographic-visualization\",\n   \"small-multiples\",\n   \"fbi-data\",\n   \"spatial-analysis\",\n   \"data-cleaning\",\n   \"tidyverse\"\n]\nimage: \"thumbnails/tt_2025_07.png\"\nformat:\n  html:\n    toc: true\n    toc-depth: 5\n    code-link: true\n    code-fold: true\n    code-tools: true\n    code-summary: \"Show code\"\n    self-contained: true\n    theme: \n      light: [flatly, assets/styling/custom_styles.scss]\n      dark: [darkly, assets/styling/custom_styles_dark.scss]\neditor_options: \n  chunk_output_type: inline\nexecute: \n  freeze: true                                                  \n  cache: true                                                   \n  error: false\n  message: false\n  warning: false\n  eval: true\nfilters:\n  - social-share\nshare:\n  permalink: \"https://stevenponce.netlify.app/data_visualizations/TidyTuesday/2025/tt_2025_07.html\"\n  description: \"Explore the geographic distribution of U.S. law enforcement agencies through a series of small multiples maps, revealing patterns in the placement of different agency types across the continental United States. #TidyTuesday #rstats #chart\"\n\n  twitter: true\n  linkedin: true\n  email: true\n  facebook: false\n  reddit: false\n  stumble: false\n  tumblr: false\n  mastodon: true\n  bsky: true\n---\n\n\n\n![Seven small maps of the continental United States show law enforcement agencies' geographic distribution by type. City agencies (11,251) and County agencies (3,023) show the densest coverage across the country. State Police (882) are concentrated in the Northeast. Other State Agencies (715) cluster in the Southeast. University/College agencies (671) are spread across the country, with higher density in the East. Other agencies (430) show scattered distribution. Tribal agencies (185) are primarily located in Western states.](tt_2025_07.png){#fig-1}\n\n\n### <mark> **Steps to Create this Graphic** </mark>\n\n#### 1. Load Packages & Setup\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## 1. LOAD PACKAGES & SETUP ----\nsuppressPackageStartupMessages({\nif (!require(\"pacman\")) install.packages(\"pacman\")\npacman::p_load(\n    tidyverse,      # Easily Install and Load the 'Tidyverse'\n    ggtext,         # Improved Text Rendering Support for 'ggplot2'\n    showtext,       # Using Fonts More Easily in R Graphs\n    janitor,        # Simple Tools for Examining and Cleaning Dirty Data\n    skimr,          # Compact and Flexible Summaries of Data\n    scales,         # Scale Functions for Visualization\n    glue,           # Interpreted String Literals\n    here,           # A Simpler Way to Find Your Files\n    camcorder,      # Record Your Plot History \n    maps            # Draw Geographical Maps\n    )\n})\n\n### |- figure size ----\ngg_record(\n    dir    = here::here(\"temp_plots\"),\n    device = \"png\",\n    width  =  8,\n    height =  7,\n    units  = \"in\",\n    dpi    = 320\n)\n\n# Source utility functions\nsuppressMessages(source(here::here(\"R/utils/fonts.R\")))\nsource(here::here(\"R/utils/social_icons.R\"))\nsource(here::here(\"R/utils/image_utils.R\"))\nsource(here::here(\"R/themes/base_theme.R\"))\n```\n:::\n\n\n\n#### 2. Read in the Data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntt <- tidytuesdayR::tt_load(2025, week = 07) \n\nagencies <- tt$agencies |> clean_names()\n\ntidytuesdayR::readme(tt)\nrm(tt)\n```\n:::\n\n\n\n#### 3. Examine the Data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(agencies)\nskim(agencies)\n```\n:::\n\n\n\n#### 4. Tidy Data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Define constants\ncontinental_bounds <- list(\n    states_exclude = c(\"alaska\", \"hawaii\"),\n    long = c(-125, -65),\n    lat = c(25, 50),\n    outlier_thresh = -125\n)\n\n# Get continental US map data\ncontinental_states <- map_data(\"state\") |>\n    filter(!region %in% continental_bounds$states_exclude)\n\n# Function to check if point is within continental bounds\nis_continental <- function(long, lat, bounds) {\n    between(long, bounds$long[1], bounds$long[2]) &\n        between(lat, bounds$lat[1], bounds$lat[2])\n}\n\n# Process agencies data\ncleaned_agencies <- agencies |>\n    # Initial filtering\n    filter(\n        !agency_type %in% c(NA, \"Unknown\", \"NA\"),\n        !state %in% str_to_title(continental_bounds$states_exclude),\n        !(agency_type == \"Other\" & longitude < continental_bounds$outlier_thresh)\n    ) |>\n    # Filter to continental bounds\n    filter(is_continental(longitude, latitude, continental_bounds))\n\n# Calculate agency counts and create labels\nagency_counts <- cleaned_agencies |>\n    count(agency_type) |>\n    arrange(desc(n)) |>\n    mutate(\n        label = str_glue(\"{agency_type}\\n(n = {format(n, big.mark=',')})\"), \n        pct_total = n/sum(n) * 100,\n        agency_type = factor(agency_type, levels = agency_type)\n    )\n\n# Prepare final dataset for plotting\nfiltered_agencies <- cleaned_agencies |>\n    left_join(agency_counts |> select(agency_type, label),\n              by = \"agency_type\") |>\n    mutate(\n        # Set factor levels based on counts\n        agency_type = factor(agency_type, \n                             levels = levels(agency_counts$agency_type)),\n        # Create labels for faceting\n        agency_label = factor(agency_type,\n                              levels = levels(agency_type),\n                              labels = agency_counts$label)\n    )\n\n# Extract total for use in plot\ntotal_agencies <- agency_counts$total_agencies[1]\n\n# Calculate summary statistics \nsummary_stats <- list(\n    total_agencies = sum(agency_counts$n),\n    num_categories = n_distinct(filtered_agencies$agency_type),\n    city_county_pct = round(100 * sum(agency_counts$n[1:2])/sum(agency_counts$n))\n)\n```\n:::\n\n\n\n#### 5. Visualization Parameters\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### |-  plot aesthetics ----\n# Get base colors with custom palette\ncolors <- get_theme_colors(\n    palette = c(\n        \"City\"                  = \"#AD225E\",         \n        \"County\"                = \"#D67195\",       \n        \"State Police\"          = \"#228B7D\",  \n        \"Other State Agency\"    = \"#B8860B\", \n        \"University or College\" = \"#2D439E\",\n        \"Other\"                 = \"#8B4513\",         \n        \"Tribal\"                = \"#666666\"         \n    )\n)\n\n### |-  titles and caption ----\ntitle_text <- str_glue(\"Geographic Distribution of U.S. Law Enforcement Agencies\")\n\nsubtitle_text <-  str_glue(\n    \"Showing **{format(summary_stats$total_agencies, big.mark=',')}** agencies across {summary_stats$num_categories} categories<br>\",\n    \"**City** and **County** agencies account for **{summary_stats$city_county_pct}%** of all agencies\"\n)\n\n# Create caption\ncaption_text <- create_social_caption(\n    tt_year = 2025,\n    tt_week = 07,\n    source_text = \"FBI Crime Data API\"\n)\n\n### |-  fonts ----\nsetup_fonts()\nfonts <- get_font_families()\n\n### |-  plot theme ----\n\n# Start with base theme\nbase_theme <- create_base_theme(colors)\n\n# Add weekly-specific theme elements\nweekly_theme <- extend_weekly_theme(\n    base_theme,\n    theme(\n        # Remove axes\n        axis.text = element_blank(),\n        axis.title = element_blank(),\n        panel.grid = element_blank(),\n        \n        # Style facet labels\n        strip.text = element_text(\n            size = rel(0.75),\n            face = \"bold\",\n            family = fonts$text,\n            color = colors$title,\n            margin = margin(b = 8, t = 8)\n        ),\n        \n        # Add spacing\n        panel.spacing = unit(1.2, \"lines\"),\n        \n        # Plot margins \n        plot.margin = margin(10, 10, 10, 10),\n    )\n)\n\n# Set theme\ntheme_set(weekly_theme)\n```\n:::\n\n\n\n#### 6. Map\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### |-  Map  ----\np <- ggplot() +\n    # Geoms\n    geom_polygon(\n        data = continental_states, \n        aes(x = long, y = lat, group = group),\n        fill = \"gray95\",     \n        color = \"gray80\", \n        linewidth = 0.3\n    ) +\n    geom_point(\n        data = filtered_agencies,\n        aes(x = longitude, \n            y = latitude,\n            color = agency_type,\n            alpha = agency_type),  \n        size = 0.5\n    ) +\n    \n    # Scales\n    scale_alpha_manual(\n        values = c(\n            \"City\" = 0.4,\n            \"County\" = 0.4,\n            \"Other\" = 0.7,\n            \"Other State Agency\" = 0.7,\n            \"State Police\" = 0.7,\n            \"Tribal\" = 0.8,    \n            \"University or College\" = 0.7\n        ),\n        guide = \"none\"\n    ) +\n    scale_color_manual(\n        values = colors$palette,\n        guide = \"none\"\n    ) +\n    coord_fixed(\n        1.3,\n        xlim = continental_bounds$long,\n        ylim = continental_bounds$lat\n    ) +\n    \n    # Labs\n    labs(\n        x = NULL,\n        y = NULL,\n        title    = title_text,\n        subtitle = subtitle_text,\n        caption  = caption_text,\n    ) +\n    \n    # Facets \n    facet_wrap(\n        ~agency_label, \n        ncol = 3,\n        scales = \"fixed\"\n    ) +\n    \n    # Theme\n    theme(\n        plot.title = element_text(\n            size = rel(1.3),\n            family = fonts$title,\n            face = \"bold\",\n            color = colors$title,\n            lineheight = 1.1,\n            margin = margin(t = 0, b = 8)\n        ),\n        plot.subtitle = element_markdown(\n            size = rel(0.7),\n            lineheight = (1.2),\n            family = fonts$subtitle,\n            color = colors$subtitle,\n            margin = margin(b = 15)\n        ),\n        plot.caption = element_markdown(\n            size   = rel(0.5),\n            family = fonts$caption,\n            color  = colors$caption,\n            hjust  = 1,\n            margin = margin(t = 0, b = 0)\n        )\n    )\n```\n:::\n\n\n\n#### 7. Save\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### |-  plot image ----  \nsave_plot(\n  plot = p, \n  type = \"tidytuesday\", \n  year = 2025, \n  week = 7, \n  width = 8,\n  height = 7\n)\n```\n:::\n\n\n\n#### 8. Session Info\n\n::: {.callout-tip collapse=\"true\"}\n##### Expand for Session Info\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\nR version 4.4.1 (2024-06-14 ucrt)\nPlatform: x86_64-w64-mingw32/x64\nRunning under: Windows 11 x64 (build 22631)\n\nMatrix products: default\n\n\nlocale:\n[1] LC_COLLATE=English_United States.utf8 \n[2] LC_CTYPE=English_United States.utf8   \n[3] LC_MONETARY=English_United States.utf8\n[4] LC_NUMERIC=C                          \n[5] LC_TIME=English_United States.utf8    \n\ntime zone: America/New_York\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices datasets  utils     methods   base     \n\nother attached packages:\n [1] maps_3.4.2.1    camcorder_0.1.0 here_1.0.1      glue_1.8.0     \n [5] scales_1.3.0    skimr_2.1.5     janitor_2.2.0   showtext_0.9-7 \n [9] showtextdb_3.0  sysfonts_0.8.9  ggtext_0.1.2    lubridate_1.9.3\n[13] forcats_1.0.0   stringr_1.5.1   dplyr_1.1.4     purrr_1.0.2    \n[17] readr_2.1.5     tidyr_1.3.1     tibble_3.2.1    ggplot2_3.5.1  \n[21] tidyverse_2.0.0 pacman_0.5.1   \n\nloaded via a namespace (and not attached):\n [1] gtable_0.3.6       httr2_1.0.6        xfun_0.49          htmlwidgets_1.6.4 \n [5] gh_1.4.1           tzdb_0.4.0         vctrs_0.6.5        tools_4.4.0       \n [9] generics_0.1.3     parallel_4.4.0     curl_6.0.0         gifski_1.32.0-1   \n[13] fansi_1.0.6        pkgconfig_2.0.3    lifecycle_1.0.4    farver_2.1.2      \n[17] compiler_4.4.0     textshaping_0.4.0  munsell_0.5.1      repr_1.1.7        \n[21] codetools_0.2-20   snakecase_0.11.1   htmltools_0.5.8.1  yaml_2.3.10       \n[25] crayon_1.5.3       pillar_1.9.0       magick_2.8.5       commonmark_1.9.2  \n[29] tidyselect_1.2.1   digest_0.6.37      stringi_1.8.4      labeling_0.4.3    \n[33] rsvg_2.6.1         rprojroot_2.0.4    fastmap_1.2.0      grid_4.4.0        \n[37] colorspace_2.1-1   cli_3.6.3          magrittr_2.0.3     base64enc_0.1-3   \n[41] utf8_1.2.4         withr_3.0.2        rappdirs_0.3.3     bit64_4.5.2       \n[45] timechange_0.3.0   rmarkdown_2.29     tidytuesdayR_1.1.2 gitcreds_0.1.2    \n[49] bit_4.5.0          ragg_1.3.3         hms_1.1.3          evaluate_1.0.1    \n[53] knitr_1.49         markdown_1.13      rlang_1.1.4        gridtext_0.1.5    \n[57] Rcpp_1.0.13-1      xml2_1.3.6         renv_1.0.3         vroom_1.6.5       \n[61] svglite_2.1.3      rstudioapi_0.17.1  jsonlite_1.8.9     R6_2.5.1          \n[65] systemfonts_1.1.0 \n```\n\n\n:::\n:::\n\n\n:::\n\n#### 9. GitHub Repository\n\n::: {.callout-tip collapse=\"true\"}\n##### Expand for GitHub Repo\n\nThe complete code for this analysis is available in [`tt_2025_07.qmd`](https://github.com/poncest/personal-website/blob/master/data_visualizations/TidyTuesday/2025/tt_2025_07.qmd).\n\nFor the full repository, [click here](https://github.com/poncest/personal-website/).\n:::\n\n\n#### 10. References\n::: {.callout-tip collapse=\"true\"}\n##### Expand for References\n\n1. Data Sources:\n   - TidyTuesday 2025 Week 07]: [Agencies from the FBI Crime Data API](https://github.com/rfordatascience/tidytuesday/blob/main/data/2025/2025-02-18)\n\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}