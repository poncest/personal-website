{
  "hash": "e77d6c8e6317905823cd1ae6014475f8",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"The World Started Tracking Severe Food Insecurity in 2016\"\nsubtitle: \"Countries reporting each indicator annually. Severe Food Insecurity adoption jumps post-2016\"\ndescription: \"FAO data reveals global tracking of Severe Food Insecurity surged 70% after 2016.\"\ndate: \"2025-10-13\" \ncategories: [\"TidyTuesday\", \"Data Visualization\", \"R Programming\", \"2025\"]\ntags: [\n  \"Food Security\",\n  \"FAO Data\",\n  \"World Food Day\",\n  \"Temporal Analysis\",\n  \"Data Infrastructure\",\n  \"Line Chart\",\n  \"geomtextpath\",\n  \"Data Quality\",\n  \"Threshold Data\",\n  \"Global Health\",\n  \"Sustainable Development\",\n  \"ggplot2\",\n  \"Data Literacy\",\n  \"Measurement Systems\"\n]\nimage: \"thumbnails/tt_2025_41.png\"\nformat:\n  html:\n    toc: true\n    toc-depth: 5\n    code-link: true\n    code-fold: true\n    code-tools: true\n    code-summary: \"Show code\"\n    self-contained: true\n    theme: \n      light: [flatly, assets/styling/custom_styles.scss]\n      dark: [darkly, assets/styling/custom_styles_dark.scss]\neditor_options: \n  chunk_output_type: inline\nexecute: \n  freeze: true                                    \n  cache: true                                       \n  error: false\n  message: false\n  warning: false\n  eval: true\n---\n\n![Line chart showing five food security indicators tracked by countries from 2005 to 2025. Four gray lines (Average dietary energy requirements, Undernourishment, Child Overweight, Child Stunting) remain steady at 200-240 countries throughout. One purple line (Moderate/Severe Food Insecurity) dramatically surges from 40 countries in 2015 to 139 countries in 2016 (3.5x increase), then continues rising to ~190 countries by 2022, with a gray shaded box highlighting the post-2016 period of expanded tracking.](tt_2025_41.png){#fig-1}\n\n### <mark> **Steps to Create this Graphic** </mark>\n\n#### 1. Load Packages & Setup\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: load\n#| warning: false\n#| message: false\n#| results: \"hide\"\n\n## 1. LOAD PACKAGES & SETUP ----\nsuppressPackageStartupMessages({\nif (!require(\"pacman\")) install.packages(\"pacman\")\npacman::p_load(\n  tidyverse,     # Easily Install and Load the 'Tidyverse'\n  ggtext,        # Improved Text Rendering Support for 'ggplot2'\n  showtext,      # Using Fonts More Easily in R Graphs\n  janitor,       # Simple Tools for Examining and Cleaning Dirty Data\n  scales,        # Scale Functions for Visualization\n  glue,          # Interpreted String Literals\n  geomtextpath,  # Curved Text in 'ggplot2' # Curved Text in 'ggplot2'\n  ggrepel        # Automatically Position Non-Overlapping Text Labels with 'ggplot2' \n  )})\n\n### |- figure size ----\ncamcorder::gg_record(\n  dir    = here::here(\"temp_plots\"),\n  device = \"png\",\n  width  = 8,\n  height = 6,\n  units  = \"in\",\n  dpi    = 320\n)\n\n# Source utility functions\nsuppressMessages(source(here::here(\"R/utils/fonts.R\")))\nsource(here::here(\"R/utils/social_icons.R\"))\nsource(here::here(\"R/utils/image_utils.R\"))\nsource(here::here(\"R/themes/base_theme.R\"))\n```\n````\n:::\n\n\n#### 2. Read in the Data\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: read\n#| include: true\n#| eval: true\n#| warning: false\n\ntt <- tidytuesdayR::tt_load(2025, week = 41)\n\nfood_security <- tt$food_security |> clean_names()\n\ntidytuesdayR::readme(tt)\nrm(tt)\n```\n````\n:::\n\n\n#### 3. Examine the Data\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: examine\n#| include: true\n#| eval: true\n#| results: 'hide'\n#| warning: false\n\nglimpse(food_security)\n```\n````\n:::\n\n\n#### 4. Tidy Data\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: tidy-fixed\n#| warning: false\n\nfs_clean <- food_security |>\n  mutate(\n    year = year_end,\n    item_short = case_when(\n      str_detect(item, \"children under 5.*overweight\") ~ \"Child Overweight\",\n      str_detect(item, \"children under 5.*stunted\") ~ \"Child Stunting\",\n      str_detect(item, \"Prevalence of undernourishment.*3-year\") ~ \"Undernourishment (3y)\",\n      str_detect(item, \"Prevalence of moderate or severe food insecurity\") ~ \"Moderate/Severe Food Insecurity\",\n      TRUE ~ str_trunc(item, 35)\n    )\n  )\n\n# Manually select items that tell the story\nselected_items <- c(\n  \"Moderate/Severe Food Insecurity\",\n  \"Child Overweight\",\n  \"Child Stunting\",\n  \"Undernourishment (3y)\",\n  \"Average dietary energy requireme...\"\n)\n\n# Count countries per year/indicator\nparticipation <- fs_clean |>\n  filter(!is.na(value), item_short %in% selected_items) |>\n  distinct(area, year, item_short) |>\n  count(item_short, year, name = \"n_countries\") |>\n  mutate(is_highlight = item_short == \"Moderate/Severe Food Insecurity\") |>\n  arrange(item_short, year)\n```\n````\n:::\n\n\n#### 5. Visualization Parameters\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: params\n#| include: true\n#| warning: false\n\n### |-  plot aesthetics ----\n# Get basic theme colors\ncolors <- get_theme_colors(\n  palette = c(\"TRUE\" = \"#7209b7\", \"FALSE\" = \"gray70\")\n)\n\n### |- titles and caption ----\ntitle_text <- str_glue(\n    \"The World Started Tracking Severe Food Insecurity in 2016\"\n    )\n\nsubtitle_text <- str_glue(\n  \"Countries reporting each indicator annually. Severe Food Insecurity adoption jumps **post-2016**.<br>\",\n  \"**Note**: Most values are modeled estimates rather than direct measurements.<br>\"\n)\n\ncaption_text <- create_social_caption(\n  tt_year = 2025,\n  tt_week = 41,\n  source_text = \"FAO Suite of Food Security Indicators\"\n)\n\n### |-  fonts ----\nsetup_fonts()\nfonts <- get_font_families()\n\n### |-  plot theme ----\n# Start with base theme\nbase_theme <- create_base_theme(colors)\n\n# Add weekly-specific theme elements\nweekly_theme <- extend_weekly_theme(\n  base_theme,\n  theme(\n    # Text styling\n    plot.title = element_text(face = \"bold\", family = fonts$title, size = rel(1.4), color = colors$title, margin = margin(b = 10)),\n    plot.subtitle = element_text(family = fonts$subtitle, lineheight = 1.2, color = colors$subtitle, size = rel(0.9), margin = margin(b = 20)),\n\n    ## Grid\n    panel.grid.major.y = element_blank(),\n    panel.grid.minor = element_blank(),\n    panel.grid.major.x = element_line(color = \"gray90\", linewidth = 0.3),\n    \n    # Axes\n    axis.title = element_text(size = rel(0.9), color = \"gray30\"),\n    axis.text = element_text(color = \"gray30\"),\n    axis.text.y = element_text(size = rel(0.95)),\n    axis.ticks = element_blank(),\n    \n    # Facets\n    strip.background = element_rect(fill = \"gray95\", color = NA),\n    strip.text = element_text(\n        face = \"bold\", \n        color = \"gray20\", \n        size = rel(1),\n        margin = margin(t = 8, b = 8)\n    ),\n    panel.spacing = unit(2, \"lines\"),\n    \n    # Legend elements\n    legend.position = \"plot\",\n    legend.title = element_text(family = fonts$tsubtitle, \n                                color = colors$text, size = rel(0.8), face = \"bold\"),\n    legend.text = element_text(family = fonts$tsubtitle, \n                               color = colors$text, size = rel(0.7)),\n    legend.margin = margin(t = 15),\n\n    # Plot margin\n    plot.margin = margin(20, 20, 20, 20)\n  )\n)\n\n# Set theme\ntheme_set(weekly_theme)\n```\n````\n:::\n\n\n#### 6. Plot\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: plot\n#| warning: false\n\n### |- final plot ----\np <- ggplot(participation, aes(year, n_countries, group = item_short)) +\n  # Annotate\n    annotate(\"rect\",\n             xmin = 2016 - 0.5, xmax = 2024.5, \n             ymin = 0, ymax = 250, alpha = 0.06  \n    ) +\n  # Geoms\n    # Gray lines (background)\n    geom_line(\n        data = filter(participation, !is_highlight),\n        color = colors$palette[2],\n        linewidth = 0.6,\n        alpha = 0.5\n    ) +\n    # Gray line labels\n    geom_text_repel(\n        data = filter(participation, !is_highlight) |>\n            group_by(item_short) |>\n            slice_max(year, n = 1) |>  \n            ungroup(),\n        aes(label = item_short),\n        family = \"text\",\n        size = 2.8,\n        color = colors$palette[2],\n        alpha = 0.7,\n        hjust = 0,\n        nudge_x = 0.15,\n        direction = \"y\",\n        segment.size = 0.3,\n        segment.alpha = 0.3,\n        segment.color = colors$palette[2],\n        max.overlaps = 20, \n        seed = 456\n    ) +\n    # Purple highlight line\n    geom_textline(\n        data = filter(participation, is_highlight),\n        aes(label = item_short),\n        color = colors$palette[1],\n        linewidth = 1.8,         \n        size = 3.6,             \n        vjust = -0.25,\n        hjust = 0.35,\n        # straight = TRUE,\n        text_smoothing = 30,\n        na.rm = TRUE\n    ) +\n  # Scales\n    scale_x_continuous(\n        limits = c(2005, 2025),\n        breaks = seq(2005, 2025, 5),\n    ) +\n    scale_y_continuous(\n        limits = c(0, 260),      \n        breaks = seq(0, 250, 50)\n    ) +\n    coord_cartesian(clip = \"off\") +\n  # Labs\n  labs(\n    title = title_text,\n    subtitle = subtitle_text,\n    caption = caption_text,\n    x = \"Year\",\n    y = \"Countries Reporting\"\n  ) +\n  # Theme\n  theme(\n    panel.grid.minor  = element_blank(),\n    panel.grid.major.x= element_blank(),\n    panel.grid.major.y= element_line(colour = \"gray90\", linewidth = 0.2),\n    plot.title = element_text(\n      size = rel(1.55),\n      family = fonts$title,\n      face = \"bold\",\n      color = colors$title,\n      lineheight = 1.1,\n      margin = margin(t = 5, b = 5)\n    ),\n    plot.subtitle = element_markdown(\n      size = rel(0.75),\n      family = fonts$subtitle,\n      color = alpha(colors$subtitle, 0.9),\n      lineheight = 1.2,\n      margin = margin(t = 0, b = 0)\n    ),\n    plot.caption = element_markdown(\n      size = rel(0.55),\n      family = fonts$caption,\n      color = colors$caption,\n      hjust = 0.5,\n      margin = margin(t = 10)\n    )\n  )\n```\n````\n:::\n\n\n#### 7. Save\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: save\n#| warning: false\n\n### |-  plot image ----  \nsave_plot(\n  plot = p, \n  type = \"tidytuesday\", \n  year = 2025, \n  week = 41, \n  width  = 8,\n  height = 6\n  )\n```\n````\n:::\n\n\n#### 8. Session Info\n\n::: {.callout-tip collapse=\"true\"}\n##### Expand for Session Info\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\nR version 4.4.1 (2024-06-14 ucrt)\nPlatform: x86_64-w64-mingw32/x64\nRunning under: Windows 11 x64 (build 26100)\n\nMatrix products: default\n\n\nlocale:\n[1] LC_COLLATE=English_United States.utf8 \n[2] LC_CTYPE=English_United States.utf8   \n[3] LC_MONETARY=English_United States.utf8\n[4] LC_NUMERIC=C                          \n[5] LC_TIME=English_United States.utf8    \n\ntime zone: America/New_York\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices datasets  utils     methods   base     \n\nother attached packages:\n [1] here_1.0.1         ggrepel_0.9.6      geomtextpath_0.1.4 glue_1.8.0        \n [5] scales_1.3.0       janitor_2.2.0      showtext_0.9-7     showtextdb_3.0    \n [9] sysfonts_0.8.9     ggtext_0.1.2       lubridate_1.9.3    forcats_1.0.0     \n[13] stringr_1.5.1      dplyr_1.1.4        purrr_1.0.2        readr_2.1.5       \n[17] tidyr_1.3.1        tibble_3.2.1       ggplot2_3.5.1      tidyverse_2.0.0   \n[21] pacman_0.5.1      \n\nloaded via a namespace (and not attached):\n [1] gtable_0.3.6       httr2_1.0.6        xfun_0.49          htmlwidgets_1.6.4 \n [5] gh_1.4.1           tzdb_0.5.0         vctrs_0.6.5        tools_4.4.0       \n [9] generics_0.1.3     parallel_4.4.0     curl_6.0.0         gifski_1.32.0-1   \n[13] fansi_1.0.6        pkgconfig_2.0.3    lifecycle_1.0.4    farver_2.1.2      \n[17] compiler_4.4.0     textshaping_0.4.0  munsell_0.5.1      codetools_0.2-20  \n[21] snakecase_0.11.1   htmltools_0.5.8.1  yaml_2.3.10        crayon_1.5.3      \n[25] pillar_1.9.0       camcorder_0.1.0    magick_2.8.5       commonmark_1.9.2  \n[29] tidyselect_1.2.1   digest_0.6.37      stringi_1.8.4      rsvg_2.6.1        \n[33] rprojroot_2.0.4    fastmap_1.2.0      grid_4.4.0         colorspace_2.1-1  \n[37] cli_3.6.4          magrittr_2.0.3     utf8_1.2.4         withr_3.0.2       \n[41] rappdirs_0.3.3     bit64_4.5.2        timechange_0.3.0   rmarkdown_2.29    \n[45] tidytuesdayR_1.1.2 gitcreds_0.1.2     bit_4.5.0          ragg_1.3.3        \n[49] hms_1.1.3          evaluate_1.0.1     knitr_1.49         markdown_1.13     \n[53] rlang_1.1.6        gridtext_0.1.5     Rcpp_1.0.13-1      xml2_1.3.6        \n[57] renv_1.0.3         vroom_1.6.5        svglite_2.1.3      rstudioapi_0.17.1 \n[61] jsonlite_1.8.9     R6_2.5.1           systemfonts_1.1.0 \n```\n\n\n:::\n:::\n\n:::\n\n#### 9. GitHub Repository\n\n::: {.callout-tip collapse=\"true\"}\n##### Expand for GitHub Repo\n\nThe complete code for this analysis is available in [`tt_2025_41.qmd`](https://github.com/poncest/personal-website/blob/master/data_visualizations/TidyTuesday/2025/tt_2025_41.qmd).\n\nFor the full repository, [click here](https://github.com/poncest/personal-website/).\n:::\n\n#### 10. References\n\n::: {.callout-tip collapse=\"true\"}\n##### Expand for References\n\n1.  Data Sources:\n\n-   TidyTuesday 2025 Week 41: \\[World Food Day\\](https://github.com/rfordatascience/tidytuesday/blob/main/data/2025/2025-10-14\n:::\n\n#### 11. Custom Functions Documentation\n\n::: {.callout-note collapse=\"true\"}\n##### 📦 Custom Helper Functions\n\nThis analysis uses custom functions from my personal module library for efficiency and consistency across projects.\n\n**Functions Used:**\n\n- **`fonts.R`**: `setup_fonts()`, `get_font_families()` - Font management with showtext\n- **`social_icons.R`**: `create_social_caption()` - Generates formatted social media captions\n- **`image_utils.R`**: `save_plot()` - Consistent plot saving with naming conventions\n- **`base_theme.R`**: `create_base_theme()`, `extend_weekly_theme()`, `get_theme_colors()` - Custom ggplot2 themes\n\n**Why custom functions?**  \nThese utilities standardize theming, fonts, and output across all my data visualizations. The core analysis (data tidying and visualization logic) uses only standard tidyverse packages.\n\n**Source Code:**  \nView all custom functions → [GitHub: R/utils](https://github.com/poncest/personal-website/tree/master/R)\n\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}