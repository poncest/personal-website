{
  "hash": "0d508662236534613bf599d445c7056c",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Long Beach Animal Shelter: Stay Duration and Outcomes\"\nsubtitle: \"Animals with shorter shelter stays correlate with improved adoption outcomes\"\ndescription: \"Analysis of Long Beach Animal Shelter data reveals a striking correlation between length of stay and animal outcomes. This visualization explores how different animal types experience varying shelter durations and how outcome trends have evolved from 2017-2024, demonstrating a dramatic increase in adoption rates alongside decreased euthanasia. The data tells a success story of improving shelter practices while highlighting challenges for specific animal types.\"\nauthor: \"Steven Ponce\"\ndate: \"2025-02-27\" \ncategories: [\"TidyTuesday\", \"Data Visualization\", \"R Programming\", \"2025\"]\ntags: [\n \"tidytuesday\", \"animal shelter data\", \"ggplot2\", \"patchwork\", \"ggridges\", \"data storytelling\", \"animal welfare\", \"R visualization\", \"adoption trends\", \"length of stay analysis\", \"data science\", \"faceted visualization\"\n]\nimage: \"thumbnails/tt_2025_09.png\"\nformat:\n  html:\n    toc: true\n    toc-depth: 5\n    code-link: true\n    code-fold: true\n    code-tools: true\n    code-summary: \"Show code\"\n    self-contained: true\n    theme: \n      light: [flatly, assets/styling/custom_styles.scss]\n      dark: [darkly, assets/styling/custom_styles_dark.scss]\neditor_options: \n  chunk_output_type: inline\nexecute: \n  freeze: true                                                  \n  cache: true                                                   \n  error: false\n  message: false\n  warning: false\n  eval: true\nfilters:\n  - social-share\nshare:\n  permalink: \"https://stevenponce.netlify.app/data_visualizations/TidyTuesday/2025/tt_2025_09.html\"\n  description: \"Animal Shelter Analysis: Visualizing how shorter shelter stays at LongBeach correlate with improved adoption outcomes. See the dramatic 3x increase in #AdoptionRates from 2017-2024! #DataViz #TidyTuesday #RStats #AnimalWelfare #ShelterData\"\n\n  twitter: true\n  linkedin: true\n  email: true\n  facebook: false\n  reddit: false\n  stumble: false\n  tumblr: false\n  mastodon: true\n  bsky: true\n---\n\n\n\n![A two-panel visualization of Long Beach Animal Shelter data. The left panel shows density distributions of the length of stay by animal type, with birds and reptiles having the shortest stays (median 0-3 days) and rabbits the longest (median 16 days). The right panel displays outcome trends from 2017-2024, showing adoption rates more than tripled to 32.8% while euthanasia rates decreased from 21.3% to 16.2%. Colors indicate positive outcomes (green), neutral (yellow), and negative (red).](tt_2025_09.png){#fig-1}\n\n\n### <mark> **Steps to Create this Graphic** </mark>\n\n#### 1. Load Packages & Setup\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## 1. LOAD PACKAGES & SETUP ----\nsuppressPackageStartupMessages({\nif (!require(\"pacman\")) install.packages(\"pacman\")\npacman::p_load(\n   tidyverse,      # Easily Install and Load the 'Tidyverse'\n    ggtext,         # Improved Text Rendering Support for 'ggplot2'\n    showtext,       # Using Fonts More Easily in R Graphs\n    janitor,        # Simple Tools for Examining and Cleaning Dirty Data\n    skimr,          # Compact and Flexible Summaries of Data\n    scales,         # Scale Functions for Visualization\n    glue,           # Interpreted String Literals\n    here,           # A Simpler Way to Find Your Files\n    camcorder,      # Record Your Plot History \n    patchwork,      # The Composer of Plots # The Composer of Plots # The Composer of Plots\n    ggridges        # Ridgeline Plots in 'ggplot2'\n    )\n})\n\n### |- figure size ----\ngg_record(\n    dir    = here::here(\"temp_plots\"),\n    device = \"png\",\n    width  =  14,\n    height =  12,\n    units  = \"in\",\n    dpi    = 320\n)\n\n# Source utility functions\nsuppressMessages(source(here::here(\"R/utils/fonts.R\")))\nsource(here::here(\"R/utils/social_icons.R\"))\nsource(here::here(\"R/utils/image_utils.R\"))\nsource(here::here(\"R/themes/base_theme.R\"))\n```\n:::\n\n\n\n#### 2. Read in the Data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntt <- tidytuesdayR::tt_load(2025, week = 09) \n\nlongbeach <- tt$longbeach |> clean_names()\n\ntidytuesdayR::readme(tt)\nrm(tt)\n```\n:::\n\n\n\n#### 3. Examine the Data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(longbeach)\nskim(longbeach)\n```\n:::\n\n\n\n#### 4. Tidy Data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### |-  tidy data ----\nlongbeach_clean <- longbeach |>  \n    mutate(\n        # Time-based variables\n        outcome_year = year(outcome_date),\n        outcome_month = month(outcome_date),\n        outcome_season = case_when(\n            outcome_month %in% c(12, 1, 2) ~ \"Winter\",\n            outcome_month %in% c(3, 4, 5) ~ \"Spring\",\n            outcome_month %in% c(6, 7, 8) ~ \"Summer\",\n            outcome_month %in% c(9, 10, 11) ~ \"Fall\",\n            TRUE ~ NA_character_  \n        ),\n        # Duration calculations\n        days_in_shelter = as.numeric(difftime(outcome_date, intake_date, units = \"days\")),\n        age_at_outcome = if_else(\n            !is.na(dob), \n            as.numeric(difftime(outcome_date, dob, units = \"days\")) / 365.25,\n            NA_real_\n        )\n    )\n\n# P1. Days in Shelter by Animal Type ----\n\n# Filter data for the visualization with clear criteria\nshelter_stay <- longbeach_clean |>\n    filter(\n        !is.na(days_in_shelter), \n        days_in_shelter >= 0, \n        days_in_shelter <= 365,\n        animal_type %in% c(\"dog\", \"cat\", \"rabbit\", \"bird\", \"reptile\")\n    ) |> \n    mutate(animal_type = str_to_title(animal_type))\n\n# Calculate summary statistics with proper grouping\nmedian_stays <- shelter_stay |>\n    group_by(animal_type) |>\n    summarize(\n        median_stay = median(days_in_shelter, na.rm = TRUE),\n        max_density = 0.02,  \n        .groups = 'drop'  \n    )\n\n# Join and transform in a clear sequence\nshelter_stay <- shelter_stay |>\n    left_join(\n        median_stays |> select(animal_type, median_stay), \n        by = \"animal_type\"\n    ) |>\n    mutate(\n        animal_type = fct_reorder(animal_type, median_stay, .desc = TRUE)\n    )\n\n# Ensure consistent factor levels across dataframes\nmedian_stays <- median_stays |>\n    mutate(\n        animal_type = factor(animal_type, levels = levels(shelter_stay$animal_type))\n    )\n\n# P2. Outcome Trends by Type ----\noutcome_by_year <- longbeach_clean |>\n    filter(!is.na(outcome_year), !is.na(outcome_type)) |>\n    count(outcome_year, outcome_type) |>\n    group_by(outcome_year) |>\n    mutate(pct = n / sum(n) * 100) |>\n    ungroup() |>\n    # Keep only main outcome types of interest\n    filter(outcome_type %in% c(\"adoption\", \"euthanasia\", \"return to owner\", \"transfer\", \"died\")) |>\n    mutate(\n        # Categorize outcomes\n        outcome_category = case_when(\n            outcome_type %in% c(\"adoption\", \"return to owner\") ~ \"Positive\",\n            outcome_type %in% c(\"euthanasia\", \"died\") ~ \"Negative\",\n            TRUE ~ \"Neutral\"\n        ),\n        outcome_type = str_to_title(outcome_type),\n        # Create category factor with explicit ordering\n        outcome_category = factor(\n            outcome_category, \n            levels = c(\"Positive\", \"Neutral\", \"Negative\")\n        ),\n        # Create descriptive facet labels\n        facet_label = paste0(outcome_type, \" (\", outcome_category, \")\"),\n        # Create ordered factor for outcome types\n        outcome_type = factor(\n            outcome_type, \n            levels = c(\"Adoption\", \"Return To Owner\", \"Transfer\", \"Died\", \"Euthanasia\"),\n            ordered = TRUE\n        )\n    ) |> \n    filter(!is.na(facet_label)) |> \n    # Create ordered faceting variable\n    mutate(\n        # Prefix with numeric category for sorting\n        facet_order = paste0(\n            as.numeric(outcome_category), \"_\", \n            outcome_type, \" (\", outcome_category, \")\"\n        ),\n        # Convert to factor with proper ordering\n        facet_order = factor(\n            facet_order, \n            levels = unique(facet_order[order(outcome_category, outcome_type)])\n        )\n    )\n\n# Extract first and last points for each outcome type for highlighting\nendpoints <- outcome_by_year |>\n    group_by(outcome_type) |>\n    slice(c(1, n())) |>  \n    ungroup()\n```\n:::\n\n\n\n#### 5. Visualization Parameters\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### |-  plot aesthetics ----\n# Color for P1\ncolors <- get_theme_colors(palette = c(\n    \"Rabbit\" = \"#FDCDAC\",  \n    \"Cat\" = \"#F4A582\",     \n    \"Dog\" = \"#D6604D\",     \n    \"Reptile\" = \"#2C7FB8\", \n    \"Bird\" = \"#7FCDBB\"      \n))\n\n# Colors for P2\ncolors2 <- get_theme_colors(palette = c(\n    \"Positive\" = alpha(\"#1A8754\", 0.9),  \n    \"Neutral\" = alpha(\"#FFC107\", 0.9),   \n    \"Negative\" = alpha(\"#DC3545\", 0.9)\n))\n\n### |-  titles and caption ----\ntitle_text <- str_glue(\"Long Beach Animal Shelter: Stay Duration and Outcomes\")\n\nsubtitle_text <- str_glue(\"Animals with shorter shelter stays correlate with improved adoption outcomes\")\n\n# Create caption\ncaption_text <- create_social_caption(\n    tt_year = 2025,\n    tt_week = 09,\n    source_text =  \"City of Long Beach Animal Care Services\" \n)\n\n### |-  fonts ----\nsetup_fonts()\nfonts <- get_font_families()\n\n### |-  plot theme ----\n\n# Start with base theme\nbase_theme <- create_base_theme(colors)\n\n# Add weekly-specific theme elements\nweekly_theme <- extend_weekly_theme(\n    base_theme,\n    theme(\n        # Text styling \n        plot.title = element_text(face = \"bold\", family = fonts$title, size = rel(1.14), margin = margin(b = 10)),\n        plot.subtitle = element_text(family = fonts$subtitle, color = colors$text, size = rel(0.78), margin = margin(b = 20)),\n        \n        # Axis elements\n        axis.title = element_text(color = colors$text, size = rel(0.8)),\n        axis.text = element_text(color = colors$text, size = rel(0.7)),\n        \n        # Grid elements\n        panel.grid.minor = element_blank(),\n        panel.grid.major = element_line(color = \"grey95\", linewidth = 0.1),\n        \n        # Legend elements\n        legend.position = \"plot\",\n        legend.title = element_text(family = fonts$text, size = rel(0.8)),\n        legend.text = element_text(family = fonts$text, size = rel(0.7)),\n        \n        # Plot margins \n        plot.margin = margin(t = 10, r = 10, b = 10, l = 10),\n    )\n)\n\n# Set theme\ntheme_set(weekly_theme)\n```\n:::\n\n\n\n#### 6. Plot\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### |-  Plot  ----\n# P1. Days in Shelter by Animal Type ----\np1 <- ggplot(shelter_stay, aes(x = days_in_shelter, y = animal_type, fill = animal_type)) +\n    # Geoms\n    geom_density_ridges(\n        alpha = 0.8, \n        scale = 1.5,\n        rel_min_height = 0.01,\n        bandwidth = 2.5,\n        quantile_lines = TRUE,\n        quantiles = 2  # median\n    ) +\n    geom_point(\n        data = median_stays,\n        aes(x = median_stay, y = animal_type),\n        shape = 21,\n        fill = \"white\",\n        color = \"black\",\n        size = 4,        \n        stroke = 1.5     \n    ) +\n    geom_label(        \n        data = median_stays,\n        aes(x = median_stay, y = animal_type, \n            label = paste0(\"Median: \", round(median_stay, 1), \" days\")),\n        hjust = -0.1,\n        vjust = 0.5,\n        size = 3.5,      # Slightly larger\n        fontface = \"bold\",\n        fill = alpha(\"white\", 0.7),\n        label.padding = unit(0.2, \"lines\"),\n        label.r = unit(0.15, \"lines\")\n    ) +\n    # Scales\n    scale_x_continuous(\n        limits = c(-10, 100),\n        breaks = seq(0, 100, by = 20),\n        minor_breaks = seq(0, 100, by = 10),\n        expand = c(0, 0)\n    ) +\n    scale_y_discrete(expand = c(0, 0.25)) +\n    scale_fill_manual(values = colors$palette) +\n    coord_cartesian(clip = 'off') +\n    # Labs\n    labs(\n        title = \"Length of Stay in Shelter by Animal Type\",\n        subtitle = str_wrap(\"Distribution of days between intake and outcome (ordered by median stay duration)\", width = 60),\n        x = \"Days in Shelter\",\n        y = NULL,\n    ) +\n    # Theme\n    theme(\n        panel.grid.major = element_line(color = \"gray\", linewidth = 0.1),\n        axis.text.y = element_text(face = \"bold\")\n    ) \n\n# P2. Outcome Trends by Type ----\np2 <- ggplot(outcome_by_year, aes(x = outcome_year, y = pct, color = outcome_category)) +\n    # Geoms\n    geom_line(size = 1.5) + \n    geom_point(size = 2.5) +  \n    geom_point(data = endpoints, size = 5, shape = 21, fill = \"white\", stroke = 2) +\n    geom_text(\n        data = endpoints,\n        aes(label = sprintf(\"%.1f%%\", pct)),\n        hjust = ifelse(endpoints$outcome_year == min(endpoints$outcome_year), -0.3, 1.3),\n        vjust = -1.5,\n        size = 3.5,  # Larger text\n        fontface = \"bold\",\n        show.legend = FALSE\n    ) +\n    geom_text(\n        data = tibble(\n            outcome_year = 2021.6,\n            pct = 15,\n            facet_order = unique(outcome_by_year$facet_order)[1] # Only first panel\n        ),\n        label = \"Adoptions more than tripled\\nwhile euthanasia decreased\",\n        size = 3,\n        fontface = \"italic\",\n        color = \"gray30\",\n        hjust = 0\n    ) +\n    # Scales\n    scale_x_continuous(breaks = c(2017, 2021, 2024), expand = expansion(mult = c(0.1, 0.1))) +\n    scale_y_continuous(\n        limits = c(0, 45),\n        breaks = seq(0, 40, by = 20),\n        labels = function(x) paste0(x, \"%\"),\n        minor_breaks = NULL\n    ) +\n    scale_color_manual(values = colors2$palette) +\n    coord_cartesian(clip = 'off') +\n    # Labs\n    labs(\n        title = \"Outcome Trends by Type (2017-2024)\",\n        subtitle = str_wrap(\"Positive outcomes have increased while negative outcomes have decreased\", width = 60),\n        x = \"Year\",\n        y = \"Percentage of Animals (%)\",\n    ) +\n    # Facets\n    facet_wrap(~ facet_order, scales = \"fixed\", ncol = 1, drop = TRUE, \n               labeller = labeller(facet_order = function(x) gsub(\"^\\\\d+_\", \"\", x))) +\n    # Theme\n    theme(\n        strip.text = element_text(face = \"bold\", family = fonts$text, size = rel(0.8)),\n        strip.background = element_rect(fill = \"gray95\", color = NA),\n        panel.grid.major.y = element_line(color = \"gray\", linewidth = 0.1),\n        panel.spacing = unit(1.5, \"lines\")\n    ) \n\n# Combined Plot -----\ncombined_plot <- (p1 | plot_spacer() | p2) +\n    plot_layout(widths = c(1, 0.02, 1))   \n\ncombined_plot <- combined_plot +\n    plot_annotation(\n        title = title_text,\n        subtitle = subtitle_text,\n        caption = caption_text,\n        theme = theme(\n            plot.title = element_text( \n                size = rel(2.2),\n                family = fonts$title,\n                face = \"bold\",\n                color = colors$title,\n                lineheight = 1.1,\n                margin = margin(t = 5, b = 5)\n            ),\n            plot.subtitle = element_text(\n                size = rel(1),  \n                family = fonts$subtitle,\n                color = colors$subtitle,\n                lineheight = 1.2,\n                margin = margin(t = 5, b = 10)\n            ),\n            plot.caption = element_markdown(\n                size   = rel(0.75),\n                family = fonts$caption,\n                color  = colors$caption,\n                hjust  = 0.5,\n                margin = margin(t = 10)\n            ),\n            plot.margin = margin(t = 20, r = 10, b = 20, l = 10),\n        ))\n```\n:::\n\n\n\n#### 7. Save\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### |-  plot image ----  \nsave_plot_patchwork(\n  plot = combined_plot, \n  type = \"tidytuesday\", \n  year = 2025, \n  week = 9, \n  width = 12,\n  height = 10\n)\n```\n:::\n\n\n\n#### 8. Session Info\n\n::: {.callout-tip collapse=\"true\"}\n##### Expand for Session Info\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\nR version 4.4.1 (2024-06-14 ucrt)\nPlatform: x86_64-w64-mingw32/x64\nRunning under: Windows 11 x64 (build 22631)\n\nMatrix products: default\n\n\nlocale:\n[1] LC_COLLATE=English_United States.utf8 \n[2] LC_CTYPE=English_United States.utf8   \n[3] LC_MONETARY=English_United States.utf8\n[4] LC_NUMERIC=C                          \n[5] LC_TIME=English_United States.utf8    \n\ntime zone: America/New_York\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices datasets  utils     methods   base     \n\nother attached packages:\n [1] ggridges_0.5.6  patchwork_1.3.0 camcorder_0.1.0 here_1.0.1     \n [5] glue_1.8.0      scales_1.3.0    skimr_2.1.5     janitor_2.2.0  \n [9] showtext_0.9-7  showtextdb_3.0  sysfonts_0.8.9  ggtext_0.1.2   \n[13] lubridate_1.9.3 forcats_1.0.0   stringr_1.5.1   dplyr_1.1.4    \n[17] purrr_1.0.2     readr_2.1.5     tidyr_1.3.1     tibble_3.2.1   \n[21] ggplot2_3.5.1   tidyverse_2.0.0 pacman_0.5.1   \n\nloaded via a namespace (and not attached):\n [1] tidyselect_1.2.1   farver_2.1.2       fastmap_1.2.0      gh_1.4.1          \n [5] digest_0.6.37      timechange_0.3.0   lifecycle_1.0.4    rsvg_2.6.1        \n [9] magrittr_2.0.3     compiler_4.4.0     rlang_1.1.4        tools_4.4.0       \n[13] utf8_1.2.4         yaml_2.3.10        knitr_1.49         htmlwidgets_1.6.4 \n[17] bit_4.5.0          curl_6.0.0         xml2_1.3.6         repr_1.1.7        \n[21] tidytuesdayR_1.1.2 withr_3.0.2        grid_4.4.0         fansi_1.0.6       \n[25] colorspace_2.1-1   gitcreds_0.1.2     cli_3.6.3          rmarkdown_2.29    \n[29] crayon_1.5.3       generics_0.1.3     rstudioapi_0.17.1  tzdb_0.4.0        \n[33] commonmark_1.9.2   parallel_4.4.0     ggplotify_0.1.2    base64enc_0.1-3   \n[37] vctrs_0.6.5        yulab.utils_0.1.8  jsonlite_1.8.9     gridGraphics_0.5-1\n[41] hms_1.1.3          bit64_4.5.2        systemfonts_1.1.0  magick_2.8.5      \n[45] gifski_1.32.0-1    codetools_0.2-20   stringi_1.8.4      gtable_0.3.6      \n[49] munsell_0.5.1      pillar_1.9.0       rappdirs_0.3.3     htmltools_0.5.8.1 \n[53] R6_2.5.1           httr2_1.0.6        rprojroot_2.0.4    vroom_1.6.5       \n[57] evaluate_1.0.1     markdown_1.13      gridtext_0.1.5     snakecase_0.11.1  \n[61] renv_1.0.3         Rcpp_1.0.13-1      svglite_2.1.3      xfun_0.49         \n[65] fs_1.6.5           pkgconfig_2.0.3   \n```\n\n\n:::\n:::\n\n\n:::\n\n#### 9. GitHub Repository\n\n::: {.callout-tip collapse=\"true\"}\n##### Expand for GitHub Repo\n\nThe complete code for this analysis is available in [`tt_2025_09.qmd`](https://github.com/poncest/personal-website/blob/master/data_visualizations/TidyTuesday/2025/tt_2025_09.qmd).\n\nFor the full repository, [click here](https://github.com/poncest/personal-website/).\n:::\n\n\n#### 10. References\n::: {.callout-tip collapse=\"true\"}\n##### Expand for References\n\n1. Data Sources:\n\n   - TidyTuesday 2025 Week 09]: [Long Beach Animal Shelter](https://github.com/rfordatascience/tidytuesday/blob/main/data/2025/2025-03-04)\n\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}