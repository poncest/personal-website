{
  "hash": "273233d6ed0738b091e73097e11ecbca",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Speed Distribution by Pokémon Type\"\nsubtitle: \"Electric and Flying types tend to be fastest, while Rock types are slowest\"\ndescription: \"This visualization explores the speed distribution across different Pokémon types using data from the {pokemon} R package. The beeswarm plot reveals distinct patterns in how speed stats vary between types, with Electric and Flying Pokémon showcasing the highest average speeds while Rock types tend to be the slowest. Diamond markers indicate mean values for each type, providing insight into competitive gameplay advantages.\"\nauthor: \"Steven Ponce\"\ndate: \"2025-03-23\" \ncategories: [\"TidyTuesday\", \"Data Visualization\", \"R Programming\", \"2025\"]\ntags: [\n\"pokemon\", \"ggplot2\", \"ggbeeswarm\", \"MetBrewer\", \"data-visualization\", \"gaming-data\", \"speed-stats\", \"type-analysis\", \"beeswarm-plot\"\n]\nimage: \"thumbnails/tt_2025_13.png\"\nformat:\n  html:\n    toc: true\n    toc-depth: 5\n    code-link: true\n    code-fold: true\n    code-tools: true\n    code-summary: \"Show code\"\n    self-contained: true\n    theme: \n      light: [flatly, assets/styling/custom_styles.scss]\n      dark: [darkly, assets/styling/custom_styles_dark.scss]\neditor_options: \n  chunk_output_type: inline\nexecute: \n  freeze: true                                                  \n  cache: true                                                   \n  error: false\n  message: false\n  warning: false\n  eval: true\nfilters:\n  - social-share\nshare:\n  permalink: \"https://stevenponce.netlify.app/data_visualizations/TidyTuesday/2025/tt_2025_13.html\"\n  description: \"Exploring Pokémon speed stats across different types: which are fastest and which are slowest? A #TidyTuesday data visualization showing why Electric and Flying types have the competitive edge\"\n\n  twitter: true\n  linkedin: true\n  email: true\n  facebook: false\n  reddit: false\n  stumble: false\n  tumblr: false\n  mastodon: true\n  bsky: true\n---\n\n\n\n![A beeswarm plot showing speed distribution across Pokémon types. Types are ordered by average speed, with Flying and Electric types at the bottom (fastest) and Rock near the top (slowest). Purple diamonds mark the mean speed for each type, and a vertical dashed line at 100 indicates the \"Fast\" threshold. Most Pokémon fall between 50-100 speed, with outliers reaching up to 150.](tt_2025_13.png){#fig-1}\n\n\n### <mark> **Steps to Create this Graphic** </mark>\n\n#### 1. Load Packages & Setup\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## 1. LOAD PACKAGES & SETUP ----\nsuppressPackageStartupMessages({\nif (!require(\"pacman\")) install.packages(\"pacman\")\npacman::p_load(\n    tidyverse,      # Easily Install and Load the 'Tidyverse'\n    ggtext,         # Improved Text Rendering Support for 'ggplot2'\n    showtext,       # Using Fonts More Easily in R Graphs\n    janitor,        # Simple Tools for Examining and Cleaning Dirty Data\n    skimr,          # Compact and Flexible Summaries of Data\n    scales,         # Scale Functions for Visualization\n    glue,           # Interpreted String Literals\n    here,           # A Simpler Way to Find Your Files\n    ggbeeswarm,     # Categorical Scatter (Violin Point) Plots \n    camcorder       # Record Your Plot History \n    )\n})\n\n### |- figure size ----\ngg_record(\n    dir    = here::here(\"temp_plots\"),\n    device = \"png\",\n    width  =  7,\n    height =  10,\n    units  = \"in\",\n    dpi    = 320\n)\n\n# Source utility functions\nsuppressMessages(source(here::here(\"R/utils/fonts.R\")))\nsource(here::here(\"R/utils/social_icons.R\"))\nsource(here::here(\"R/utils/image_utils.R\"))\nsource(here::here(\"R/themes/base_theme.R\"))\n```\n:::\n\n\n\n#### 2. Read in the Data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntt <- tidytuesdayR::tt_load(2025, week = 13) \n\npokemon_raw <- tt$pokemon_df |> clean_names()\n\ntidytuesdayR::readme(tt)\nrm(tt)\n```\n:::\n\n\n\n#### 3. Examine the Data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(pokemon_raw)\nskim(pokemon_raw)\n```\n:::\n\n\n\n#### 4. Tidy Data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### |-  tidy data ----\npokemon_clean <- pokemon_raw |>\n    select(pokemon, type_1, speed, generation_id, color_1) |>\n    filter(!is.na(speed), !is.na(type_1)) |>\n    mutate(generation = as.factor(generation_id))\n\n# Summarize speed stats \nordered_types <- pokemon_clean |>\n    group_by(type_1) |>\n    summarize(\n        across(\n            speed,\n            list(\n                mean = ~mean(.x, na.rm = TRUE),\n                median = ~median(.x, na.rm = TRUE),\n                min = ~min(.x, na.rm = TRUE),\n                max = ~max(.x, na.rm = TRUE)\n            ),\n            .names = \"{fn}_{.col}\"\n        ),\n        count = n(),\n        .groups = \"drop\"\n    ) |>\n    arrange(desc(mean_speed)) |>\n    pull(type_1)\n\n# plot data\npokemon_clean <- pokemon_clean |>\n    mutate(type_1 = factor(type_1, levels = ordered_types))\n```\n:::\n\n\n\n#### 5. Visualization Parameters\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### |-  plot aesthetics ----\ncolors <- get_theme_colors(\n    palette = c(rep(\"#7570B3\", 18))\n)\n\n### |-  titles and caption ----\ntitle_text <- str_glue(\"Speed Distribution by Pokémon Type\")\nsubtitle_text <- str_glue(\"Electric and Flying types tend to be fastest, while Rock types are slowest\")\n\n# Create caption\ncaption_text <- create_social_caption(\n    tt_year = 2025,\n    tt_week = 13,\n    source_text =  \"{ pokemon R package }\" \n)\n\n### |-  fonts ----\nsetup_fonts()\nfonts <- get_font_families()\n\n### |-  plot theme ----\n\n# Start with base theme\nbase_theme <- create_base_theme(colors)\n\n# Add weekly-specific theme elements\nweekly_theme <- extend_weekly_theme(\n    base_theme,\n    theme(\n        # Text styling \n        plot.title = element_text(face = \"bold\", family = fonts$title, size = rel(1.14), margin = margin(b = 10)),\n        plot.subtitle = element_text(family = fonts$subtitle, color = colors$text, size = rel(0.78), margin = margin(b = 20)),\n        \n        # Axis elements\n        axis.title = element_text(color = colors$text, face = \"bold\", size = rel(0.8)),\n        axis.text = element_text(color = colors$text, size = rel(0.7)),\n        \n        # Grid elements\n        panel.grid.minor = element_line(color = \"gray80\", linewidth = 0.05),\n        panel.grid.major = element_line(color = \"gray80\", linewidth = 0.02),\n        \n        # Legend elements\n        legend.position = \"plot\",\n        legend.direction = \"horizontal\",\n        legend.title = element_text(family = fonts$text, size = rel(0.8), face = \"bold\"),\n        legend.text = element_text(family = fonts$text, size = rel(0.7)),\n        \n        # two-row legend\n        legend.box.spacing = unit(0.4, \"cm\"),\n        legend.key.width = unit(1.5, \"cm\"),\n        legend.spacing.x = unit(0.2, \"cm\"),\n \n        legend.box = \"horizontal\",\n        legend.box.just = \"left\",\n        \n        # Plot margins \n        plot.margin = margin(t = 20, r = 20, b = 20, l = 20),\n    )\n)\n\n# Set theme\ntheme_set(weekly_theme)\n```\n:::\n\n\n\n#### 6. Plot\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### |-  Plot  ----\np <- pokemon_clean |>\n    ggplot(aes(x = type_1, y = speed, color = type_1)) +\n    # Geoms\n    geom_beeswarm(cex = 1, size = 1.2, alpha = 0.75, shape = 21, na.rm = TRUE) +\n    stat_summary(   # mean indicator\n        fun = mean, \n        geom = \"point\", \n        shape = 18, \n        size = 3, \n        color =  alpha(colors$palette[1], 0.9),\n    ) +\n    geom_hline(\n        yintercept = 100, \n        linetype = \"dashed\",\n        color = \"darkgray\", \n        ) +\n    # Annotate\n    annotate(\n        \"text\", x = length(ordered_types), y = 102, \n        label = \"Fast (Speed ≥ 100)\", hjust = 0, vjust = -2,\n        size = 3, color = \"dimgray\"\n        ) +\n    annotate(\n        \"point\",  \n        x = \"steel\", \n        y = 140, \n        shape = 18, \n        size = 4, \n        color = alpha(colors$palette[1], 0.9)\n    ) +\n    annotate(\n        \"text\",\n        x = \"steel\", y = 141, label = \"  = Mean\",\n        color =  alpha(colors$palette[1], 0.9),\n        size = 4.2,\n        angle = 0,\n        hjust = 0,\n        fontface = \"bold\"\n    ) +\n    \n    # Scales\n    scale_color_manual(values = colors$palette) +\n    coord_flip() +\n    # labs\n    labs(\n        title = title_text,\n        subtitle = subtitle_text,\n        caption = caption_text,\n        x = NULL,\n        y = \"Base Speed Stat\"\n    ) +\n    # Theme\n    theme(\n        plot.title = element_text(\n            size = rel(2),\n            family = fonts$title,\n            face = \"bold\",\n            color = colors$title,\n            lineheight = 1.1,\n            margin = margin(t = 5, b = 5)\n        ),\n        plot.subtitle = element_text(\n            size = rel(0.85),\n            family = fonts$subtitle,\n            color = alpha(colors$subtitle, 0.9),\n            lineheight = 1.2,\n            margin = margin(t = 5, b = 10)\n        ),\n        plot.caption = element_markdown(\n            size = rel(0.65),\n            family = fonts$caption,\n            color = colors$caption,\n            hjust = 0.5,\n            margin = margin(t = 10)\n        )\n    ) \n```\n:::\n\n\n\n#### 7. Save\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### |-  plot image ----  \nsave_plot_patchwork(\n  plot = p, \n  type = \"tidytuesday\", \n  year = 2025, \n  week = 13, \n  width = 7,\n  height = 10\n)\n```\n:::\n\n\n\n#### 8. Session Info\n\n::: {.callout-tip collapse=\"true\"}\n##### Expand for Session Info\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\nR version 4.4.1 (2024-06-14 ucrt)\nPlatform: x86_64-w64-mingw32/x64\nRunning under: Windows 11 x64 (build 22631)\n\nMatrix products: default\n\n\nlocale:\n[1] LC_COLLATE=English_United States.utf8 \n[2] LC_CTYPE=English_United States.utf8   \n[3] LC_MONETARY=English_United States.utf8\n[4] LC_NUMERIC=C                          \n[5] LC_TIME=English_United States.utf8    \n\ntime zone: America/New_York\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices datasets  utils     methods   base     \n\nother attached packages:\n [1] camcorder_0.1.0  ggbeeswarm_0.7.2 here_1.0.1       glue_1.8.0      \n [5] scales_1.3.0     skimr_2.1.5      janitor_2.2.0    showtext_0.9-7  \n [9] showtextdb_3.0   sysfonts_0.8.9   ggtext_0.1.2     lubridate_1.9.3 \n[13] forcats_1.0.0    stringr_1.5.1    dplyr_1.1.4      purrr_1.0.2     \n[17] readr_2.1.5      tidyr_1.3.1      tibble_3.2.1     ggplot2_3.5.1   \n[21] tidyverse_2.0.0  pacman_0.5.1    \n\nloaded via a namespace (and not attached):\n [1] tidyselect_1.2.1   vipor_0.4.7        farver_2.1.2       fastmap_1.2.0     \n [5] gh_1.4.1           digest_0.6.37      timechange_0.3.0   lifecycle_1.0.4   \n [9] rsvg_2.6.1         magrittr_2.0.3     compiler_4.4.0     rlang_1.1.4       \n[13] tools_4.4.0        utf8_1.2.4         yaml_2.3.10        knitr_1.49        \n[17] labeling_0.4.3     htmlwidgets_1.6.4  bit_4.5.0          curl_6.0.0        \n[21] xml2_1.3.6         repr_1.1.7         tidytuesdayR_1.1.2 withr_3.0.2       \n[25] grid_4.4.0         fansi_1.0.6        colorspace_2.1-1   gitcreds_0.1.2    \n[29] cli_3.6.3          rmarkdown_2.29     crayon_1.5.3       generics_0.1.3    \n[33] rstudioapi_0.17.1  tzdb_0.4.0         commonmark_1.9.2   parallel_4.4.0    \n[37] ggplotify_0.1.2    base64enc_0.1-3    vctrs_0.6.5        yulab.utils_0.1.8 \n[41] jsonlite_1.8.9     gridGraphics_0.5-1 hms_1.1.3          bit64_4.5.2       \n[45] beeswarm_0.4.0     systemfonts_1.1.0  magick_2.8.5       gifski_1.32.0-1   \n[49] codetools_0.2-20   stringi_1.8.4      gtable_0.3.6       munsell_0.5.1     \n[53] pillar_1.9.0       rappdirs_0.3.3     htmltools_0.5.8.1  R6_2.5.1          \n[57] httr2_1.0.6        rprojroot_2.0.4    vroom_1.6.5        evaluate_1.0.1    \n[61] markdown_1.13      gridtext_0.1.5     snakecase_0.11.1   renv_1.0.3        \n[65] Rcpp_1.0.13-1      svglite_2.1.3      xfun_0.49          fs_1.6.5          \n[69] pkgconfig_2.0.3   \n```\n\n\n:::\n:::\n\n\n:::\n\n#### 9. GitHub Repository\n\n::: {.callout-tip collapse=\"true\"}\n##### Expand for GitHub Repo\n\nThe complete code for this analysis is available in [`tt_2025_13.qmd`](https://github.com/poncest/personal-website/blob/master/data_visualizations/TidyTuesday/2025/tt_2025_13.qmd).\n\nFor the full repository, [click here](https://github.com/poncest/personal-website/).\n:::\n\n\n#### 10. References\n::: {.callout-tip collapse=\"true\"}\n##### Expand for References\n\n1. Data Sources:\n\n   - TidyTuesday 2025 Week 13: [Pokemon](https://github.com/rfordatascience/tidytuesday/blob/main/data/2025/2025-04-01)\n\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}