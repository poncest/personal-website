{
  "hash": "7d1fd46b6ff6b55c40db22ae0f5742e5",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Chess Dreams and Breakthroughs: A Global Perspective\"\nsubtitle: \"Individual excellence emerges from active engagement within strong chess ecosystems\"\ndescription: \"Analysis of FIDE chess ratings data revealing patterns in player activity, breakthrough performances, and global chess ecosystems. Explores how individual excellence emerges from engagement within strong national chess federations.\"\nauthor: \"Steven Ponce\"\ndate: \"2025-09-21\" \ncategories: [\"TidyTuesday\", \"Data Visualization\", \"R Programming\", \"2025\"]\ntags: [\n  \"chess\",\n  \"FIDE\",\n  \"sports analytics\",\n  \"rating systems\",\n  \"data cleaning\",\n  \"ggplot2\",\n  \"patchwork\",\n  \"professional visualization\",\n  \"international federations\",\n  \"player performance\",\n  \"statistical analysis\"\n]\nimage: \"thumbnails/tt_2025_38.png\"\nformat:\n  html:\n    toc: true\n    toc-depth: 5\n    code-link: true\n    code-fold: true\n    code-tools: true\n    code-summary: \"Show code\"\n    self-contained: true\n    theme: \n      light: [flatly, assets/styling/custom_styles.scss]\n      dark: [darkly, assets/styling/custom_styles_dark.scss]\neditor_options: \n  chunk_output_type: inline\nexecute: \n  freeze: true                                    \n  cache: true                                       \n  error: false\n  message: false\n  warning: false\n  eval: true\n---\n\n![Multi-panel visualization showing chess player activity and achievements from FIDE data (August-September 2025). The top panel displays four histograms of game activity levels, showing that most players are casual (1-3 games) while fewer are highly active (16+ games). Bottom left shows top 20 rating improvements, led by Plzak, David, with +362 points, with a median of 255.5. Bottom right shows countries with the most titled players, led by Germany (1,004), Spain (702), and Russia (469), with a median of 391 players.](tt_2025_38.png){#fig-1}\n\n### <mark> **Steps to Create this Graphic** </mark>\n\n#### 1. Load Packages & Setup\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: load\n#| warning: false\n#| message: false\n#| results: \"hide\"\n\n## 1. LOAD PACKAGES & SETUP ----\nsuppressPackageStartupMessages({\nif (!require(\"pacman\")) install.packages(\"pacman\")\npacman::p_load(\n  tidyverse,   # Easily Install and Load the 'Tidyverse'\n  ggtext,      # Improved Text Rendering Support for 'ggplot2'\n  showtext,    # Using Fonts More Easily in R Graphs\n  janitor,     # Simple Tools for Examining and Cleaning Dirty Data\n  scales,      # Scale Functions for Visualization\n  glue,        # Interpreted String Literals,\n  patchwork    # The Composer of Plots\n  )})\n\n### |- figure size ----\ncamcorder::gg_record(\n  dir    = here::here(\"temp_plots\"),\n  device = \"png\",\n  width  = 12,\n  height = 12,\n  units  = \"in\",\n  dpi    = 300\n)\n\n# Source utility functions\nsuppressMessages(source(here::here(\"R/utils/fonts.R\")))\nsource(here::here(\"R/utils/social_icons.R\"))\nsource(here::here(\"R/utils/image_utils.R\"))\nsource(here::here(\"R/themes/base_theme.R\"))\n```\n````\n:::\n\n\n#### 2. Read in the Data\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: read\n#| include: true\n#| eval: true\n#| warning: false\n\ntt <- tidytuesdayR::tt_load(2025, week = 38)\n\nfide_ratings_august <- tt$fide_ratings_august |> clean_names()\nfide_ratings_september <- tt$fide_ratings_september |> clean_names()\n\ntidytuesdayR::readme(tt)\nrm(tt)\n```\n````\n:::\n\n\n#### 3. Examine the Data\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: examine\n#| include: true\n#| eval: true\n#| results: 'hide'\n#| warning: false\n\nglimpse(fide_ratings_august)\nglimpse(fide_ratings_september)\n```\n````\n:::\n\n\n#### 4. Tidy Data\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: tidy\n#| warning: false\n\n# helper function\nclean_fide_data <- function(data, min_rating = 1000, max_rating = 3500) {\n  data |>\n    group_by(id) |>\n    slice_max(rating, n = 1, with_ties = FALSE) |>\n    ungroup() |>\n    filter(!is.na(rating), rating >= min_rating, rating <= max_rating, !is.na(id)) |>\n    mutate(\n      name = str_squish(name),\n      fed = str_squish(fed),\n      sex = factor(sex, levels = c(\"M\", \"F\")),\n      title = na_if(str_squish(title), \"\"),\n      wtitle = na_if(str_squish(wtitle), \"\"),\n      rating = as.numeric(rating),\n      games = as.numeric(games),\n      k = as.numeric(k),\n      bday = as.numeric(bday)\n    ) |>\n    filter(!is.na(name), !is.na(fed))\n}\n\n# Data prep\nfide_august_clean <- clean_fide_data(fide_ratings_august)\nfide_september_clean <- clean_fide_data(fide_ratings_september)\n\n# Rating comparison\ncur_year <- 2025\n\nrating_comparison <- fide_august_clean |>\n  select(id, name, fed, sex, title, wtitle, bday,\n    rating_aug = rating, games_aug = games\n  ) |>\n  inner_join(\n    fide_september_clean |>\n      select(id, rating_sep = rating, games_sep = games),\n    by = \"id\"\n  ) |>\n  mutate(\n    rating_change = rating_sep - rating_aug,\n    total_games = games_aug + games_sep,\n    has_title = !is.na(title) | !is.na(wtitle),\n    current_age = ifelse(!is.na(bday), cur_year - bday, NA_real_)\n  ) |>\n  filter(total_games > 0)\n\n# Activity (cap at 30 to keep facets readable)\nactivity_data <- fide_september_clean |>\n  filter(games > 0, games <= 30) |>\n  mutate(activity_level = case_when(\n    games <= 3 ~ \"Low (1–3)\",\n    games <= 7 ~ \"Moderate (4–7)\",\n    games <= 15 ~ \"High (8–15)\",\n    TRUE ~ \"Very High (16+)\"\n  )) |>\n  mutate(\n    activity_level = factor(activity_level,\n      levels = c(\n        \"Low (1–3)\",\n        \"Moderate (4–7)\",\n        \"High (8–15)\",\n        \"Very High (16+)\"\n      )\n    )\n  )\n\n# Federations (titled players)\nfederation_data <- fide_september_clean |>\n  filter(!is.na(title) | !is.na(wtitle)) |>\n  count(fed, name = \"titled_players\") |>\n  arrange(desc(titled_players)) |>\n  slice_head(n = 15)\n```\n````\n:::\n\n\n#### 5. Visualization Parameters\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: params\n#| include: true\n#| warning: false\n\n### |-  plot aesthetics ----\n# Get basic theme colors\ncolors <- get_theme_colors(\n  palette = list(\n    ink = \"#243245\",\n    text = \"#435369\",\n    grid = \"#E4E9F0\",\n    edge = \"#C9D3E1\",\n    bg = \"#F7FAFC\",\n    panel = \"#FFFFFF\",\n    p1 = \"#00A0E3\", \n    p2 = \"#2B3FB7\",\n    p3 = \"#0B1F2A\"\n  )\n)\n\n### |- titles and caption ----\ntitle_text <- str_glue(\"Chess Dreams and Breakthroughs: A Global Perspective\")\n\nsubtitle_text <- str_glue(\n  \"Individual excellence emerges from active engagement within strong chess ecosystems\"\n)\n\ncaption_text <- create_social_caption(\n  tt_year = 2025,\n  tt_week = 38,\n  source_text = \"Data: FIDE Rating Lists (Aug–Sep 2025)\"\n)\n\n### |-  fonts ----\nsetup_fonts()\nfonts <- get_font_families()\n\n### |-  plot theme ----\n# Start with base theme\nbase_theme <- create_base_theme(colors)\n\n# Add weekly-specific theme elements\nweekly_theme <- extend_weekly_theme(\n  base_theme,\n  theme(\n    # Text styling\n    plot.title = element_text(face = \"bold\", family = fonts$title, size = rel(1.2), color = colors$title, margin = margin(b = 10)),\n    plot.subtitle = element_text(family = fonts$subtitle, lineheight = 1.2, color = colors$subtitle, size = rel(0.78), margin = margin(b = 20)),\n\n    # Axis elements\n    axis.line = element_blank(),\n    axis.ticks = element_blank(),\n\n    # Grid elements\n    panel.grid.major = element_line(color = \"gray90\", linetype = \"solid\", linewidth = 0.3),\n    # panel.grid.major.y = element_blank(),\n    panel.grid.minor.x = element_blank(),\n    panel.grid.minor.y = element_blank(),\n\n    # Axis elements\n    axis.text = element_text(color = colors$text, size = rel(0.7)),\n    axis.title.x = element_text(color = colors$text, face = \"bold\", size = rel(0.8), margin = margin(t = 15)),\n    axis.title.y = element_text(color = colors$text, face = \"bold\", size = rel(0.8), margin = margin(r = 10)),\n\n    # Legend elements\n    legend.position = \"plot\",\n    legend.title = element_text(family = fonts$tsubtitle, color = colors$text, size = rel(0.8), face = \"bold\"),\n    legend.text = element_text(family = fonts$tsubtitle, color = colors$text, size = rel(0.7)),\n    legend.margin = margin(t = 15),\n\n    # Plot margin\n    plot.margin = margin(t = 15, r = 15, b = 15, l = 15),\n  )\n)\n\n# Set theme\ntheme_set(weekly_theme)\n\n# helpers for medians & formatting\nnum_lab <- label_number(accuracy = 1, big.mark = \",\")\nadd_median <- function(y, label) {\n  list(\n    geom_hline(yintercept = y, linetype = \"22\", linewidth = 0.5, color = \"gray50\"),\n    annotate(\n      \"label\",\n      x = Inf, y = y, hjust = 1, vjust = -0.2,\n      label = label, size = 3, label.size = 0,\n      family = fonts$text, fill = colors$palette$panel, color = colors$palette$text\n    )\n  )\n}\n```\n````\n:::\n\n\n#### 6. Plot\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: plot\n#| warning: false\n\n### |-  P1: Breakthroughs — top 20 improvers ----\nbreak_df <- rating_comparison |>\n  filter(rating_change > 0) |>\n  arrange(desc(rating_change)) |>\n  slice_head(n = 20) |>\n  mutate(name_short = str_trunc(name, 28))\n\nmed_improve <- median(break_df$rating_change)\n\np1 <-\n  ggplot(break_df, aes(x = reorder(name_short, rating_change), y = rating_change)) +\n  # geoms\n  geom_col(fill = colors$palette$p2, width = 0.7, alpha = 0.95) +\n  geom_text(aes(label = paste0(\"+\", rating_change)),\n    hjust = -0.15, family = fonts$text, color = colors$palette$text, size = 3.2\n  ) +\n  add_median(med_improve, paste0(\"Median \", med_improve)) +\n  # scales\n  scale_x_discrete() +\n  scale_y_continuous(labels = num_lab, expand = expansion(mult = c(0, 0.10))) +\n  coord_flip(clip = \"off\") +\n  labs(\n    title = \"Chess Rating Breakthroughs\",\n    subtitle = \"Top 20 rating gains, August to September 2025\",\n    x = NULL, y = \"Rating improvement (Elo)\"\n  ) +\n  # theme\n  theme(\n    panel.grid.major.y = element_blank(),\n    plot.margin = margin(10, 20, 10, 10)\n  )\n\n### |-  P2: Activity — faceted histograms ----\np2 <-\n  ggplot(activity_data, aes(games)) +\n  # geoms\n  geom_histogram(bins = 18, fill = colors$palette$p1, color = \"white\", linewidth = 0.25, alpha = 0.95) +\n  # scales\n  scale_x_continuous(breaks = pretty_breaks(4)) +\n  scale_y_continuous(labels = num_lab) +\n  # labs\n  labs(\n    title = \"Player Activity Patterns\",\n    subtitle = \"Distribution of games played in September 2025 by activity level\",\n    x = \"Games played (September)\", y = \"Number of players\"\n  ) +\n  # facets\n  facet_wrap(~activity_level, ncol = 4, scales = \"free_y\") +\n  # theme\n  theme(\n    strip.text = element_text(face = \"bold\", color = colors$palette$ink),\n    strip.background = element_rect(fill = colors$palette$bg, color = colors$palette$edge),\n    panel.grid.major.x = element_line(color = colors$palette$grid),\n    plot.margin = margin(10, 10, 5, 10)\n  )\n\n### |-  P3:  Federations — titled players (top 15) ----\nmed_titled <- median(federation_data$titled_players)\n\np3 <-\n  ggplot(federation_data, aes(x = reorder(fed, titled_players), y = titled_players)) +\n  # geoms\n  geom_col(fill = alpha(colors$palette$p3, 0.92), width = 0.7) +\n  geom_text(aes(label = num_lab(titled_players)),\n    hjust = -0.15,\n    family = fonts$text, color = colors$palette$text, size = 3.2\n  ) +\n  add_median(med_titled, paste0(\"Median \", med_titled)) +\n  # scales\n  scale_x_discrete() +\n  scale_y_continuous(labels = num_lab, expand = expansion(mult = c(0, 0.10))) +\n  coord_flip(clip = \"off\") +\n  # labs\n  labs(\n    title = \"Chess Federation Powerhouses\",\n    subtitle = \"Countries with the most titled players\",\n    x = NULL, y = \"Number of titled players\"\n  ) +\n  # theme\n  theme(\n    legend.position = \"none\",\n    panel.grid.major.y = element_blank(),\n    plot.margin = margin(10, 20, 10, 10)\n  )\n\n### |-  Combined plots ----\ncombined_plots <- p2 / (p1 | p3) +\n  plot_layout(heights = c(1.1, 1.3))\n\ncombined_plots <- combined_plots +\n  plot_annotation(\n    title = title_text,\n    subtitle = subtitle_text,\n    caption = caption_text,\n    theme = theme(\n      plot.title = element_text(\n        size = rel(1.8),\n        family = fonts$title,\n        face = \"bold\",\n        color = colors$title,\n        lineheight = 1.1,\n        margin = margin(t = 5, b = 5)\n      ),\n      plot.subtitle = element_markdown(\n        size = rel(0.95),\n        family = fonts$subtitle,\n        color = alpha(colors$subtitle, 0.9),\n        lineheight = 1.2,\n        margin = margin(t = 5, b = 10)\n      ),\n      plot.caption = element_markdown(\n        size = rel(0.65),\n        family = fonts$caption,\n        color = colors$caption,\n        hjust = 0.5,\n        margin = margin(t = 10)\n      )\n    )\n  )\n```\n````\n:::\n\n\n#### 7. Save\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: save\n#| warning: false\n\n### |-  plot image ----  \nsave_plot_patchwork(\n  plot = combined_plots, \n  type = \"tidytuesday\", \n  year = 2025, \n  week = 38, \n  width  = 12,\n  height = 12\n  )\n```\n````\n:::\n\n\n#### 8. Session Info\n\n::: {.callout-tip collapse=\"true\"}\n##### Expand for Session Info\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\nR version 4.4.1 (2024-06-14 ucrt)\nPlatform: x86_64-w64-mingw32/x64\nRunning under: Windows 11 x64 (build 22631)\n\nMatrix products: default\n\n\nlocale:\n[1] LC_COLLATE=English_United States.utf8 \n[2] LC_CTYPE=English_United States.utf8   \n[3] LC_MONETARY=English_United States.utf8\n[4] LC_NUMERIC=C                          \n[5] LC_TIME=English_United States.utf8    \n\ntime zone: America/New_York\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices datasets  utils     methods   base     \n\nother attached packages:\n [1] here_1.0.1      patchwork_1.3.0 glue_1.8.0      scales_1.3.0   \n [5] janitor_2.2.0   showtext_0.9-7  showtextdb_3.0  sysfonts_0.8.9 \n [9] ggtext_0.1.2    lubridate_1.9.3 forcats_1.0.0   stringr_1.5.1  \n[13] dplyr_1.1.4     purrr_1.0.2     readr_2.1.5     tidyr_1.3.1    \n[17] tibble_3.2.1    ggplot2_3.5.1   tidyverse_2.0.0 pacman_0.5.1   \n\nloaded via a namespace (and not attached):\n [1] gtable_0.3.6       httr2_1.0.6        xfun_0.49          htmlwidgets_1.6.4 \n [5] gh_1.4.1           tzdb_0.5.0         yulab.utils_0.1.8  vctrs_0.6.5       \n [9] tools_4.4.0        generics_0.1.3     parallel_4.4.0     curl_6.0.0        \n[13] gifski_1.32.0-1    fansi_1.0.6        pkgconfig_2.0.3    ggplotify_0.1.2   \n[17] lifecycle_1.0.4    compiler_4.4.0     farver_2.1.2       munsell_0.5.1     \n[21] codetools_0.2-20   snakecase_0.11.1   htmltools_0.5.8.1  yaml_2.3.10       \n[25] crayon_1.5.3       pillar_1.9.0       camcorder_0.1.0    magick_2.8.5      \n[29] commonmark_1.9.2   tidyselect_1.2.1   digest_0.6.37      stringi_1.8.4     \n[33] labeling_0.4.3     rsvg_2.6.1         rprojroot_2.0.4    fastmap_1.2.0     \n[37] grid_4.4.0         colorspace_2.1-1   cli_3.6.4          magrittr_2.0.3    \n[41] utf8_1.2.4         withr_3.0.2        rappdirs_0.3.3     bit64_4.5.2       \n[45] timechange_0.3.0   rmarkdown_2.29     tidytuesdayR_1.1.2 gitcreds_0.1.2    \n[49] bit_4.5.0          hms_1.1.3          evaluate_1.0.1     knitr_1.49        \n[53] markdown_1.13      gridGraphics_0.5-1 rlang_1.1.6        gridtext_0.1.5    \n[57] Rcpp_1.0.13-1      xml2_1.3.6         renv_1.0.3         vroom_1.6.5       \n[61] svglite_2.1.3      rstudioapi_0.17.1  jsonlite_1.8.9     R6_2.5.1          \n[65] fs_1.6.5           systemfonts_1.1.0 \n```\n\n\n:::\n:::\n\n:::\n\n#### 9. GitHub Repository\n\n::: {.callout-tip collapse=\"true\"}\n##### Expand for GitHub Repo\n\nThe complete code for this analysis is available in [`tt_2025_38.qmd`](https://github.com/poncest/personal-website/blob/master/data_visualizations/TidyTuesday/2025/tt_2025_38.qmd).\n\nFor the full repository, [click here](https://github.com/poncest/personal-website/).\n:::\n\n#### 10. References\n\n::: {.callout-tip collapse=\"true\"}\n##### Expand for References\n\n1.  Data Sources:\n\n-   TidyTuesday 2025 Week 38: \\[FIDE Chess Player Ratings\\](https://github.com/rfordatascience/tidytuesday/blob/main/data/2025/2025-09-23\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}