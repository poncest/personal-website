{
  "hash": "dadfee6a563686aaf5f532a4659324a8",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Evolution of Business Priorities in Amazon's Annual Reports\"\nsubtitle: \"Tracking the relative importance of business areas from 2005 to 2023\"\ndescription: \"Analyzing Amazon's transformation from e-commerce to tech giant through their annual reports. This visualization tracks how terminology shifts reflect changing business priorities, with AWS and cloud services becoming increasingly dominant while traditional retail language declined.\"\nauthor: \"Steven Ponce\"\ndate: \"2025-03-23\" \ncategories: [\"TidyTuesday\", \"Data Visualization\", \"R Programming\", \"2025\"]\ntags: [\n\"Amazon\", \"Annual Reports\", \"Text Analysis\", \"Natural Language Processing\", \"Business Evolution\", \"AWS\", \"Cloud Computing\", \"Corporate Language\", \"Financial Reporting\", \"Corporate Strategy\", \"Text Mining\", \"ggplot2\", \"Time Series Visualization\", \"Business Intelligence\"\n]\nimage: \"thumbnails/tt_2025_12.png\"\nformat:\n  html:\n    toc: true\n    toc-depth: 5\n    code-link: true\n    code-fold: true\n    code-tools: true\n    code-summary: \"Show code\"\n    self-contained: true\n    theme: \n      light: [flatly, assets/styling/custom_styles.scss]\n      dark: [darkly, assets/styling/custom_styles_dark.scss]\neditor_options: \n  chunk_output_type: inline\nexecute: \n  freeze: true                                                  \n  cache: true                                                   \n  error: false\n  message: false\n  warning: false\n  eval: true\nfilters:\n  - social-share\nshare:\n  permalink: \"https://stevenponce.netlify.app/data_visualizations/TidyTuesday/2025/tt_2025_12.html\"\n  description: \"Discover how Amazon's business priorities evolved from 2005-2023 through text analysis of their annual reports. See the dramatic rise of AWS, consistent financial focus, and the impact of key milestones like the Whole Foods acquisition and COVID-19 pandemic.\"\n\n  twitter: true\n  linkedin: true\n  email: true\n  facebook: false\n  reddit: false\n  stumble: false\n  tumblr: false\n  mastodon: true\n  bsky: true\n---\n\n\n\n![Line chart showing the evolution of business priorities in Amazon's annual reports from 2005 to 2023. Five key categories are tracked: Financial Performance (highest line, around 7,000 mentions), Cloud Services (shows dramatic growth after 2015), Customer Experience, Operations & Logistics, and Innovation & Technology (lowest line). The chart includes vertical dashed lines marking key events: AWS Launch (2006), AWS Revenue Surpasses $1B (2010), AWS Becomes Profitable (2015), Whole Foods Acquisition (2017), and COVID-19 Pandemic (2020).](tt_2025_12.png){#fig-1}\n\n\n### <mark> **Steps to Create this Graphic** </mark>\n\n#### 1. Load Packages & Setup\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## 1. LOAD PACKAGES & SETUP ----\nsuppressPackageStartupMessages({\nif (!require(\"pacman\")) install.packages(\"pacman\")\npacman::p_load(\n       tidyverse,      # Easily Install and Load the 'Tidyverse'\n    ggtext,         # Improved Text Rendering Support for 'ggplot2'\n    showtext,       # Using Fonts More Easily in R Graphs\n    janitor,        # Simple Tools for Examining and Cleaning Dirty Data\n    skimr,          # Compact and Flexible Summaries of Data\n    scales,         # Scale Functions for Visualization\n    glue,           # Interpreted String Literals\n    here,           # A Simpler Way to Find Your Files\n    camcorder,      # Record Your Plot History \n    tidytext,       # Text Mining using 'dplyr', 'ggplot2', and Other Tidy Tools\n    patchwork       # The Composer of Plots\n    )\n})\n\n### |- figure size ----\ngg_record(\n    dir    = here::here(\"temp_plots\"),\n    device = \"png\",\n    width  =  10,\n    height =  8,\n    units  = \"in\",\n    dpi    = 320\n)\n\n# Source utility functions\nsuppressMessages(source(here::here(\"R/utils/fonts.R\")))\nsource(here::here(\"R/utils/social_icons.R\"))\nsource(here::here(\"R/utils/image_utils.R\"))\nsource(here::here(\"R/themes/base_theme.R\"))\n```\n:::\n\n\n\n#### 2. Read in the Data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntt <- tidytuesdayR::tt_load(2025, week = 12) \n\nreport_words_clean <- tt$report_words_clean |> clean_names()\n\ntidytuesdayR::readme(tt)\nrm(tt)\n```\n:::\n\n\n\n#### 3. Examine the Data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(report_words_clean)\nskim(report_words_clean)\n```\n:::\n\n\n\n#### 4. Tidy Data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### |-  tidy data ----\ntext_df <- report_words_clean |>\n    group_by(year, word) |>\n    summarize(\n        count = n(), \n        .groups = \"drop\"\n    )\n\n# Define word categories with targeted keywords\nfocus_categories <- list(\n    innovation = c(\"innovation\", \"innovative\", \"invent\", \"patent\", \"technology\", \"research\", \n                   \"development\", \"ai\", \"machine\", \"learning\", \"automation\"),\n    customer = c(\"customer\", \"consumer\", \"satisfaction\", \"service\", \"experience\", \"value\", \n                 \"delivery\", \"prime\", \"shopping\", \"retail\", \"personalization\"),\n    finance = c(\"revenue\", \"profit\", \"margin\", \"earning\", \"cost\", \"expense\", \"financial\", \n                \"billion\", \"million\", \"investment\", \"growth\", \"cash\", \"flow\", \"capital\"),\n    cloud = c(\"aws\", \"cloud\", \"server\", \"compute\", \"storage\", \"database\", \"web\", \"services\",\n              \"infrastructure\", \"platform\", \"hosting\", \"data\"),\n    operations = c(\"operations\", \"logistics\", \"fulfillment\", \"warehouse\", \"distribution\", \n                   \"supply\", \"chain\", \"inventory\", \"shipping\", \"transportation\", \"facility\")\n)\n\n# Calculate category indices   \nfocus_indices <- map_dfr(names(focus_categories), function(category) {\n    text_df |>\n        filter(word %in% focus_categories[[category]]) |>\n        group_by(year) |>\n        summarize(\n            word_count = sum(count),\n            total_words = n(),\n            index = word_count / total_words * 100,\n            category = category,\n            .groups = \"drop\"\n        )\n})\n    \n# Cleaner category label mapping\ncategory_labels <- c(\n    \"innovation\" = \"Innovation & Technology\",\n    \"customer\" = \"Customer Experience\",\n    \"finance\" = \"Financial Performance\",\n    \"cloud\" = \"Cloud Services (AWS)\",\n    \"operations\" = \"Operations & Logistics\"\n)\n    \n# Key events/milestones for annotation\nkey_events <- tibble(\n    year = c(2006, 2010, 2015, 2017, 2020),\n    event = c(\"AWS\\nLaunched\", \"AWS Revenue\\nSurpasses $1B\", \"AWS Becomes\\nProfitable\", \"Whole Foods\\nAcquisition\", \"COVID-19\\nPandemic\"),\n    index = c(5500, 3500, 5000, 4500, 4800),\n    category = NA\n)\n```\n:::\n\n\n\n#### 5. Visualization Parameters\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncolors <- get_theme_colors(\n    palette = c(\n        \"innovation\" = \"#E69F00\",\n        \"customer\" = \"#56B4E9\", \n        \"finance\" = \"#009E73\",\n        \"cloud\" = \"#0072B2\",\n        \"operations\" = \"#D55E00\"\n    )\n)\n\n### |-  titles and caption ----\ntitle_text <- str_glue(\"Evolution of Business Priorities in Amazon's Annual Reports\")\nsubtitle_text <- str_glue(\"Tracking the relative importance of business areas from 2005 to 2023\")\n\n# Create caption\ncaption_text <- create_social_caption(\n    tt_year = 2025,\n    tt_week = 12,\n    source_text =  \"Amazon's Annual Reports\" \n)\n\n### |-  fonts ----\nsetup_fonts()\nfonts <- get_font_families()\n\n### |-  plot theme ----\n\n# Start with base theme\nbase_theme <- create_base_theme(colors)\n\n# Add weekly-specific theme elements\nweekly_theme <- extend_weekly_theme(\n    base_theme,\n    theme(\n        # Text styling \n        plot.title = element_text(face = \"bold\", family = fonts$title, size = rel(1.14), margin = margin(b = 10)),\n        plot.subtitle = element_text(family = fonts$subtitle, color = colors$text, size = rel(0.78), margin = margin(b = 20)),\n        \n        # Axis elements\n        axis.title = element_text(color = colors$text, face = \"bold\", size = rel(0.8)),\n        axis.text = element_text(color = colors$text, size = rel(0.7)),\n        \n        # Grid elements\n        panel.grid.minor = element_line(color = \"gray80\", linewidth = 0.05),\n        panel.grid.major = element_line(color = \"gray80\", linewidth = 0.02),\n        \n        # Legend elements\n        legend.position = \"bottom\",\n        legend.direction = \"horizontal\",\n        legend.title = element_text(family = fonts$text, size = rel(0.8), face = \"bold\"),\n        legend.text = element_text(family = fonts$text, size = rel(0.7)),\n        \n        # two-row legend\n        legend.box.spacing = unit(0.4, \"cm\"),\n        legend.key.width = unit(1.5, \"cm\"),\n        legend.spacing.x = unit(0.2, \"cm\"),\n \n        legend.box = \"horizontal\",\n        legend.box.just = \"left\",\n        \n        # Plot margins \n        plot.margin = margin(t = 20, r = 20, b = 20, l = 20),\n    )\n)\n\n# Set theme\ntheme_set(weekly_theme)\n```\n:::\n\n\n\n#### 6. Plot\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### |-  Plot  ----\np <- ggplot() +\n    # Geoms\n    geom_line(\n        data = focus_indices, \n        aes(x = year, y = index, color = category),\n        linewidth = 1.2\n    ) +\n    geom_point(\n        data = focus_indices, \n        aes(x = year, y = index, color = category),\n        size = 3\n    ) +\n    geom_vline(\n        data = key_events,\n        aes(xintercept = year),\n        linetype = \"dashed\",\n        color = \"gray50\",\n        alpha = 0.7\n    ) +\n    geom_text(\n        data = key_events,\n        aes(x = year, y = index, label = event),\n        hjust = -0.1,\n        vjust = 0,\n        size = 3,\n        fontface = \"bold\",\n        color = \"gray30\"\n    ) +\n    # Annotate\n    annotate(\n        \"text\",\n        x = max(focus_indices$year) + 0.5,\n        y = filter(focus_indices, year == max(year) & category == \"cloud\")$index,\n        label = \"Cloud services\\ndominate recent\\nreporting\",\n        hjust = 0,\n        size = 3.5,\n        fontface = \"italic\",\n        color = colors$palette[4]\n    ) +\n    annotate(\n        \"text\",\n        x = max(focus_indices$year) + 0.5,\n        y = filter(focus_indices, year == max(year) & category == \"finance\")$index,\n        label = \"Financial focus\\nremains strong\",\n        hjust = 0,\n        size = 3.5,\n        fontface = \"italic\",\n        color = colors$palette[3]\n    ) +\n    # Scales\n    scale_color_manual(\n        values = colors$palette,\n        labels = category_labels,\n        name = NULL\n    ) +\n    scale_x_continuous(\n        breaks = seq(min(focus_indices$year), max(focus_indices$year), by = 2),\n        expand = expansion(mult = c(0.02, 0.15)) \n    ) +\n    scale_y_continuous(\n        labels = function(x) format(x, big.mark = \",\"),\n        expand = expansion(mult = c(0.02, 0.02))\n    ) +\n    # Labs\n    labs(\n        title = title_text,\n        subtitle = subtitle_text,\n        caption = caption_text,\n        x = \"Year\",\n        y = \"Focus Index (mentions per 100,000 words)\"\n    ) +\n    # Legend\n    guides(\n        color = guide_legend(\n            nrow = 2,\n            byrow = TRUE,\n            override.aes = list(size = 3)\n        )\n    ) +\n    # Theme\n    theme(\n        plot.title = element_text(\n            size = rel(2),\n            family = fonts$title,\n            face = \"bold\",\n            color = colors$title,\n            lineheight = 1.1,\n            margin = margin(t = 5, b = 5)\n        ),\n        plot.subtitle = element_text(\n            size = rel(1),\n            family = fonts$subtitle,\n            color = alpha(colors$subtitle, 0.9),\n            lineheight = 1.2,\n            margin = margin(t = 5, b = 30)\n        ),\n        plot.caption = element_markdown(\n            size   = rel(0.65),\n            family = fonts$caption,\n            color  = colors$caption,\n            hjust  = 0.5,\n            margin = margin(t = 10)\n        )\n    ) \n```\n:::\n\n\n\n#### 7. Save\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### |-  plot image ----  \nsave_plot_patchwork(\n  plot = p, \n  type = \"tidytuesday\", \n  year = 2025, \n  week = 12, \n  width = 10,\n  height = 8\n)\n```\n:::\n\n\n\n#### 8. Session Info\n\n::: {.callout-tip collapse=\"true\"}\n##### Expand for Session Info\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\nR version 4.4.1 (2024-06-14 ucrt)\nPlatform: x86_64-w64-mingw32/x64\nRunning under: Windows 11 x64 (build 22631)\n\nMatrix products: default\n\n\nlocale:\n[1] LC_COLLATE=English_United States.utf8 \n[2] LC_CTYPE=English_United States.utf8   \n[3] LC_MONETARY=English_United States.utf8\n[4] LC_NUMERIC=C                          \n[5] LC_TIME=English_United States.utf8    \n\ntime zone: America/New_York\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices datasets  utils     methods   base     \n\nother attached packages:\n [1] patchwork_1.3.0 tidytext_0.4.2  camcorder_0.1.0 here_1.0.1     \n [5] glue_1.8.0      scales_1.3.0    skimr_2.1.5     janitor_2.2.0  \n [9] showtext_0.9-7  showtextdb_3.0  sysfonts_0.8.9  ggtext_0.1.2   \n[13] lubridate_1.9.3 forcats_1.0.0   stringr_1.5.1   dplyr_1.1.4    \n[17] purrr_1.0.2     readr_2.1.5     tidyr_1.3.1     tibble_3.2.1   \n[21] ggplot2_3.5.1   tidyverse_2.0.0 pacman_0.5.1   \n\nloaded via a namespace (and not attached):\n [1] tidyselect_1.2.1   farver_2.1.2       fastmap_1.2.0      gh_1.4.1          \n [5] janeaustenr_1.0.0  digest_0.6.37      timechange_0.3.0   lifecycle_1.0.4   \n [9] rsvg_2.6.1         tokenizers_0.3.0   magrittr_2.0.3     compiler_4.4.0    \n[13] rlang_1.1.4        tools_4.4.0        utf8_1.2.4         yaml_2.3.10       \n[17] knitr_1.49         labeling_0.4.3     htmlwidgets_1.6.4  bit_4.5.0         \n[21] curl_6.0.0         xml2_1.3.6         repr_1.1.7         tidytuesdayR_1.1.2\n[25] withr_3.0.2        grid_4.4.0         fansi_1.0.6        colorspace_2.1-1  \n[29] gitcreds_0.1.2     cli_3.6.3          rmarkdown_2.29     crayon_1.5.3      \n[33] generics_0.1.3     rstudioapi_0.17.1  tzdb_0.4.0         commonmark_1.9.2  \n[37] parallel_4.4.0     ggplotify_0.1.2    yulab.utils_0.1.8  base64enc_0.1-3   \n[41] vctrs_0.6.5        Matrix_1.7-0       jsonlite_1.8.9     gridGraphics_0.5-1\n[45] hms_1.1.3          bit64_4.5.2        systemfonts_1.1.0  magick_2.8.5      \n[49] gifski_1.32.0-1    codetools_0.2-20   stringi_1.8.4      gtable_0.3.6      \n[53] munsell_0.5.1      pillar_1.9.0       rappdirs_0.3.3     htmltools_0.5.8.1 \n[57] R6_2.5.1           httr2_1.0.6        rprojroot_2.0.4    vroom_1.6.5       \n[61] evaluate_1.0.1     lattice_0.22-6     markdown_1.13      SnowballC_0.7.1   \n[65] gridtext_0.1.5     snakecase_0.11.1   renv_1.0.3         Rcpp_1.0.13-1     \n[69] svglite_2.1.3      xfun_0.49          fs_1.6.5           pkgconfig_2.0.3   \n```\n\n\n:::\n:::\n\n\n:::\n\n#### 9. GitHub Repository\n\n::: {.callout-tip collapse=\"true\"}\n##### Expand for GitHub Repo\n\nThe complete code for this analysis is available in [`tt_2025_12.qmd`](https://github.com/poncest/personal-website/blob/master/data_visualizations/TidyTuesday/2025/tt_2025_12.qmd).\n\nFor the full repository, [click here](https://github.com/poncest/personal-website/).\n:::\n\n\n#### 10. References\n::: {.callout-tip collapse=\"true\"}\n##### Expand for References\n\n1. Data Sources:\n\n   - TidyTuesday 2025 Week 12: [Text Data From Amazon's Annual Reports](https://github.com/rfordatascience/tidytuesday/blob/main/data/2025/2025-03-25)\n\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}