{
  "hash": "655845eac88f3ecccb25c768ab05ad5e",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"The Geography of Inequality and the Redistribution Gap\"\nsubtitle: \"The distribution of post-tax inequality is sharply divided by geography, with the highest levels concentrated in Latin America\"\ndescription: \"An analysis of income inequality before and after taxes across countries and regions using TidyTuesday data. This visualization reveals how geographic location and policy choices determine inequality\"\nauthor: \"Steven Ponce\"\ndate: \"2025-08-04\" \ncategories: [\"TidyTuesday\", \"Data Visualization\", \"R Programming\", \"2025\"]\ntags: [\n \"income-inequality\",\n  \"redistribution\",\n  \"ridge-plots\", \n  \"latin-america\",\n  \"policy-analysis\",\n  \"ggridges\",\n  \"patchwork\"\n]\nimage: \"thumbnails/tt_2025_31.png\"\nformat:\n  html:\n    toc: true\n    toc-depth: 5\n    code-link: true\n    code-fold: true\n    code-tools: true\n    code-summary: \"Show code\"\n    self-contained: true\n    theme: \n      light: [flatly, assets/styling/custom_styles.scss]\n      dark: [darkly, assets/styling/custom_styles_dark.scss]\neditor_options: \n  chunk_output_type: inline\nexecute: \n  freeze: true                                    \n  cache: true                                       \n  error: false\n  message: false\n  warning: false\n  eval: true\n---\n\n![Two-panel chart showing income inequality patterns. The left panel displays density curves of post-tax inequality by world region, with Latin America (highlighted in dark purple) exhibiting the highest levels of inequality. Right panel shows a horizontal bar chart of 15 countries with minimal redistribution effects, ordered from highest to lowest. The Dominican Republic (0.52 pre-tax Gini, 0.008 redistribution) and Brazil (0.59 pre-tax Gini, 0.079 redistribution) are highlighted in dark colors, demonstrating that Latin American countries have high market inequality but minimal government redistribution, compared to countries like Norway (0.39 pre-tax Gini, 0.152 redistribution)](tt_2025_31.png){#fig-1}\n\n### <mark> **Steps to Create this Graphic** </mark>\n\n#### 1. Load Packages & Setup\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: load\n#| warning: false\n#| message: false\n#| results: \"hide\"\n\n## 1. LOAD PACKAGES & SETUP ----\nsuppressPackageStartupMessages({\nif (!require(\"pacman\")) install.packages(\"pacman\")\npacman::p_load(\n        tidyverse,  # Easily Install and Load the 'Tidyverse'\n    ggtext,     # Improved Text Rendering Support for 'ggplot2'\n    showtext,   # Using Fonts More Easily in R Graphs\n    janitor,    # Simple Tools for Examining and Cleaning Dirty Data\n    scales,     # Scale Functions for Visualization\n    glue,       # Interpreted String Literals\n    ggridges,   # Ridgeline Plots in 'ggplot2'\n    patchwork   # The Composer of Plots\n  )})\n\n### |- figure size ----\ncamcorder::gg_record(\n  dir    = here::here(\"temp_plots\"),\n  device = \"png\",\n  width  = 12,\n  height = 12,\n  units  = \"in\",\n  dpi    = 320\n)\n\n# Source utility functions\nsuppressMessages(source(here::here(\"R/utils/fonts.R\")))\nsource(here::here(\"R/utils/social_icons.R\"))\nsource(here::here(\"R/utils/image_utils.R\"))\nsource(here::here(\"R/themes/base_theme.R\"))\n```\n````\n:::\n\n\n#### 2. Read in the Data\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: read\n#| include: true\n#| eval: true\n#| warning: false\n\ntt <- tidytuesdayR::tt_load(2025, week = 31)\n\nincome_inequality_processed <- tt$income_inequality_processed |> clean_names()\nincome_inequality_raw <- tt$income_inequality_raw |> clean_names()\n\ntidytuesdayR::readme(tt)\nrm(tt)\n```\n````\n:::\n\n\n#### 3. Examine the Data\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: examine\n#| include: true\n#| eval: true\n#| results: 'hide'\n#| warning: false\n\nglimpse(income_inequality_processed)\nglimpse(income_inequality_raw)\n```\n````\n:::\n\n\n#### 4. Tidy Data\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: tidy\n#| warning: false\n\n# Helper Function\nclassify_region <- function(entity) {\n    case_when(\n        entity %in% c(\n            \"Brazil\", \"Chile\", \"Colombia\", \"Dominican Republic\",\n            \"Guatemala\", \"Mexico\", \"Panama\", \"Paraguay\", \"Peru\", \"Uruguay\"\n        ) ~ \"Latin America\",\n        entity %in% c(\"United States\", \"Canada\") ~ \"North America\",\n        entity %in% c(\n            \"Germany\", \"France\", \"United Kingdom\", \"Sweden\", \"Denmark\",\n            \"Norway\", \"Finland\", \"Netherlands\", \"Belgium\", \"Austria\",\n            \"Switzerland\", \"Italy\", \"Spain\", \"Portugal\", \"Ireland\",\n            \"Luxembourg\", \"Greece\", \"Cyprus\", \"Malta\"\n        ) ~ \"Western Europe\",\n        entity %in% c(\n            \"Poland\", \"Czechia\", \"Slovakia\", \"Hungary\", \"Slovenia\",\n            \"Estonia\", \"Lithuania\", \"Croatia\", \"Bulgaria\",\n            \"Romania\", \"Serbia\"\n        ) ~ \"Eastern Europe\",\n        entity %in% c(\"Japan\", \"South Korea\", \"Singapore\", \"Taiwan\", \"Hong Kong\") ~ \"East Asia\",\n        entity %in% c(\"Australia\", \"New Zealand\") ~ \"Oceania\",\n        entity %in% c(\"Israel\", \"Turkey\") ~ \"Middle East\",\n        entity %in% c(\"South Africa\") ~ \"Africa\",\n        TRUE ~ \"Other\"\n    )\n}\n\n# Base data with regional classification\nbase_data <- income_inequality_processed |>\n    mutate(\n        region = classify_region(entity),\n        redistribution_effect = gini_mi_eq - gini_dhi_eq\n    )\n\n# PANEL 1: Ridge plot data\nridge_data <- base_data |>\n    filter(!is.na(gini_dhi_eq), region != \"Other\") |>\n    group_by(region) |>\n    filter(n() >= 10) |>\n    ungroup() |>\n    mutate(region = fct_reorder(region, gini_dhi_eq, .fun = median, .desc = FALSE))\n\n# PANEL 2: Redistribution data\nredistribution_data <- base_data |>\n    filter(!is.na(redistribution_effect), !is.na(gini_mi_eq), !is.na(gini_dhi_eq)) |>\n    group_by(entity, region) |>\n    summarise(\n        avg_redistribution = mean(redistribution_effect, na.rm = TRUE),\n        avg_pretax_gini = mean(gini_mi_eq, na.rm = TRUE),\n        avg_posttax_gini = mean(gini_dhi_eq, na.rm = TRUE),\n        observations = n(),\n        .groups = \"drop\"\n    ) |>\n    # Get the 15 countries with minimal redistribution\n    slice_min(avg_redistribution, n = 15) |> \n    mutate(\n        is_latin = region == \"Latin America\",\n        bar_color = ifelse(is_latin, \"highlight\", \"main\"),\n        text_color = ifelse(is_latin, \"highlight\", \"main\"),\n        country_label = paste0(entity, \"\\n(\", round(avg_pretax_gini, 2), \")\"),\n        entity = fct_reorder(entity, avg_redistribution, .desc = FALSE)\n    )\n```\n````\n:::\n\n\n#### 5. Visualization Parameters\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: params\n#| include: true\n#| warning: false\n\n### |-  plot aesthetics ----\ncolors <- get_theme_colors(\n    palette = c(\n        \"highlight\" = \"#2b1731\",   \n        \"main\" = \"#9995be\",        \n        \"dark_line\" = \"#2b1731\",   \n        \"text_dark\" = \"#4D4D4D\",   \n        \"text_medium\" = \"#7F7F7F\",  \n        \"text_light\" = \"#B2B2B2\",  \n        \"grid_line\" = \"#EAEAEA\"  \n    )\n)\n\n### |- titles and caption ----\ntitle_text <- str_glue(\"The Geography of Inequality and the Redistribution Gap\")\n\nsubtitle_text <- str_glue(\n    \"The distribution of post-tax inequality is sharply divided by geography, with the<br>\",\n    \"highest levels concentrated in <span style='color:\", colors$palette[\"highlight\"], \";'>**Latin America**</span>.\"\n)\n\ncaption_text <- create_social_caption(\n    tt_year = 2025,\n    tt_week = 31,\n    source_text =  \"Our World in Data\"\n)\n\n### |-  fonts ----\nsetup_fonts()\nfonts <- get_font_families()\n\n### |-  plot theme ----\n# Start with base theme\nbase_theme <- create_base_theme(colors)\n\n# Add weekly-specific theme elements\nweekly_theme <- extend_weekly_theme(\n    base_theme,\n    theme(\n        # Text styling\n        plot.title = element_text(face = \"bold\", family = fonts$title, size = rel(1.2), color  = colors$title, margin = margin(b = 10)),\n        plot.subtitle = element_markdown(family = fonts$subtitle, lineheight = 1.2, color = colors$subtitle, size = rel(0.78), margin = margin(b = 20)),\n        \n        # Axis elements\n        axis.line = element_blank(), \n        axis.ticks = element_blank(), \n        \n        # Grid elements\n        panel.grid.major.y = element_line(color = \"gray90\",linetype = \"solid\", linewidth = 0.3),\n        panel.grid.minor.y = element_blank(), \n        panel.grid.major.x = element_blank(), \n        panel.grid.minor.x = element_blank(), \n        \n        # Axis elements\n        axis.text = element_text(color = colors$text, size = rel(0.7)),\n        axis.title.x = element_text(color = colors$text, face = \"bold\", size = rel(0.8), margin = margin(t = 15)),\n        axis.title.y = element_text(color = colors$text, face = \"bold\", size = rel(0.8), margin = margin(r = 10)),\n        \n        # Legend elements\n        legend.position = \"plot\",\n        legend.title = element_text(family = fonts$tsubtitle, color = colors$text, size = rel(0.8), face = \"bold\"),\n        legend.text = element_text(family = fonts$tsubtitle, color = colors$text, size = rel(0.7)),\n        \n        # Plot margin\n        plot.margin = margin(t = 15, r = 15, b = 15, l = 15),\n    )\n)\n\n# Set theme\ntheme_set(weekly_theme)\n```\n````\n:::\n\n\n#### 6. Plot\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: plot\n#| warning: false\n\n# PANEL 1: Ridge plot\nridge_plot <- ridge_data |>\n    ggplot(aes(x = gini_dhi_eq, y = region)) +\n    # Geoms\n    geom_density_ridges(\n        aes(fill = ifelse(region == \"Latin America\", \"highlight\", \"main\")),\n        scale = 2.2,\n        alpha = 0.75,\n        bandwidth = 0.015,\n        rel_min_height = 0.01,\n        quantile_lines = TRUE,\n        quantiles = 2,\n        color = colors$palette[\"dark_line\"]\n    ) +\n    # Scales\n    scale_fill_manual(\n        values = colors$palette,\n        guide = \"none\"  \n    ) +\n    scale_x_continuous(\n        name = \"Post-tax Gini Coefficient\",\n        breaks = seq(0.15, 0.55, 0.05),\n        labels = number_format(accuracy = 0.01),\n        limits = c(0.15, 0.6),\n        expand = expansion(mult = c(0.02, 0.02))\n    ) +\n    scale_y_discrete(name = NULL, expand = expansion(mult = c(0.05, 0.15))) +\n    # Labs\n    labs(\n        title = \"A. The Geography of Inequality\",\n        subtitle = paste0(\n            \"The distribution of post-tax inequality is sharply divided by geography,<br>\",\n            \"with the highest levels concentrated in <span style='color:\", colors$palette[\"highlight\"], \";'>**Latin America**</span>.\"\n        )\n    ) \n\n# PANEL 2: Minimal Redistributors\nredistributors_plot <- redistribution_data |>\n    ggplot(aes(x = entity, y = avg_redistribution)) +\n    # Geoms\n    geom_col(aes(fill = bar_color), width = 0.7, alpha = 0.85) +\n    geom_text(\n        aes(label = round(avg_redistribution, 3), color = bar_color),\n        hjust = -0.1,\n        vjust = 0.5,\n        size = 3.2,\n        fontface = \"bold\"\n    ) +\n    # Scales\n    scale_y_continuous(\n        name = \"Redistribution Effect\\n(How Much Inequality Was Reduced)\",\n        breaks = seq(0, 0.16, 0.04),\n        labels = number_format(accuracy = 0.01),\n        limits = c(0, 0.2),\n        expand = expansion(mult = c(0, 0.02))\n    ) +\n    scale_x_discrete(\n        name = \"Countries ordered by redistribution effectiveness\\n(numbers show pre-tax inequality)\",\n        labels = redistribution_data$country_label,\n        expand = expansion(mult = c(0.02, 0.02))\n    ) +\n    scale_fill_manual(\n        values = colors$palette,\n        guide = \"none\"  \n    ) +\n    scale_color_manual(\n        values = colors$palette,\n        guide = \"none\"  \n    ) +\n    coord_flip() +\n    # Labs\n    labs(\n        title = \"B. The Global Redistribution Gap\",\n        subtitle = paste0(\n            \"Countries with minimal redistribution despite high pre-tax inequality.<br>\",\n            \"Countries like <span style='color:\", colors$palette[\"highlight\"], \";'>**Dominican Republic**</span> and \",\n            \"<span style='color:\", colors$palette[\"highlight\"], \";'>**Brazil**</span> highlight Latin America's pattern.\"\n        )\n    ) +\n    # Theme\n    theme(\n        # Remove all gridlines\n        panel.grid.major.y = element_blank(),\n        \n        # Remove x-axis text and ticks\n        axis.text.x = element_blank(),\n        axis.ticks.x = element_blank(),\n        \n        # Adjust y-axis text size for readability with pre-tax labels\n        axis.text.y = element_text(size = rel(0.95), lineheight = 0.9)\n    )\n\n### |-  combined plot ----\ncombined_plots <- ridge_plot | redistributors_plot\n\ncombined_plots <- combined_plots +\n    plot_annotation(\n        title = title_text,\n        subtitle = subtitle_text,\n        caption = caption_text,\n        theme = theme(\n            plot.title = element_text(\n                size = rel(1.8),\n                family = fonts$title,\n                face = \"bold\",\n                color = colors$title,\n                lineheight = 1.1,\n                hjust = 0.5,\n                margin = margin(t = 5, b = 5)\n            ),\n            plot.subtitle = element_markdown(\n                size = rel(1),\n                family = fonts$subtitle,\n                color = alpha(colors$subtitle, 0.9),\n                lineheight = 1.2,\n                hjust = 0.5,\n                margin = margin(t = 5, b = 10)\n            ),\n            plot.caption = element_markdown(\n                size = rel(0.7),\n                family = fonts$caption,\n                color = colors$caption,\n                hjust = 0.5,\n                margin = margin(t = 10)\n            )\n        )\n    )\n```\n````\n:::\n\n\n#### 7. Save\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: save\n#| warning: false\n\n### |-  plot image ----  \nsave_plot_patchwork(\n  plot = combined_plots, \n  type = \"tidytuesday\", \n  year = 2025, \n  week = 31, \n  width  = 12,\n  height = 12\n  )\n```\n````\n:::\n\n\n#### 8. Session Info\n\n::: {.callout-tip collapse=\"true\"}\n##### Expand for Session Info\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\nR version 4.4.1 (2024-06-14 ucrt)\nPlatform: x86_64-w64-mingw32/x64\nRunning under: Windows 11 x64 (build 22631)\n\nMatrix products: default\n\n\nlocale:\n[1] LC_COLLATE=English_United States.utf8 \n[2] LC_CTYPE=English_United States.utf8   \n[3] LC_MONETARY=English_United States.utf8\n[4] LC_NUMERIC=C                          \n[5] LC_TIME=English_United States.utf8    \n\ntime zone: America/New_York\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices datasets  utils     methods   base     \n\nother attached packages:\n [1] here_1.0.1      patchwork_1.3.0 ggridges_0.5.6  glue_1.8.0     \n [5] scales_1.3.0    janitor_2.2.0   showtext_0.9-7  showtextdb_3.0 \n [9] sysfonts_0.8.9  ggtext_0.1.2    lubridate_1.9.3 forcats_1.0.0  \n[13] stringr_1.5.1   dplyr_1.1.4     purrr_1.0.2     readr_2.1.5    \n[17] tidyr_1.3.1     tibble_3.2.1    ggplot2_3.5.1   tidyverse_2.0.0\n[21] pacman_0.5.1   \n\nloaded via a namespace (and not attached):\n [1] gtable_0.3.6       httr2_1.0.6        xfun_0.49          htmlwidgets_1.6.4 \n [5] gh_1.4.1           tzdb_0.5.0         yulab.utils_0.1.8  vctrs_0.6.5       \n [9] tools_4.4.0        generics_0.1.3     parallel_4.4.0     curl_6.0.0        \n[13] gifski_1.32.0-1    fansi_1.0.6        pkgconfig_2.0.3    ggplotify_0.1.2   \n[17] lifecycle_1.0.4    compiler_4.4.0     farver_2.1.2       munsell_0.5.1     \n[21] codetools_0.2-20   snakecase_0.11.1   htmltools_0.5.8.1  yaml_2.3.10       \n[25] crayon_1.5.3       pillar_1.9.0       camcorder_0.1.0    magick_2.8.5      \n[29] commonmark_1.9.2   tidyselect_1.2.1   digest_0.6.37      stringi_1.8.4     \n[33] rsvg_2.6.1         rprojroot_2.0.4    fastmap_1.2.0      grid_4.4.0        \n[37] colorspace_2.1-1   cli_3.6.4          magrittr_2.0.3     utf8_1.2.4        \n[41] withr_3.0.2        rappdirs_0.3.3     bit64_4.5.2        timechange_0.3.0  \n[45] rmarkdown_2.29     tidytuesdayR_1.1.2 gitcreds_0.1.2     bit_4.5.0         \n[49] hms_1.1.3          evaluate_1.0.1     knitr_1.49         markdown_1.13     \n[53] gridGraphics_0.5-1 rlang_1.1.6        gridtext_0.1.5     Rcpp_1.0.13-1     \n[57] xml2_1.3.6         renv_1.0.3         vroom_1.6.5        svglite_2.1.3     \n[61] rstudioapi_0.17.1  jsonlite_1.8.9     R6_2.5.1           fs_1.6.5          \n[65] systemfonts_1.1.0 \n```\n\n\n:::\n:::\n\n:::\n\n#### 9. GitHub Repository\n\n::: {.callout-tip collapse=\"true\"}\n##### Expand for GitHub Repo\n\nThe complete code for this analysis is available in [`tt_2025_31.qmd`](https://github.com/poncest/personal-website/blob/master/data_visualizations/TidyTuesday/2025/tt_2025_31.qmd).\n\nFor the full repository, [click here](https://github.com/poncest/personal-website/).\n:::\n\n#### 10. References\n\n::: {.callout-tip collapse=\"true\"}\n##### Expand for References\n\n1.  Data Sources:\n\n-   TidyTuesday 2025 Week 31: \\[Income Inequality Before and After Taxes\\](https://github.com/rfordatascience/tidytuesday/blob/main/data/2025/2025-08-05)\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}