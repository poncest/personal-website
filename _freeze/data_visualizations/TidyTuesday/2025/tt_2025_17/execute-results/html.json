{
  "hash": "281340e0fe227bea45d03ec96d09829d",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Topic-Speaker Bipartite Network for useR! 2025 Conference\"\nsubtitle: \"Connections between speakers and topics\"\ndescription: \"Exploring the connections between speakers and topics at the upcoming useR! 2025 conference using network analysis. This visualization uses a bipartite network approach to reveal how speakers cluster around five key topics in the R community: Visualization, Machine Learning, Data Wrangling, Package Development, and Reproducibility.\"\nauthor: \"Steven Ponce\"\ndate: \"2025-04-29\" \ncategories: [\"TidyTuesday\", \"Data Visualization\", \"R Programming\", \"2025\"]\ntags: [\n\"network-analysis\", \"bipartite-network\", \"useR2025\", \"conference-data\", \"ggplot2\", \"igraph\", \"r-community\", \"data-science\", \"network-visualization\", \"speaker-topics\"\n]\nimage: \"thumbnails/tt_2025_17.png\"\nformat:\n  html:\n    toc: true\n    toc-depth: 5\n    code-link: true\n    code-fold: true\n    code-tools: true\n    code-summary: \"Show code\"\n    self-contained: true\n    theme: \n      light: [flatly, assets/styling/custom_styles.scss]\n      dark: [darkly, assets/styling/custom_styles_dark.scss]\neditor_options: \n  chunk_output_type: inline\nexecute: \n  freeze: true                                                  \n  cache: true                                                   \n  error: false\n  message: false\n  warning: false\n  eval: true\nfilters:\n  - social-share\nshare:\n  permalink: \"https://stevenponce.netlify.app/data_visualizations/TidyTuesday/2025/tt_2025_17.html\"\n  description: \"#TidyTuesday week 17: Visualizing speaker-topic connections for the useR! 2025 conference through a bipartite network graph that reveals community clustering and cross-disciplinary interests.\"\n\n  twitter: true\n  linkedin: true\n  email: true\n  facebook: false\n  reddit: false\n  stumble: false\n  tumblr: false\n  mastodon: true\n  bsky: true\n---\n\n\n\n![Topic-Speaker Bipartite Network for useR! 2025 Conference. The visualization shows connections between speakers (salmon-colored circles) and five topics (blue circles with labels): Visualization, Machine Learning, Data Wrangling, Package Development, and Reproducibility. The network clusters speakers around their respective topics, with some speakers positioned between multiple topics, indicating cross-disciplinary interests. The layout places topics centrally, with speakers radiating outward, creating a star-like pattern for each topic cluster.](tt_2025_17.png){#fig-1}\n\n\n### <mark> **Steps to Create this Graphic** </mark>\n\n#### 1. Load Packages & Setup\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## 1. LOAD PACKAGES & SETUP ----\nsuppressPackageStartupMessages({\nif (!require(\"pacman\")) install.packages(\"pacman\")\npacman::p_load(\n    tidyverse,      # Easily Install and Load the 'Tidyverse'\n    ggtext,         # Improved Text Rendering Support for 'ggplot2'\n    showtext,       # Using Fonts More Easily in R Graphs\n    janitor,        # Simple Tools for Examining and Cleaning Dirty Data\n    skimr,          # Compact and Flexible Summaries of Data\n    scales,         # Scale Functions for Visualization\n    glue,           # Interpreted String Literals\n    here,           # A Simpler Way to Find Your Files\n    igraph,         # Network Analysis and Visualization\n    ggrepel,        # Automatically Position Non-Overlapping Text Labels with 'ggplot2'\n    camcorder       # Record Your Plot History \n    )\n})\n\n### |- figure size ----\ngg_record(\n    dir    = here::here(\"temp_plots\"),\n    device = \"png\",\n    width  =  8,\n    height =  8,\n    units  = \"in\",\n    dpi    = 320\n)\n\n# Source utility functions\nsuppressMessages(source(here::here(\"R/utils/fonts.R\")))\nsource(here::here(\"R/utils/social_icons.R\"))\nsource(here::here(\"R/utils/image_utils.R\"))\nsource(here::here(\"R/themes/base_theme.R\"))\n```\n:::\n\n\n\n#### 2. Read in the Data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntt <- tidytuesdayR::tt_load(2025, week = 17) \n\nuser2025_raw <- tt$user2025 |> clean_names()\n\ntidytuesdayR::readme(tt)\nrm(tt)\n```\n:::\n\n\n\n#### 3. Examine the Data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(user2025_raw)\nskim(user2025_raw)\n```\n:::\n\n\n\n#### 4. Tidy Data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### |-  tidy data ----\nuser2025 <- user2025_raw |>\n    mutate(\n        keywords_list = str_split(keywords, \", \"),\n        co_authors = replace_na(co_authors, \"\")\n    )\n\n# Define Topic Mapping \ntopic_definitions <- tribble(\n    ~pattern, ~topic,\n    \"visualization|ggplot2|shiny|dashboard|interactive\", \"Visualization\",\n    \"machine learning|deep learning|statistics|modeling|neural\", \"Machine Learning\",\n    \"data wrangling|tidyverse|data.table|cleaning|manipulation\", \"Data Wrangling\",\n    \"reproducibility|rmarkdown|workflow|version control|git\", \"Reproducibility\",\n    \"package|cran|bioconductor|github\", \"Package Development\"\n)\n\n# Expand to keyword-topic map\nkeyword_topics <- map_dfr(seq_len(nrow(topic_definitions)), function(i) {\n    pattern <- topic_definitions$pattern[i]\n    topic <- topic_definitions$topic[i]\n    matched <- unique(unlist(user2025$keywords_list))[str_detect(unique(unlist(user2025$keywords_list)), regex(pattern, ignore_case = TRUE))]\n    tibble(keyword = matched, topic = topic)\n    }) |> distinct()\n\n# Create Edges ----\nspeaker_topic_edges <- user2025 |>\n    unnest(keywords_list) |>\n    inner_join(keyword_topics, by = c(\"keywords_list\" = \"keyword\")) |>\n    select(speakers, topic) |>\n    distinct()\n\n# Build Graph ----\ng <- graph_from_data_frame(speaker_topic_edges |> rename(from = speakers, to = topic), directed = FALSE)\n\n# Set node attributes\nV(g)$type <- ifelse(V(g)$name %in% speaker_topic_edges$speakers, \"speaker\", \"topic\")\nV(g)$label <- ifelse(V(g)$type == \"speaker\", str_trunc(str_extract(V(g)$name, \"^[^(]+\"), 25), V(g)$name)\ndeg <- degree(g)\nV(g)$size <- ifelse(V(g)$type == \"speaker\", rescale(deg, to = c(3.5, 6)), 10)\nV(g)$color <- ifelse(V(g)$type == \"speaker\", \"#F4978E\", \"#99C1DE\")\nV(g)$shape <- 21\n\n# Compute Layout ----\nset.seed(42)\nlayout_coords <- layout_with_fr(g) + matrix(rnorm(length(V(g)) * 2, sd = 0.15), ncol = 2)\n\n# Build Plot Data ----\nnodes_df <- data.frame(\n    name = V(g)$name,\n    type = V(g)$type,\n    color = V(g)$color,\n    shape = V(g)$shape,\n    size = V(g)$size,\n    label = V(g)$label,\n    x = layout_coords[, 1],\n    y = layout_coords[, 2]\n)\n\nedges_df <- as_data_frame(g) |>\n    left_join(nodes_df |> select(name, x_from = x, y_from = y), by = c(\"from\" = \"name\")) |>\n    left_join(nodes_df |> select(name, x_to = x, y_to = y), by = c(\"to\" = \"name\"))\n\n# Label high-degree speakers only\nhigh_deg_names <- names(deg[deg >= 2 & V(g)$type == \"speaker\"])\nspeaker_labels_df <- nodes_df |> filter(name %in% high_deg_names)\n```\n:::\n\n\n\n#### 5. Visualization Parameters\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### |-  plot aesthetics ----\ncolors <- get_theme_colors(\n    palette = c(\n        \"speaker\" = \"#F4978E\", \"topic\" = \"#99C1DE\"\n    )\n)\n\n### |-  titles and caption ----\ntitle_text <- str_glue(\"Topic-Speaker Bipartite Network for useR! 2025 Conference\")\nsubtitle_text <- str_glue(\"Connections between speakers and topics\")\n\n# Create caption\ncaption_text <- create_social_caption(\n    tt_year = 2025,\n    tt_week = 17,\n    source_text =  \"Program for the useR! 2025 conference\" \n)\n\n### |-  fonts ----\nsetup_fonts()\nfonts <- get_font_families()\n\n### |-  plot theme ----\n\n# Start with base theme\nbase_theme <- create_base_theme(colors)\n\n# Add weekly-specific theme elements\nweekly_theme <- extend_weekly_theme(\n    base_theme,\n    theme(\n        # Text styling \n        plot.title = element_text(face = \"bold\", family = fonts$title, size = rel(1.14), margin = margin(b = 10)),\n        plot.subtitle = element_text(family = fonts$subtitle, color = colors$text, size = rel(0.78), margin = margin(b = 20)),\n        \n        # Axis elements\n        axis.title = element_blank(),\n        axis.text = element_blank(),\n        \n        # Grid elements\n        panel.grid.minor = element_blank(),\n        panel.grid.major = element_line(),\n        \n        # Legend elements\n        legend.position = \"plot\",\n        legend.direction = \"horizontal\",\n        legend.title = element_text(family = fonts$text, size = rel(0.8), face = \"bold\"),\n        legend.text = element_text(family = fonts$text, size = rel(0.7)),\n        \n         # Plot margins \n        plot.margin = margin(t = 20, r = 20, b = 20, l = 20),\n    )\n)\n\n# Set theme\ntheme_set(weekly_theme)\n```\n:::\n\n\n\n#### 6. Plot\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### |-  Plot  ----\np <- ggplot() +\n    # Geoms\n    geom_segment(\n        data = edges_df, aes(x = x_from, y = y_from, xend = x_to, yend = y_to),\n        color = \"#CCCCCC\", alpha = 0.5, size = 0.3\n        ) +\n    geom_point(\n        data = nodes_df,\n        aes(x = x, y = y, fill = type, size = size),\n        shape = 21, stroke = 0.4, color = \"#333333\", show.legend = FALSE\n        ) +\n    geom_text(\n        data = nodes_df |> filter(type == \"topic\"),\n        aes(x = x, y = y, label = label),\n        color = \"#1A1A1A\", size = 5, fontface = \"bold\"\n        ) +\n    geom_text_repel(\n        data = speaker_labels_df,\n        aes(x = x, y = y, label = label),\n        color = \"#333333\", size = 3.2,\n        max.overlaps = 20, point.padding = 0.3, box.padding = 0.4,\n        segment.color = \"#AAAAAA\", segment.alpha = 0.6,\n        force = 0.5, seed = 42\n        ) +\n    # Scales\n    scale_fill_manual(values = colors$palette) +\n    scale_size_identity() +\n    coord_equal(clip = \"off\") +\n    # Labs\n    labs(\n        title = title_text,\n        subtitle = subtitle_text,\n        caption = caption_text,\n        x = NULL,\n        y = NULL,\n    ) +\n    # Theme\n    theme(\n        plot.title = element_text(\n            size = rel(1.4),\n            family = fonts$title,\n            face = \"bold\",\n            color = colors$title,\n            lineheight = 1.1,\n            margin = margin(t = 5, b = 5)\n        ),\n        plot.subtitle = element_text(\n            size = rel(0.85),\n            family = fonts$subtitle,\n            color = alpha(colors$subtitle, 0.9),\n            lineheight = 1.2,\n            margin = margin(t = 5, b = 10)\n        ),\n        plot.caption = element_markdown(\n            size = rel(0.65),\n            family = fonts$caption,\n            color = colors$caption,\n            hjust = 0.5,\n            margin = margin(t = 10)\n        )\n    )  \n```\n:::\n\n\n\n#### 7. Save\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### |-  plot image ----  \nsave_plot(\n  plot = p, \n  type = \"tidytuesday\", \n  year = 2025, \n  week = 17, \n  width = 8,\n  height = 8\n)\n```\n:::\n\n\n\n#### 8. Session Info\n\n::: {.callout-tip collapse=\"true\"}\n##### Expand for Session Info\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\nR version 4.4.1 (2024-06-14 ucrt)\nPlatform: x86_64-w64-mingw32/x64\nRunning under: Windows 11 x64 (build 22631)\n\nMatrix products: default\n\n\nlocale:\n[1] LC_COLLATE=English_United States.utf8 \n[2] LC_CTYPE=English_United States.utf8   \n[3] LC_MONETARY=English_United States.utf8\n[4] LC_NUMERIC=C                          \n[5] LC_TIME=English_United States.utf8    \n\ntime zone: America/New_York\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices datasets  utils     methods   base     \n\nother attached packages:\n [1] camcorder_0.1.0 ggrepel_0.9.6   igraph_2.1.1    here_1.0.1     \n [5] glue_1.8.0      scales_1.3.0    skimr_2.1.5     janitor_2.2.0  \n [9] showtext_0.9-7  showtextdb_3.0  sysfonts_0.8.9  ggtext_0.1.2   \n[13] lubridate_1.9.3 forcats_1.0.0   stringr_1.5.1   dplyr_1.1.4    \n[17] purrr_1.0.2     readr_2.1.5     tidyr_1.3.1     tibble_3.2.1   \n[21] ggplot2_3.5.1   tidyverse_2.0.0 pacman_0.5.1   \n\nloaded via a namespace (and not attached):\n [1] tidyselect_1.2.1   farver_2.1.2       fastmap_1.2.0      gh_1.4.1          \n [5] digest_0.6.37      timechange_0.3.0   lifecycle_1.0.4    rsvg_2.6.1        \n [9] magrittr_2.0.3     compiler_4.4.0     rlang_1.1.6        tools_4.4.0       \n[13] utf8_1.2.4         yaml_2.3.10        knitr_1.49         labeling_0.4.3    \n[17] htmlwidgets_1.6.4  bit_4.5.0          curl_6.0.0         xml2_1.3.6        \n[21] repr_1.1.7         tidytuesdayR_1.1.2 withr_3.0.2        grid_4.4.0        \n[25] fansi_1.0.6        colorspace_2.1-1   gitcreds_0.1.2     cli_3.6.4         \n[29] rmarkdown_2.29     crayon_1.5.3       ragg_1.3.3         generics_0.1.3    \n[33] rstudioapi_0.17.1  tzdb_0.5.0         commonmark_1.9.2   parallel_4.4.0    \n[37] base64enc_0.1-3    vctrs_0.6.5        jsonlite_1.8.9     hms_1.1.3         \n[41] bit64_4.5.2        systemfonts_1.1.0  magick_2.8.5       gifski_1.32.0-1   \n[45] codetools_0.2-20   stringi_1.8.4      gtable_0.3.6       munsell_0.5.1     \n[49] pillar_1.9.0       rappdirs_0.3.3     htmltools_0.5.8.1  R6_2.5.1          \n[53] httr2_1.0.6        textshaping_0.4.0  rprojroot_2.0.4    vroom_1.6.5       \n[57] evaluate_1.0.1     markdown_1.13      gridtext_0.1.5     snakecase_0.11.1  \n[61] renv_1.0.3         Rcpp_1.0.13-1      svglite_2.1.3      xfun_0.49         \n[65] pkgconfig_2.0.3   \n```\n\n\n:::\n:::\n\n\n:::\n\n#### 9. GitHub Repository\n\n::: {.callout-tip collapse=\"true\"}\n##### Expand for GitHub Repo\n\nThe complete code for this analysis is available in [`tt_2025_17.qmd`](https://github.com/poncest/personal-website/blob/master/data_visualizations/TidyTuesday/2025/tt_2025_17.qmd).\n\nFor the full repository, [click here](https://github.com/poncest/personal-website/).\n:::\n\n\n#### 10. References\n::: {.callout-tip collapse=\"true\"}\n##### Expand for References\n\n1. Data Sources:\n\n   - TidyTuesday 2025 Week 17: [useR! 2025 program](https://github.com/rfordatascience/tidytuesday/blob/main/data/2025/2025-04-29)\n\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}