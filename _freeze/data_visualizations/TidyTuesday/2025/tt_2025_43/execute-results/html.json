{
  "hash": "c82c31f47736493a15de8382b1031e8a",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Gender Equity in British Literary Prizes: Progress with Persistent Disparities\"\nsubtitle: \"Overall representation improved (+15 pp), yet only 4 of 13 major prizes achieved gender balance.\"\ndescription: \"Analysis of 950+ prize outcomes (1990-2022) reveals women's representation among winners doubled from 35% to 50%, but progress varies dramatically by prize. Pyramid chart and timeline visualization using R, ggplot2, and patchwork.\"\ndate: \"2025-10-26\" \ncategories: [\"TidyTuesday\", \"Data Visualization\", \"R Programming\", \"2025\"]\ntags: [\n  \"ggplot2\",\n  \"tidyverse\",\n  \"patchwork\",\n  \"pyramid-chart\",\n  \"timeline-visualization\",\n  \"gender-equity\",\n  \"literary-prizes\",\n  \"confidence-intervals\",\n  \"Post45-Data-Collective\",\n  \"data-analysis\",\n  \"statistical-visualization\",\n  \"British-literature\",\n  \"ggtext\",\n  \"Wilson-CI\"\n]\nimage: \"thumbnails/tt_2025_43.png\"\nformat:\n  html:\n    toc: true\n    toc-depth: 5\n    code-link: true\n    code-fold: true\n    code-tools: true\n    code-summary: \"Show code\"\n    self-contained: true\n    theme: \n      light: [flatly, assets/styling/custom_styles.scss]\n      dark: [darkly, assets/styling/custom_styles_dark.scss]\neditor_options: \n  chunk_output_type: inline\nexecute: \n  freeze: true                                    \n  cache: true                                       \n  error: false\n  message: false\n  warning: false\n  eval: true\n---\n\n![A two-panel visualization analyzing gender equity in British literary prizes from 1990 to 2022. The top panel shows a line chart of women's share of winners, which increased from 35% to 50%, with significant year-to-year variation. The bottom panel displays a horizontal pyramid chart comparing 13 major prizes, revealing that only four achieved gender balance (40-60% women). Seven prizes remain male-dominant, and two are female-dominant, showing persistent disparities despite overall progress.](tt_2025_43.png){#fig-1}\n\n### <mark> **Steps to Create this Graphic** </mark>\n\n#### 1. Load Packages & Setup\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: load\n#| warning: false\n#| message: false\n#| results: \"hide\"\n\n## 1. LOAD PACKAGES & SETUP ----\nsuppressPackageStartupMessages({\nif (!require(\"pacman\")) install.packages(\"pacman\")\npacman::p_load(\n  tidyverse, # Easily Install and Load the 'Tidyverse'\n  ggtext, # Improved Text Rendering Support for 'ggplot2'\n  showtext, # Using Fonts More Easily in R Graphs\n  janitor, # Simple Tools for Examining and Cleaning Dirty Data\n  scales, # Scale Functions for Visualization\n  glue, # Interpreted String Literals\n  patchwork, # The Composer of Plots\n  binom # Binomial Confidence Intervals for Several Parameterizations\n)\n})\n\n### |- figure size ----\ncamcorder::gg_record(\n  dir    = here::here(\"temp_plots\"),\n  device = \"png\",\n  width  = 12,\n  height = 14,\n  units  = \"in\",\n  dpi    = 320\n)\n\n# Source utility functions\nsuppressMessages(source(here::here(\"R/utils/fonts.R\")))\nsource(here::here(\"R/utils/social_icons.R\"))\nsource(here::here(\"R/utils/image_utils.R\"))\nsource(here::here(\"R/themes/base_theme.R\"))\n```\n````\n:::\n\n\n#### 2. Read in the Data\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: read\n#| include: true\n#| eval: true\n#| warning: false\n\ntt <- tidytuesdayR::tt_load(2025, week = 43)\n\nprizes <- tt$prizes |> clean_names()\n\ntidytuesdayR::readme(tt)\nrm(tt)\n```\n````\n:::\n\n\n#### 3. Examine the Data\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: examine\n#| include: true\n#| eval: true\n#| results: 'hide'\n#| warning: false\n\nglimpse(prizes)\nglimpse(prizes)\n```\n````\n:::\n\n\n#### 4. Tidy Data\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: tidy-fixed\n#| warning: false\n\n# data prep\nprizes_clean <- prizes |>\n  filter(\n    !is.na(gender),\n    !is.na(prize_year),\n    prize_year >= 1990,\n    prize_year <= 2022,\n    gender %in% c(\"man\", \"woman\")\n  )\n\n# P1: pyramid data ----\npyramid_data <- prizes_clean |>\n  filter(person_role == \"winner\") |>\n  count(prize_alias, gender) |>\n  group_by(prize_alias) |>\n  mutate(\n    total = sum(n),\n    pct = 100 * n / total\n  ) |>\n  ungroup() |>\n  filter(total >= 15) |>\n  select(prize_alias, gender, n, pct, total) |>\n  pivot_wider(\n    names_from = gender,\n    values_from = c(n, pct),\n    values_fill = 0\n  ) |>\n  mutate(\n    prize_label = str_wrap(prize_alias, width = 28),\n    women_pct = pct_woman,\n    men_pct = pct_man,\n    women_n = n_woman,\n    men_n = n_man,\n    men_x = -men_pct,\n    women_x = women_pct,\n    total = total,\n    dist50 = abs(women_pct - 50)\n  ) |>\n  select(\n    prize_label, women_pct, men_pct, women_n, men_n, men_x,\n    women_x, total, dist50\n  ) |>\n  arrange(across(all_of(\"women_pct\"), desc)) |>\n  mutate(\n    y_fac = factor(prize_label, levels = rev(prize_label))\n  )\n\n# Summary counts\nbalanced <- sum(abs(pyramid_data$women_pct - 50) <= 10)\ntotal_prize <- nrow(pyramid_data)\nmale_dom <- sum(pyramid_data$women_pct < 40)\nfemale_dom <- sum(pyramid_data$women_pct > 60)\n\n# Outside labels with counts\npad <- 4.5\npad <- 5.5 # Slightly more padding for breathing room\nfmt_lab <- function(pct, n) {\n  paste0(\n    \"<span style='font-size:11pt;'><b>\", round(pct), \"%</b></span><br>\",\n    \"<span style='font-size:9pt; color:gray60;'>(n=\", n, \")</span>\"\n  )\n}\n\nmen_lab <- pyramid_data |>\n  mutate(\n    x = men_x - pad,\n    txt = fmt_lab(abs(men_x), men_n)\n  )\nwom_lab <- pyramid_data |>\n  mutate(\n    x = women_x + pad,\n    txt = fmt_lab(women_x, women_n)\n  )\n\n# P2: timeline data ----\ntimeline <- prizes_clean |>\n  filter(person_role == \"winner\") |>\n  count(prize_year, gender) |>\n  pivot_wider(names_from = gender, values_from = n, values_fill = 0) |>\n  mutate(\n    total = man + woman,\n    p_w = woman / total\n  ) |>\n  mutate({\n    binom::binom.wilson(x = woman, n = total)[, c(\"lower\", \"upper\")]\n  } |> as_tibble()) |>\n  rename(ci_lo = lower, ci_hi = upper) |>\n  mutate(\n    pct_w = 100 * p_w,\n    lo = 100 * ci_lo,\n    hi = 100 * ci_hi\n  )\n\n# Headline stats\nearly_avg <- timeline |>\n  filter(prize_year <= 1995) |>\n  summarise(avg = mean(pct_w, na.rm = TRUE)) |>\n  pull()\n\nlate_avg <- timeline |>\n  filter(prize_year >= 2018) |>\n  summarise(avg = mean(pct_w, na.rm = TRUE)) |>\n  pull()\n\nimprovement <- late_avg - early_avg\n\nparity_year <- timeline |>\n  filter(pct_w >= 50) |>\n  arrange(prize_year) |>\n  slice(1) |>\n  pull(prize_year)\n\n# milestones\nmilestones <- tibble(\n  year = c(1993, 2008, 2018),\n  label = c(\n    glue(\"Early 1990s:\\n{round(early_avg)}% women\"),\n    \"2000s:\\nSlow growth\",\n    glue(\"Recent years:\\n{round(late_avg)}% women\")\n  )\n) |>\n  left_join(timeline |> select(prize_year, pct_w), by = c(\"year\" = \"prize_year\")) |>\n  mutate(\n    y = case_when(\n      year == 1993 ~ pct_w - 8,\n      year == 2008 ~ pct_w + 8,\n      year == 2018 ~ pct_w + 8\n    )\n  )\n```\n````\n:::\n\n\n#### 5. Visualization Parameters\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: params\n#| include: true\n#| warning: false\n\n### |-  plot aesthetics ----\n# Get basic theme colors\ncolors <- get_theme_colors(\n  palette = list(\n    col_women = \"#7B4ABF\",\n    col_men = \"#17A0A3\",\n    col_gray1 = \"#2C3E50\",\n    col_gray2 = \"#7F8C8D\",\n    col_grid = \"#ECF0F1\"\n  )\n)\n\n### |- titles and caption ----\ntitle_text <- str_glue(\n  \"Gender Equity in British Literary Prizes: Progress with Persistent Disparities\"\n)\n\nsubtitle_text <- str_glue(\n    \"Overall representation improved (+{round(improvement)} pp), \",\n    \"yet only {balanced} of {total_prize} major prizes achieved gender balance.\"\n)\n\ncaption_text <- create_social_caption(\n  tt_year = 2025,\n  tt_week = 43,\n  source_text = str_glue(\n      \"Post45 Data Collective (post45.org) | Analysis: British Literary Prizes (1990–2022)\"\n  )\n)\n\n### |-  fonts ----\nsetup_fonts()\nfonts <- get_font_families()\n\n### |-  plot theme ----\n# Start with base theme\nbase_theme <- create_base_theme(colors)\n\n# Add weekly-specific theme elements\nweekly_theme <- extend_weekly_theme(\n  base_theme,\n  theme(\n    # Text styling\n    plot.title = element_markdown(\n      face = \"bold\", family = fonts$title, size = rel(1.4),\n      color = colors$title, margin = margin(b = 10), hjust = 0.5\n    ),\n    plot.subtitle = element_text(\n      face = \"italic\", family = fonts$subtitle, lineheight = 1.2,\n      color = colors$subtitle, size = rel(0.9), margin = margin(b = 20), hjust = 0.5\n    ),\n\n    ## Grid\n    panel.grid.major.y = element_blank(),\n    panel.grid.minor = element_blank(),\n    panel.grid.major.x = element_line(color = \"gray90\", linewidth = 0.3),\n\n    # Axes\n    axis.title = element_text(size = rel(0.9), color = \"gray30\"),\n    axis.text = element_text(color = \"gray30\"),\n    axis.text.y = element_text(size = rel(0.95)),\n    axis.ticks = element_blank(),\n\n    # Facets\n    strip.background = element_rect(fill = \"gray95\", color = NA),\n    strip.text = element_text(\n      face = \"bold\",\n      color = \"gray20\",\n      size = rel(1),\n      margin = margin(t = 8, b = 8)\n    ),\n    panel.spacing = unit(2, \"lines\"),\n\n    # Legend elements\n    legend.position = \"plot\",\n    legend.title = element_text(\n      family = fonts$tsubtitle,\n      color = colors$text, size = rel(0.8), face = \"bold\"\n    ),\n    legend.text = element_text(\n      family = fonts$tsubtitle,\n      color = colors$text, size = rel(0.7)\n    ),\n    legend.margin = margin(t = 15),\n\n    # Plot margin\n    plot.margin = margin(20, 20, 20, 20)\n  )\n)\n\n# Set theme\ntheme_set(weekly_theme)\n```\n````\n:::\n\n\n#### 6. Plot\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: plot\n#| warning: false\n\n### |- P1: pyramid plot ----\np1 <-\n  ggplot(pyramid_data, aes(y = y_fac)) +\n\n  # Geom\n  geom_col(aes(x = men_x),\n    fill = colors$palette$col_men,\n    width = 0.7, color = \"white\", linewidth = 0.25\n  ) +\n  geom_col(aes(x = women_x),\n    fill = colors$palette$col_women,\n    width = 0.7, color = \"white\", linewidth = 0.25\n  ) +\n  geom_vline(\n    xintercept = 0, color = colors$palette$col_gray1,\n    linewidth = 1\n  ) +\n  geom_vline(\n    xintercept = c(-50, 50), color = \"#E67E22\",\n    linewidth = 0.8, linetype = \"dashed\", alpha = 0.7\n  ) +\n  geom_richtext(\n    data = men_lab,\n    aes(y = y_fac, x = x, label = txt),\n    hjust = 1, color = \"gray40\", size = 3,\n    fill = NA, label.color = NA,\n    inherit.aes = FALSE\n  ) +\n  geom_richtext(\n    data = wom_lab,\n    aes(y = y_fac, x = x, label = txt),\n    hjust = 0, color = \"gray40\", size = 3,\n    fill = NA, label.color = NA,\n    inherit.aes = FALSE\n  ) +\n  # Scales\n  coord_cartesian(xlim = c(-110, 110), clip = \"off\") +\n  scale_x_continuous(\n    breaks = seq(-100, 100, 25),\n    labels = \\(x) paste0(abs(x), \"%\"),\n    expand = c(0, 0)\n  ) +\n  # Labs\n  labs(\n    title = glue(\n      \"<span style='color:{colors$palette$col_men}; font-family:{get_font_families()$title};'>**Men**</span> \",\n      \"<span style='font-family:sans;'>←</span> \",\n      \"Winners by Prize (Share of Winners) \",\n      \"<span style='font-family:sans;'>→</span> \",\n      \"<span style='color:{colors$palette$col_women}; font-family:{get_font_families()$title};'>**Women**</span>\"\n    ),\n    subtitle = glue(\n      \"{balanced} balanced (40–60%) • \",\n      \"{male_dom} male-dominant (<40% women) • \",\n      \"{female_dom} female-dominant (>60% women)\"\n    ),\n    x = NULL,\n    y = NULL,\n    caption = \"Winners only • Prizes with ≥15 total winners • Parity guides at ±50%\"\n  ) +\n  # Theme\n  theme(\n    plot.caption = element_text(\n      color = \"#95A5A6\", size = 8.5,\n      margin = margin(t = 8, b = 5),\n      hjust = 0.5\n    ),\n    panel.grid.major.y = element_blank(),\n    axis.text.y = element_text(size = 8.8, lineheight = 0.95),\n    plot.margin = margin(20, 45, 20, 45) \n  )\n\n### |- P2: timeline plot ----\np2 <-\nggplot(timeline, aes(prize_year, pct_w)) +\n  # Annotations\n  annotate(\"rect\",\n    xmin = 1990, xmax = 2022, ymin = 0, ymax = 50,\n    fill = colors$palette$col_men, alpha = 0.03\n  ) +\n  annotate(\"rect\",\n    xmin = 1990, xmax = 2022, ymin = 50, ymax = 75,\n    fill = colors$palette$col_women, alpha = 0.04\n  ) +\n  # Geoms\n  geom_ribbon(aes(ymin = lo, ymax = hi),\n    fill = colors$palette$col_women, alpha = 0.15\n  ) +\n  geom_line(color = colors$palette$col_women, linewidth = 1.5) +\n  geom_point(color = colors$palette$col_women, size = 2.8, alpha = 0.9) +\n  geom_hline(\n    yintercept = 50,\n    linetype = \"dashed\",\n    color = alpha(colors$palette$col_gray1, 0.3),\n    linewidth = 0.5\n  ) +\n  geom_point(\n    data = timeline |> filter(prize_year == parity_year),\n    aes(prize_year, pct_w),\n    color = \"#2C3E50\", size = 4.5, shape = 21,\n    fill = \"white\", stroke = 1.5\n  ) +\n  geom_segment(\n    data = milestones,\n    aes(\n      x = year, xend = year,\n      y = ifelse(y > pct_w, pct_w, 0),\n      yend = y\n    ),\n    color = colors$palette$col_gray2,\n    linetype = \"dotted\", linewidth = 0.7\n  ) +\n  geom_label(\n    data = milestones,\n    aes(x = year, y = y, label = label),\n    size = 3, fontface = \"plain\",\n    fill = alpha(\"#F9FAFB\", 0.75),  \n    color = \"#34495E\",\n    label.padding = unit(0.28, \"lines\"),\n    label.size = 0.2,\n    label.r = unit(0.15, \"lines\")\n  ) +\n  annotate(\n    \"text\",\n    x = parity_year,\n    y = (timeline |> \n        filter(prize_year == parity_year) |> \n        pull(pct_w) + 6.5),\n    label = glue(\"First ≥50%\\n({parity_year})\"),\n    color = \"#2C3E50\", size = 3.2, fontface = \"bold\",\n    lineheight = 0.9\n  ) +\n  annotate(\"text\",\n    x = 2021, y = 46.5,\n    label = \"50% parity\",\n    color = colors$palette$col_gray1,\n    size = 3, fontface = \"italic\", hjust = 1\n  ) +\n  # Scales\n  scale_y_continuous(\n    labels = label_percent(scale = 1),\n    breaks = seq(0, 75, 25)\n  ) +\n  scale_x_continuous(breaks = seq(1990, 2020, 5)) +\n  coord_cartesian(ylim = c(0, 75), expand = FALSE) +\n  # Labs\n  labs(\n    title = glue(\n      \"Women's share of literary prize winners increased from \",\n      \"{round(early_avg)}% to {round(late_avg)}% (+{round(improvement)} pp)\"\n    ),\n    subtitle = glue(\n      \"British Literary Prizes, 1990–2022 • \",\n      \"95% Wilson confidence interval • \",\n      \"Parity first achieved in {parity_year}\"\n    ),\n    x = \"Year\",\n    y = \"Women winners (%)\",\n    caption = \"95% Wilson confidence intervals shown • 158 winners total\"\n  ) +\n  # Theme\n  theme(\n    plot.caption = element_text(\n      color = \"#95A5A6\", size = 8.5,\n      margin = margin(t = 8, b = 5),\n      hjust = 0.5\n    ),\n    panel.grid.major.x = element_blank(),\n    panel.grid.major.y = element_line(\n      color = \"gray92\", linewidth = 0.4\n    )\n  )\n\n### |- Combined plot ----\ncombined_plots <- p2 / p1 +\n    plot_layout(heights = c(0.85, 1.15))\n\ncombined_plots <- combined_plots +\n    plot_annotation(\n        title = title_text,\n        subtitle = subtitle_text,\n        caption = caption_text,\n        theme = theme(\n            plot.title = element_markdown(\n                size = rel(1.55),\n                family = fonts$title,\n                face = \"bold\",\n                color = colors$title,\n                lineheight = 1.15,\n                margin = margin(t = 8, b = 5)\n            ),\n            plot.subtitle = element_text(\n                size = rel(0.87),\n                family = fonts$subtitle,\n                color = alpha(colors$subtitle, 0.88),\n                lineheight = 1.2,\n                margin = margin(t = 2, b = 15)\n            ),\n            plot.caption = element_markdown(\n                size = rel(0.73),\n                family = fonts$caption,\n                color = colors$caption,\n                hjust = 0.5,\n                lineheight = 1.3,\n                margin = margin(t = 12, b = 5),\n            )\n        )\n    )\n```\n````\n:::\n\n\n#### 7. Save\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: save\n#| warning: false\n\n### |-  plot image ----  \nsave_plot_patchwork(\n  plot = combined_plots, \n  type = \"tidytuesday\", \n  year = 2025, \n  week = 43, \n  width  = 12,\n  height = 14,\n  )\n```\n````\n:::\n\n\n#### 8. Session Info\n\n::: {.callout-tip collapse=\"true\"}\n##### Expand for Session Info\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\nR version 4.4.1 (2024-06-14 ucrt)\nPlatform: x86_64-w64-mingw32/x64\nRunning under: Windows 11 x64 (build 26100)\n\nMatrix products: default\n\n\nlocale:\n[1] LC_COLLATE=English_United States.utf8 \n[2] LC_CTYPE=English_United States.utf8   \n[3] LC_MONETARY=English_United States.utf8\n[4] LC_NUMERIC=C                          \n[5] LC_TIME=English_United States.utf8    \n\ntime zone: America/New_York\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices datasets  utils     methods   base     \n\nother attached packages:\n [1] here_1.0.1      binom_1.1-1.1   patchwork_1.3.0 glue_1.8.0     \n [5] scales_1.3.0    janitor_2.2.0   showtext_0.9-7  showtextdb_3.0 \n [9] sysfonts_0.8.9  ggtext_0.1.2    lubridate_1.9.3 forcats_1.0.0  \n[13] stringr_1.5.1   dplyr_1.1.4     purrr_1.0.2     readr_2.1.5    \n[17] tidyr_1.3.1     tibble_3.2.1    ggplot2_3.5.1   tidyverse_2.0.0\n[21] pacman_0.5.1   \n\nloaded via a namespace (and not attached):\n [1] gtable_0.3.6       httr2_1.0.6        xfun_0.49          htmlwidgets_1.6.4 \n [5] gh_1.4.1           tzdb_0.5.0         yulab.utils_0.1.8  vctrs_0.6.5       \n [9] tools_4.4.0        generics_0.1.3     parallel_4.4.0     curl_6.0.0        \n[13] gifski_1.32.0-1    fansi_1.0.6        pkgconfig_2.0.3    ggplotify_0.1.2   \n[17] lifecycle_1.0.4    compiler_4.4.0     farver_2.1.2       munsell_0.5.1     \n[21] codetools_0.2-20   snakecase_0.11.1   htmltools_0.5.8.1  yaml_2.3.10       \n[25] crayon_1.5.3       pillar_1.9.0       camcorder_0.1.0    magick_2.8.5      \n[29] commonmark_1.9.2   tidyselect_1.2.1   digest_0.6.37      stringi_1.8.4     \n[33] rsvg_2.6.1         rprojroot_2.0.4    fastmap_1.2.0      grid_4.4.0        \n[37] colorspace_2.1-1   cli_3.6.4          magrittr_2.0.3     utf8_1.2.4        \n[41] withr_3.0.2        rappdirs_0.3.3     bit64_4.5.2        timechange_0.3.0  \n[45] rmarkdown_2.29     tidytuesdayR_1.1.2 gitcreds_0.1.2     bit_4.5.0         \n[49] hms_1.1.3          evaluate_1.0.1     knitr_1.49         markdown_1.13     \n[53] gridGraphics_0.5-1 rlang_1.1.6        gridtext_0.1.5     Rcpp_1.0.13-1     \n[57] xml2_1.3.6         renv_1.0.3         vroom_1.6.5        svglite_2.1.3     \n[61] rstudioapi_0.17.1  jsonlite_1.8.9     R6_2.5.1           fs_1.6.5          \n[65] systemfonts_1.1.0 \n```\n\n\n:::\n:::\n\n:::\n\n#### 9. GitHub Repository\n\n::: {.callout-tip collapse=\"true\"}\n##### Expand for GitHub Repo\n\nThe complete code for this analysis is available in [`tt_2025_43.qmd`](https://github.com/poncest/personal-website/blob/master/data_visualizations/TidyTuesday/2025/tt_2025_43.qmd).\n\nFor the full repository, [click here](https://github.com/poncest/personal-website/).\n:::\n\n#### 10. References\n\n::: {.callout-tip collapse=\"true\"}\n##### Expand for References\n\n1.  Data Sources:\n\n-   TidyTuesday 2025 Week 43: \\[Selected British Literary Prizes (1990-2022)\\](https://github.com/rfordatascience/tidytuesday/blob/main/data/2025/2025-10-28\n:::\n\n#### 11. Custom Functions Documentation\n\n::: {.callout-note collapse=\"true\"}\n##### 📦 Custom Helper Functions\n\nThis analysis uses custom functions from my personal module library for efficiency and consistency across projects.\n\n**Functions Used:**\n\n-   **`fonts.R`**: `setup_fonts()`, `get_font_families()` - Font management with showtext\n-   **`social_icons.R`**: `create_social_caption()` - Generates formatted social media captions\n-   **`image_utils.R`**: `save_plot()` - Consistent plot saving with naming conventions\n-   **`base_theme.R`**: `create_base_theme()`, `extend_weekly_theme()`, `get_theme_colors()` - Custom ggplot2 themes\n\n**Why custom functions?**\\\nThese utilities standardize theming, fonts, and output across all my data visualizations. The core analysis (data tidying and visualization logic) uses only standard tidyverse packages.\n\n**Source Code:**\\\nView all custom functions → [GitHub: R/utils](https://github.com/poncest/personal-website/tree/master/R)\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}