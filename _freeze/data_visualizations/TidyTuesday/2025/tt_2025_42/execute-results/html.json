{
  "hash": "557f6b66f72d2d45af5f88d45d4da8b8",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"The UK's Climate Is Warming — and Extremes Are Increasing\"\nsubtitle: \"Summers are getting hotter and hard-freeze years are increasingly rare, while extreme-heat years cluster after ~1990 signaling rising heat risk.\"\ndescription: \"Analyzing 125 years of UK Met Office data reveals rising temperatures, declining frost days, and a surge in extreme heat events after 1990—clear evidence of accelerating climate change.\"\ndate: \"2025-10-19\" \ncategories: [\"TidyTuesday\", \"Data Visualization\", \"R Programming\", \"2025\"]\ntags: [\n  \"climate change\",\n  \"UK meteorology\",\n  \"time series analysis\",\n  \"ggplot2\",\n  \"patchwork\",\n  \"extreme weather\",\n  \"temperature trends\",\n  \"LOESS smoothing\",\n  \"historical data\",\n  \"environmental data\",\n  \"Met Office\",\n  \"data storytelling\"\n]\nimage: \"thumbnails/tt_2025_42.png\"\nformat:\n  html:\n    toc: true\n    toc-depth: 5\n    code-link: true\n    code-fold: true\n    code-tools: true\n    code-summary: \"Show code\"\n    self-contained: true\n    theme: \n      light: [flatly, assets/styling/custom_styles.scss]\n      dark: [darkly, assets/styling/custom_styles_dark.scss]\neditor_options: \n  chunk_output_type: inline\nexecute: \n  freeze: true                                    \n  cache: true                                       \n  error: false\n  message: false\n  warning: false\n  eval: true\n---\n\n![Combined visualization showing UK climate change from 1900-present. The top panel displays four trend charts: maximum temperature rising from ~12.5°C to 14°C, monthly rainfall increasing from 70mm to 80mm,  monthly sunshine relatively stable around 115-120 hours, and air frost days declining from ~4 to 2 days. Bottom panel shows a timeline of extreme weather events with dots representing years in the top panel/bottom 5% for each metric. Extreme heat events (orange dots) cluster heavily after 1990, with 6 of 7 occurring after 2000, while extreme cold events (navy dots) become increasingly rare in recent decades. Extreme rainfall events (blue dots) are scattered throughout the period. Annotations highlight post-1990 clustering and the notable 2003 heatwave.](tt_2025_42.png){#fig-1}\n\n### <mark> **Steps to Create this Graphic** </mark>\n\n#### 1. Load Packages & Setup\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: load\n#| warning: false\n#| message: false\n#| results: \"hide\"\n\n## 1. LOAD PACKAGES & SETUP ----\nsuppressPackageStartupMessages({\nif (!require(\"pacman\")) install.packages(\"pacman\")\npacman::p_load(\n  tidyverse,     # Easily Install and Load the 'Tidyverse'\n  ggtext,        # Improved Text Rendering Support for 'ggplot2'\n  showtext,      # Using Fonts More Easily in R Graphs\n  janitor,       # Simple Tools for Examining and Cleaning Dirty Data\n  scales,        # Scale Functions for Visualization\n  glue,          # Interpreted String Literals\n  patchwork      # The Composer of Plots \n  )})\n\n### |- figure size ----\ncamcorder::gg_record(\n  dir    = here::here(\"temp_plots\"),\n  device = \"png\",\n  width  = 10,\n  height = 12,\n  units  = \"in\",\n  dpi    = 320\n)\n\n# Source utility functions\nsuppressMessages(source(here::here(\"R/utils/fonts.R\")))\nsource(here::here(\"R/utils/social_icons.R\"))\nsource(here::here(\"R/utils/image_utils.R\"))\nsource(here::here(\"R/themes/base_theme.R\"))\n```\n````\n:::\n\n\n#### 2. Read in the Data\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: read\n#| include: true\n#| eval: true\n#| warning: false\n\ntt <- tidytuesdayR::tt_load(2025, week = 42)\n\nhistoric_station_met <- tt$historic_station_met |> clean_names()\nstation_meta <- tt$station_meta |> clean_names()\n\ntidytuesdayR::readme(tt)\nrm(tt)\n```\n````\n:::\n\n\n#### 3. Examine the Data\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: examine\n#| include: true\n#| eval: true\n#| results: 'hide'\n#| warning: false\n\nglimpse(historic_station_met)\nglimpse(station_meta)\n```\n````\n:::\n\n\n#### 4. Tidy Data\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: tidy-fixed\n#| warning: false\n\n# data prep\nmet_data <- historic_station_met |>\n  left_join(station_meta, by = \"station\") |>\n  mutate(\n    date = make_date(year, month, 1),\n    decade = floor(year / 10) * 10,\n    season = case_when(\n      month %in% c(12, 1, 2) ~ \"Winter\",\n      month %in% c(3, 4, 5) ~ \"Spring\",\n      month %in% c(6, 7, 8) ~ \"Summer\",\n      TRUE ~ \"Autumn\"\n    ),\n    era = case_when(\n      year < 1950 ~ \"1900–1949\",\n      year < 2000 ~ \"1950–1999\",\n      TRUE ~ \"2000–present\"\n    )\n  )\n\n# P1: Long-term trends across stations\ntrends <- met_data |>\n  filter(year >= 1900) |>\n  summarise(\n    avg_tmax = mean(tmax, na.rm = TRUE),\n    avg_rain = mean(rain, na.rm = TRUE),\n    avg_sun = mean(sun, na.rm = TRUE),\n    avg_frost = mean(af, na.rm = TRUE),\n    .by = year\n  ) |>\n  pivot_longer(\n    starts_with(\"avg_\"),\n    names_to  = \"variable\",\n    values_to = \"value\"\n  ) |>\n  mutate(\n    variable = recode(variable,\n      avg_tmax  = \"Maximum Temperature\",\n      avg_rain  = \"Monthly Rainfall\",\n      avg_sun   = \"Monthly Sunshine\",\n      avg_frost = \"Air Frost Days\"\n    ),\n    variable = factor(variable,\n      levels = c(\"Maximum Temperature\", \"Monthly Rainfall\", \"Monthly Sunshine\", \"Air Frost Days\")\n    ),\n    variable_label = case_match(\n      variable,\n      \"Maximum Temperature\" ~ \"Maximum Temperature (°C)\",\n      \"Monthly Rainfall\" ~ \"Monthly Rainfall (mm)\",\n      \"Monthly Sunshine\" ~ \"Monthly Sunshine (hours)\",\n      \"Air Frost Days\" ~ \"Air Frost Days (days)\"\n    )\n  )\n\nlast_points <- trends |>\n  group_by(variable_label) |>\n  slice_max(year, n = 1, with_ties = FALSE)\n\n# P2: Extreme weather events timeline\nannual_summary <- met_data |>\n  summarise(\n    total_rain = sum(rain, na.rm = TRUE),\n    max_temp = max(tmax, na.rm = TRUE),\n    min_temp = min(tmin, na.rm = TRUE),\n    n_stations = dplyr::n(),\n    .by = year\n  ) |>\n  filter(year >= 1900, n_stations >= 12)\n\n# thresholds\nthr <- list(\n  rain_hi = quantile(annual_summary$total_rain, 0.95, na.rm = TRUE),\n  heat_hi = quantile(annual_summary$max_temp, 0.95, na.rm = TRUE),\n  cold_lo = quantile(annual_summary$min_temp, 0.05, na.rm = TRUE)\n)\n\nextreme_events <- annual_summary |>\n  mutate(\n    rain_extreme = total_rain > thr$rain_hi,\n    heat_extreme = max_temp > thr$heat_hi,\n    cold_extreme = min_temp < thr$cold_lo\n  ) |>\n  pivot_longer(\n    ends_with(\"_extreme\"),\n    names_to = \"event_type\",\n    values_to = \"is_extreme\"\n  ) |>\n  filter(is_extreme) |>\n  mutate(\n    event_label = factor(\n      case_match(\n        event_type,\n        \"rain_extreme\" ~ \"Extreme Rainfall\",\n        \"heat_extreme\" ~ \"Extreme Heat\",\n        \"cold_extreme\" ~ \"Extreme Cold\"\n      ),\n      levels = c(\"Extreme Heat\", \"Extreme Rainfall\", \"Extreme Cold\")\n    )\n  ) |>\n  select(year, event_label)\n```\n````\n:::\n\n\n#### 5. Visualization Parameters\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: params\n#| include: true\n#| warning: false\n\n### |-  plot aesthetics ----\n# Get basic theme colors\ncolors <- get_theme_colors(\n  palette =  list(\n      heat        = \"#D55E00\",  \n      cold        = \"#1D3557\",  \n      temp_warm   = \"#E69F00\",  \n      rain        = \"#0072B2\",  \n      sun         = \"#F0E442\",  \n      frost       = \"#56B4E9\", \n      neutral_dark  = \"#2B2D42\",\n      neutral_mid   = \"#8D99AE\",\n      neutral_light = \"#EDF2F4\"\n  )\n)\n\n### |- titles and caption ----\ntitle_text <- str_glue(\n    \"The UK's Climate Is Warming — and Extremes Are Increasing\"\n    )\n\nsubtitle_text <- str_glue(\n    \"Summers are getting hotter and hard-freeze years are increasingly rare, while extreme-heat years cluster after ~1990 \\n\",\n    \"signaling rising heat risk.\\n\"\n)\n\ncaption_text <- create_social_caption(\n  tt_year = 2025,\n  tt_week = 42,\n  source_text = str_glue(\n      \"Historical monthly data for meteorological stations, via data.gov.uk\",\n      \"<br>Metric = station means by year | Trends = LOESS (span 0.25) | Extremes = annual 95th percentile\"\n    )\n)\n\n### |-  fonts ----\nsetup_fonts()\nfonts <- get_font_families()\n\n### |-  plot theme ----\n# Start with base theme\nbase_theme <- create_base_theme(colors)\n\n# Add weekly-specific theme elements\nweekly_theme <- extend_weekly_theme(\n  base_theme,\n  theme(\n    # Text styling\n    plot.title = element_text(face = \"bold\", family = fonts$title, size = rel(1.4), color = colors$title, margin = margin(b = 10)),\n    plot.subtitle = element_text(face = \"italic\", family = fonts$subtitle, lineheight = 1.2, color = colors$subtitle, size = rel(0.9), margin = margin(b = 20)),\n\n    ## Grid\n    panel.grid.major.y = element_blank(),\n    panel.grid.minor = element_blank(),\n    panel.grid.major.x = element_line(color = \"gray90\", linewidth = 0.3),\n    \n    # Axes\n    axis.title = element_text(size = rel(0.9), color = \"gray30\"),\n    axis.text = element_text(color = \"gray30\"),\n    axis.text.y = element_text(size = rel(0.95)),\n    axis.ticks = element_blank(),\n    \n    # Facets\n    strip.background = element_rect(fill = \"gray95\", color = NA),\n    strip.text = element_text(\n        face = \"bold\", \n        color = \"gray20\", \n        size = rel(1),\n        margin = margin(t = 8, b = 8)\n    ),\n    panel.spacing = unit(2, \"lines\"),\n    \n    # Legend elements\n    legend.position = \"plot\",\n    legend.title = element_text(family = fonts$tsubtitle, \n                                color = colors$text, size = rel(0.8), face = \"bold\"),\n    legend.text = element_text(family = fonts$tsubtitle, \n                               color = colors$text, size = rel(0.7)),\n    legend.margin = margin(t = 15),\n\n    # Plot margin\n    plot.margin = margin(20, 20, 20, 20)\n  )\n)\n\n# Set theme\ntheme_set(weekly_theme)\n```\n````\n:::\n\n\n#### 6. Plot\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: plot\n#| warning: false\n\n### |- P1: trends plot ----\np1 <- ggplot(trends, aes(year, value)) +\n  geom_line(color = colors$palette$neutral_mid, linewidth = 0.4, alpha = 0.6) +\n  # Geoms\n  geom_smooth(aes(color = variable), method = \"loess\", linewidth = 1.8, se = TRUE, alpha = 0.15, span = 0.25) +\n  geom_point(\n    data = last_points, aes(year, value),\n    inherit.aes = FALSE, size = 2.2, color = \"grey20\"\n  ) +\n  # Scales\n  scale_color_manual(\n    values = c(\n      \"Maximum Temperature\" = colors$palette$temp_warm,\n      \"Monthly Rainfall\"    = colors$palette$rain,\n      \"Monthly Sunshine\"    = colors$palette$sun,\n      \"Air Frost Days\"      = colors$palette$frost\n    ),\n    guide = \"none\"\n  ) +\n  scale_x_continuous(\n    breaks = seq(1900, 2020, 40),\n    limits = c(1900, 2024)\n  ) +\n  # Labs\n  labs(\n    title = \"Long-term Trends\",\n    subtitle = \"Smoothed station means with underlying annual variability (1900–present)\",\n    x = NULL, y = NULL\n  ) +\n  # Facets\n  facet_wrap(~variable_label, scales = \"free_y\", ncol = 2) +\n  # Theme\n  theme(\n    strip.text = element_text(face = \"bold\", size = 12, color = colors$palette$neutral_dark, margin = margin(b = 8, t = 4)),\n    strip.background = element_rect(fill = colors$palette$neutral_light, color = NA),\n    panel.grid.major = element_line(color = colors$palette$neutral_light, linewidth = 0.4),\n    panel.grid.minor = element_blank(),\n    panel.spacing = unit(1.2, \"lines\")\n  )\n\n### |- P2: timeline plot ----\np2 <- ggplot(extreme_events, aes(x = year, y = event_label, color = event_label)) +\n  # Annotate\n  annotate(\"rect\",\n    xmin = 1990, xmax = 2022, ymin = -Inf, ymax = Inf,\n    fill = alpha(colors$palette$neutral_light, 0.35), color = NA\n  ) +\n  # Geom\n  geom_vline(\n    xintercept = c(1990, 2003), linetype = c(\"dashed\", \"dotted\"),\n    linewidth = c(0.5, 0.6), color = alpha(colors$palette$neutral_mid, 0.8)\n  ) +\n  geom_point(\n    size = 4.2, alpha = 0.95, stroke = 0.4,\n    position = position_jitter(width = 0.2, height = 0.04, seed = 123)\n  ) +\n  # Annotate\n  annotate(\"text\",\n    x = 2006, y = \"Extreme Heat\", label = \"Post-1990 clustering\",\n    size = 3.2, color = colors$palette$neutral_mid, vjust = -3\n  ) +\n  annotate(\"text\",\n    x = 2003, y = \"Extreme Heat\", label = \"2003 heatwave\",\n    size = 3.0, color = colors$palette$neutral_mid, vjust = 3.6\n  ) +\n  # Scales\n  scale_color_manual(\n    values = c(\n      \"Extreme Heat\" = colors$palette$heat,\n      \"Extreme Rainfall\" = alpha(colors$palette$rain, 0.5),\n      \"Extreme Cold\" = alpha(colors$palette$cold, 0.5)\n    ),\n    guide = \"none\"\n  ) +\n  scale_x_continuous(\n    breaks = seq(1900, 2020, 20),\n    expand = expansion(mult = c(0.02, 0.02)),\n    limits = c(1900, 2024)\n  ) +\n  # Labs\n  labs(\n    title = \"Extreme Weather Events\",\n    subtitle = \"Extreme-heat events surge after ~1990 — clear evidence of a warming climate\",\n    x = NULL, y = NULL\n  ) +\n  # Theme\n  theme(\n    panel.grid.major.y = element_line(color = alpha(colors$palette$neutral_light, 0.9), linewidth = 0.7),\n    panel.grid.major.x = element_line(color = alpha(colors$palette$neutral_light, 0.5), linewidth = 0.25),\n    panel.grid.minor   = element_blank()\n  )\n\n### |- Combined plot ----\ncombined_plots <- p1 / p2 +\n  plot_annotation(\n    title = title_text,\n    subtitle = subtitle_text,\n    caption = caption_text,\n    theme = theme(\n      plot.title = element_text(\n        size = rel(1.55),\n        family = fonts$title,\n        face = \"bold\",\n        color = colors$title,\n        lineheight = 1.1,\n        margin = margin(t = 5, b = 5)\n      ),\n      plot.subtitle = element_text(\n        size = rel(0.85),\n        family = fonts$subtitle,\n        color = alpha(colors$subtitle, 0.9),\n        lineheight = 1.2,\n        margin = margin(t = 0, b = 0)\n      ),\n      plot.caption = element_markdown(\n        size = rel(0.55),\n        family = fonts$caption,\n        color = colors$caption,\n        hjust = 0.5,\n        margin = margin(t = 10)\n      )\n    )\n  )\n```\n````\n:::\n\n\n#### 7. Save\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: save\n#| warning: false\n\n### |-  plot image ----  \nsave_plot_patchwork(\n  plot = combined_plots, \n  type = \"tidytuesday\", \n  year = 2025, \n  week = 42, \n  width  = 10,\n  height = 12,\n  )\n```\n````\n:::\n\n\n#### 8. Session Info\n\n::: {.callout-tip collapse=\"true\"}\n##### Expand for Session Info\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\nR version 4.4.1 (2024-06-14 ucrt)\nPlatform: x86_64-w64-mingw32/x64\nRunning under: Windows 11 x64 (build 26100)\n\nMatrix products: default\n\n\nlocale:\n[1] LC_COLLATE=English_United States.utf8 \n[2] LC_CTYPE=English_United States.utf8   \n[3] LC_MONETARY=English_United States.utf8\n[4] LC_NUMERIC=C                          \n[5] LC_TIME=English_United States.utf8    \n\ntime zone: America/New_York\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices datasets  utils     methods   base     \n\nother attached packages:\n [1] here_1.0.1      patchwork_1.3.0 glue_1.8.0      scales_1.3.0   \n [5] janitor_2.2.0   showtext_0.9-7  showtextdb_3.0  sysfonts_0.8.9 \n [9] ggtext_0.1.2    lubridate_1.9.3 forcats_1.0.0   stringr_1.5.1  \n[13] dplyr_1.1.4     purrr_1.0.2     readr_2.1.5     tidyr_1.3.1    \n[17] tibble_3.2.1    ggplot2_3.5.1   tidyverse_2.0.0 pacman_0.5.1   \n\nloaded via a namespace (and not attached):\n [1] tidyselect_1.2.1   farver_2.1.2       fastmap_1.2.0      gh_1.4.1          \n [5] digest_0.6.37      timechange_0.3.0   lifecycle_1.0.4    rsvg_2.6.1        \n [9] magrittr_2.0.3     compiler_4.4.0     rlang_1.1.6        tools_4.4.0       \n[13] utf8_1.2.4         yaml_2.3.10        knitr_1.49         labeling_0.4.3    \n[17] htmlwidgets_1.6.4  bit_4.5.0          curl_6.0.0         xml2_1.3.6        \n[21] camcorder_0.1.0    tidytuesdayR_1.1.2 withr_3.0.2        grid_4.4.0        \n[25] fansi_1.0.6        colorspace_2.1-1   gitcreds_0.1.2     cli_3.6.4         \n[29] rmarkdown_2.29     crayon_1.5.3       generics_0.1.3     rstudioapi_0.17.1 \n[33] tzdb_0.5.0         commonmark_1.9.2   splines_4.4.0      parallel_4.4.0    \n[37] ggplotify_0.1.2    vctrs_0.6.5        yulab.utils_0.1.8  Matrix_1.7-0      \n[41] jsonlite_1.8.9     gridGraphics_0.5-1 hms_1.1.3          bit64_4.5.2       \n[45] systemfonts_1.1.0  magick_2.8.5       gifski_1.32.0-1    codetools_0.2-20  \n[49] stringi_1.8.4      gtable_0.3.6       munsell_0.5.1      pillar_1.9.0      \n[53] rappdirs_0.3.3     htmltools_0.5.8.1  R6_2.5.1           httr2_1.0.6       \n[57] rprojroot_2.0.4    vroom_1.6.5        evaluate_1.0.1     lattice_0.22-6    \n[61] markdown_1.13      gridtext_0.1.5     snakecase_0.11.1   renv_1.0.3        \n[65] Rcpp_1.0.13-1      svglite_2.1.3      nlme_3.1-164       mgcv_1.9-1        \n[69] xfun_0.49          fs_1.6.5           pkgconfig_2.0.3   \n```\n\n\n:::\n:::\n\n:::\n\n#### 9. GitHub Repository\n\n::: {.callout-tip collapse=\"true\"}\n##### Expand for GitHub Repo\n\nThe complete code for this analysis is available in [`tt_2025_42.qmd`](https://github.com/poncest/personal-website/blob/master/data_visualizations/TidyTuesday/2025/tt_2025_42.qmd).\n\nFor the full repository, [click here](https://github.com/poncest/personal-website/).\n:::\n\n#### 10. References\n\n::: {.callout-tip collapse=\"true\"}\n##### Expand for References\n\n1.  Data Sources:\n\n-   TidyTuesday 2025 Week 42: \\[Historic UK Meteorological & Climate Data\\](https://github.com/rfordatascience/tidytuesday/blob/main/data/2025/2025-10-21\n:::\n\n#### 11. Custom Functions Documentation\n\n::: {.callout-note collapse=\"true\"}\n##### 📦 Custom Helper Functions\n\nThis analysis uses custom functions from my personal module library for efficiency and consistency across projects.\n\n**Functions Used:**\n\n- **`fonts.R`**: `setup_fonts()`, `get_font_families()` - Font management with showtext\n- **`social_icons.R`**: `create_social_caption()` - Generates formatted social media captions\n- **`image_utils.R`**: `save_plot()` - Consistent plot saving with naming conventions\n- **`base_theme.R`**: `create_base_theme()`, `extend_weekly_theme()`, `get_theme_colors()` - Custom ggplot2 themes\n\n**Why custom functions?**  \nThese utilities standardize theming, fonts, and output across all my data visualizations. The core analysis (data tidying and visualization logic) uses only standard tidyverse packages.\n\n**Source Code:**  \nView all custom functions → [GitHub: R/utils](https://github.com/poncest/personal-website/tree/master/R)\n\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}