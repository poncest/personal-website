{
  "hash": "0aae67e7c7566a460e6294a08bf12c6d",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"The API Graveyard: A Tale of Digital Neglect\"\nsubtitle: \"40% of APIs are never updated after being added to the catalog\"\ndescription: \"A TidyTuesday analysis revealing that 40% of APIs are never updated after publication. Using APIs.guru data, this visualization shows maintenance patterns across providers and the timeline of API updates from 2016-2022.\"\nauthor: \"Steven Ponce\"\ndate: \"2025-06-17\" \ncategories: [\"TidyTuesday\", \"Data Visualization\", \"R Programming\", \"2025\"]\ntags: [\n  \"APIs\", \"Software Maintenance\", \"Technical Debt\", \"Digital Infrastructure\",\n  \"Data Analysis\", \"ggplot2\", \"APIs.guru\", \"Software Engineering\",\n  \"Tech Industry\", \"Data Storytelling\", \"R\", \"Scatter Plot\", \"Bar Chart\",\n  \"Open Source\", \"Developer Tools\", \"Software Lifecycle\", \"Code Maintenance\",\n  \"Tech Trends\"\n]\nimage: \"thumbnails/tt_2025_24.png\"\nformat:\n  html:\n    toc: true\n    toc-depth: 5\n    code-link: true\n    code-fold: true\n    code-tools: true\n    code-summary: \"Show code\"\n    self-contained: true\n    theme: \n      light: [flatly, assets/styling/custom_styles.scss]\n      dark: [darkly, assets/styling/custom_styles_dark.scss]\neditor_options: \n  chunk_output_type: inline\nexecute: \n  freeze: true                                                  \n  cache: true                                                   \n  error: false\n  message: false\n  warning: false\n  eval: true\n---\n\n![\"Two-chart visualization showing API maintenance crisis. Top scatter plot reveals 40% of APIs (1,011 red dots at bottom) are never updated after publication, while 60% (1,518 gray dots) receive updates over time from 2016-2022. Bottom bar chart shows provider-specific abandonment rates, with companies like Xero.com, Vtex.local, and government sites showing 100% abandonment, while Amazon has the lowest rate at 21.8%.\"](tt_2025_24.png){#fig-1}\n\n### <mark> **Steps to Create this Graphic** </mark>\n\n#### 1. Load Packages & Setup\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: load\n#| warning: false\n#| message: false\n#| results: \"hide\"\n\n## 1. LOAD PACKAGES & SETUP ----\nsuppressPackageStartupMessages({\nif (!require(\"pacman\")) install.packages(\"pacman\")\npacman::p_load(\n  tidyverse,  # Easily Install and Load the 'Tidyverse'\n  ggtext,     # Improved Text Rendering Support for 'ggplot2'\n  showtext,   # Using Fonts More Easily in R Graphs\n  janitor,    # Simple Tools for Examining and Cleaning Dirty Data\n  scales,     # Scale Functions for Visualization\n  glue,       # Interpreted String Literals\n  patchwork   # The Composer of Plots\n  )})\n\n### |- figure size ----\ncamcorder::gg_record(\n  dir    = here::here(\"temp_plots\"),\n  device = \"png\",\n  width  =  8,\n  height =  10,\n  units  = \"in\",\n  dpi    = 320\n)\n\n# Source utility functions\nsuppressMessages(source(here::here(\"R/utils/fonts.R\")))\nsource(here::here(\"R/utils/social_icons.R\"))\nsource(here::here(\"R/utils/image_utils.R\"))\nsource(here::here(\"R/themes/base_theme.R\"))\n```\n````\n:::\n\n\n#### 2. Read in the Data\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: read\n#| include: true\n#| eval: true\n#| warning: false\n\ntt <- tidytuesdayR::tt_load(2025, week = 24)\n\ninfo_raw <- tt$api_info |> clean_names()\napis_raw <- tt$apisguru_apis |> clean_names()\n\ntidytuesdayR::readme(tt)\nrm(tt)\n```\n````\n:::\n\n\n#### 3. Examine the Data\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: examine\n#| include: true\n#| eval: true\n#| results: 'hide'\n#| warning: false\n\nglimpse(info_raw)\nglimpse(apis_raw)\n```\n````\n:::\n\n\n#### 4. Tidy Data\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: tidy\n#| warning: false\n\n### |-  tidy data ----\napis_minimal <- apis_raw |>\n  left_join(info_raw, by = \"name\") |>\n  select(name, added, updated, provider_name) |>\n  mutate(\n    added_date = as_date(added),\n    updated_date = as_date(updated)\n  ) |>\n  filter(!is.na(added_date), !is.na(updated_date))\n\n# P1. The API Graveyard Data ----\nmaintenance_analysis <- apis_minimal |>\n  mutate(\n    days_between_add_update = as.numeric(updated_date - added_date),\n    same_day_update = days_between_add_update == 0,\n    days_for_viz = ifelse(days_between_add_update == 0, 0.5, days_between_add_update)\n  ) |>\n  filter(days_between_add_update >= 0)\n\n# Calculate key statistics\ntotal_apis <- nrow(maintenance_analysis)\nnever_updated_count <- sum(maintenance_analysis$same_day_update)\nnever_updated_pct <- round(never_updated_count / total_apis * 100, 1)\nupdated_count <- total_apis - never_updated_count\nupdated_pct <- round(updated_count / total_apis * 100, 1)\n\n# P2. Provider Analysis ----\nprovider_analysis <- apis_minimal |>\n  mutate(\n    days_between_add_update = as.numeric(updated_date - added_date),\n    same_day_update = days_between_add_update == 0\n  ) |>\n  filter(days_between_add_update >= 0) |>\n  group_by(provider_name) |>\n  filter(n() >= 3) |>\n  summarise(\n    total_apis = n(),\n    never_updated_apis = sum(same_day_update),\n    abandonment_rate = round((never_updated_apis / total_apis) * 100, 1),\n    .groups = \"drop\"\n  ) |>\n  filter(abandonment_rate > 0) |>\n  arrange(desc(abandonment_rate)) |>\n  head(15) |> # Top 15 by abandonment rate\n  mutate(\n    provider_clean = str_trunc(str_to_title(provider_name), 35),\n    provider_clean = fct_reorder(provider_clean, abandonment_rate)\n  )\n```\n````\n:::\n\n\n#### 5. Visualization Parameters\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: params\n#| include: true\n#| warning: false\n\n### |-  plot aesthetics ----\ncolors <- get_theme_colors(\n  palette = c(\"#95A5A6\", \"#E74C3C\", \"#7F8C8D\")\n)\n\n### |-  titles and caption ----\ncaption_text <- create_social_caption(\n  tt_year = 2025,\n  tt_week = 24,\n  source_text =  \"APIs.guru\"\n)\n\n### |-  fonts ----\nsetup_fonts()\nfonts <- get_font_families()\n\n### |-  plot theme ----\n\n# Start with base theme\nbase_theme <- create_base_theme(colors)\n\n# Add weekly-specific theme elements\nweekly_theme <- extend_weekly_theme(\n  base_theme,\n  theme(\n    # Axis elements\n    axis.text = element_text(color = colors$text, size = rel(0.7)),\n    axis.title.x = element_text(color = colors$text, face = \"bold\", size = rel(0.8), margin = margin(t = 15)),\n    axis.title.y = element_text(color = colors$text, face = \"bold\", size = rel(0.8), margin = margin(r = 10)),\n\n    # Grid elements\n    panel.grid.major.y = element_line(color = \"gray50\", linewidth = 0.05),\n    panel.grid.minor = element_blank(),\n    panel.grid.major.x = element_blank(),\n\n    # Legend elements\n    legend.position = \"plot\",\n    legend.title = element_text(family = fonts$tsubtitle, color = colors$text, size = rel(0.8), face = \"bold\"),\n    legend.text = element_text(family = fonts$tsubtitle, color = colors$text, size = rel(0.7)),\n\n    # Plot margins\n    plot.margin = margin(t = 15, r = 15, b = 15, l = 15),\n  )\n)\n\n# Set theme\ntheme_set(weekly_theme)\n```\n````\n:::\n\n\n#### 6. Plot\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: plot\n#| warning: false\n\n# P1. The API Graveyard Plot ----\np1 <- maintenance_analysis |>\n  ggplot(aes(x = added_date, y = days_for_viz)) +\n  # Geoms\n  geom_point(\n    data = maintenance_analysis |> filter(!same_day_update),\n    color = colors$palette[1], size = 1.5, alpha = 0.6\n  ) +\n  geom_point(\n    data = maintenance_analysis |> filter(same_day_update),\n    color = colors$palette[2], size = 2.5, alpha = 0.9\n  ) +\n  # Scales\n  scale_y_log10(\n    labels = comma_format(),\n    limits = c(0.1, NA),\n    breaks = c(0.5, 1, 10, 100, 1000)\n  ) +\n  # Annotations\n  annotate(\"text\",\n    x = as.Date(\"2016-06-01\"), y = 12,\n    label = paste0(\"Gray dots: Updated after addition\\n(\", updated_count, \" APIs • \", updated_pct, \"%)\"),\n    color = colors$palette[1], size = 3.5, fontface = \"bold\",\n    hjust = 0, vjust = 0\n  ) +\n  annotate(\"text\",\n    x = as.Date(\"2016-06-01\"), y = 0.9,\n    label = paste0(\"Red dots: Never updated\\n(\", never_updated_count, \" APIs • \", never_updated_pct, \"%)\"),\n    color = colors$palette[2], size = 3.5, fontface = \"bold\",\n    hjust = 0, vjust = 0\n  ) +\n  # Labs\n  labs(\n    title = \"<span style='color:#E74C3C'>**The API Graveyard**</span>: A Tale of Digital Neglect\",\n    subtitle = paste0(\"**\", never_updated_pct, \"%** of APIs are <span style='color:#E74C3C'>**never updated**</span> after being added to the catalog<br><br>\",\n                      \"<span style='color:#1a1a1a; font-size:14px'>**Days Since Last Update (log scale)**</span>\"),\n    x = \"Date Added to APIs.guru\",\n    y = NULL,\n  ) +\n  # Theme\n  theme(\n    plot.title = element_markdown(\n      size = rel(1.4),\n      family = fonts$title,\n      face = \"bold\",\n      color = colors$title,\n      lineheight = 1.1,\n      margin = margin(t = 0, b = 5)\n    ),\n    plot.subtitle = element_markdown(\n      size = rel(0.95),\n      family = fonts$subtitle,\n      color = alpha(colors$subtitle, 0.9),\n      lineheight = 1.2,\n      margin = margin(t = 5, b = 10)\n    ),\n    panel.grid.minor = element_blank(),\n    legend.position = \"none\"\n  )\n\n# P2. Provider Responsibility Breakdown Plot ----\np2 <- provider_analysis |>\n  ggplot(aes(x = provider_clean, y = abandonment_rate)) +\n  # Geoms\n  geom_col(fill = colors$palette[2], alpha = 0.7, width = 0.7) +\n  geom_text(aes(label = paste0(abandonment_rate, \"% •  (\", never_updated_apis, \"/\", total_apis, \")\")),\n    hjust = -0.1, size = 3, color = \"gray50\", fontface = \"bold\"\n  ) +\n  # Scales\n  scale_y_continuous(\n    limits = c(0, 124),\n    expand = c(0, 0)\n  ) +\n  coord_flip() +\n  # Labs\n  labs(\n    title = \"**API Maintenance Patterns by Provider**\",\n    subtitle = \"Providers with the highest rates of APIs that were never updated after initial publication\",\n    x = NULL,\n    y = \"% of APIs Never Updated After Addition\",\n  ) +\n  # Theme\n  theme(\n    plot.title = element_markdown(\n      size = rel(1.4),\n      family = fonts$title,\n      face = \"bold\",\n      color = colors$title,\n      lineheight = 1.1,\n      margin = margin(t = 5, b = 5)\n    ),\n    plot.subtitle = element_markdown(\n      size = rel(0.95),\n      family = fonts$subtitle,\n      color = alpha(colors$subtitle, 0.9),\n      lineheight = 1.2,\n      margin = margin(t = 5, b = 10)\n    ),\n    panel.grid.major.y = element_blank(),\n    panel.grid.minor = element_blank(),\n    axis.text.y = element_text(size = 9),\n    plot.caption = element_text(size = 8, color = colors$palette[3])\n  )\n\n\n# Final plot -----\ncombined_plot <- p1 / p2 +\n  plot_layout(heights = c(1.2, 1))\n\ncombined_plot <- combined_plot +\n  plot_annotation(\n    caption = caption_text,\n    theme = theme(\n      plot.caption = element_markdown(\n        size = rel(0.6),\n        family = fonts$caption,\n        color = colors$caption,\n        hjust = 0.5,\n        margin = margin(t = 10)\n      )\n    )\n  )\n```\n````\n:::\n\n\n#### 7. Save\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: save\n#| warning: false\n\n### |-  plot image ----  \nsave_plot_patchwork(\n  plot = combined_plot, \n  type = \"tidytuesday\", \n  year = 2025, \n  week = 24, \n  width  =  8,\n  height =  10\n)\n```\n````\n:::\n\n\n#### 8. Session Info\n\n::: {.callout-tip collapse=\"true\"}\n##### Expand for Session Info\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\nR version 4.4.1 (2024-06-14 ucrt)\nPlatform: x86_64-w64-mingw32/x64\nRunning under: Windows 11 x64 (build 22631)\n\nMatrix products: default\n\n\nlocale:\n[1] LC_COLLATE=English_United States.utf8 \n[2] LC_CTYPE=English_United States.utf8   \n[3] LC_MONETARY=English_United States.utf8\n[4] LC_NUMERIC=C                          \n[5] LC_TIME=English_United States.utf8    \n\ntime zone: America/New_York\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices datasets  utils     methods   base     \n\nother attached packages:\n [1] here_1.0.1      patchwork_1.3.0 glue_1.8.0      scales_1.3.0   \n [5] janitor_2.2.0   showtext_0.9-7  showtextdb_3.0  sysfonts_0.8.9 \n [9] ggtext_0.1.2    lubridate_1.9.3 forcats_1.0.0   stringr_1.5.1  \n[13] dplyr_1.1.4     purrr_1.0.2     readr_2.1.5     tidyr_1.3.1    \n[17] tibble_3.2.1    ggplot2_3.5.1   tidyverse_2.0.0 pacman_0.5.1   \n\nloaded via a namespace (and not attached):\n [1] gtable_0.3.6       httr2_1.0.6        xfun_0.49          htmlwidgets_1.6.4 \n [5] gh_1.4.1           tzdb_0.5.0         yulab.utils_0.1.8  vctrs_0.6.5       \n [9] tools_4.4.0        generics_0.1.3     parallel_4.4.0     curl_6.0.0        \n[13] gifski_1.32.0-1    fansi_1.0.6        pkgconfig_2.0.3    ggplotify_0.1.2   \n[17] lifecycle_1.0.4    compiler_4.4.0     farver_2.1.2       munsell_0.5.1     \n[21] codetools_0.2-20   snakecase_0.11.1   htmltools_0.5.8.1  yaml_2.3.10       \n[25] crayon_1.5.3       pillar_1.9.0       camcorder_0.1.0    magick_2.8.5      \n[29] commonmark_1.9.2   tidyselect_1.2.1   digest_0.6.37      stringi_1.8.4     \n[33] labeling_0.4.3     rsvg_2.6.1         rprojroot_2.0.4    fastmap_1.2.0     \n[37] grid_4.4.0         colorspace_2.1-1   cli_3.6.4          magrittr_2.0.3    \n[41] utf8_1.2.4         withr_3.0.2        rappdirs_0.3.3     bit64_4.5.2       \n[45] timechange_0.3.0   rmarkdown_2.29     tidytuesdayR_1.1.2 gitcreds_0.1.2    \n[49] bit_4.5.0          hms_1.1.3          evaluate_1.0.1     knitr_1.49        \n[53] markdown_1.13      gridGraphics_0.5-1 rlang_1.1.6        gridtext_0.1.5    \n[57] Rcpp_1.0.13-1      xml2_1.3.6         renv_1.0.3         vroom_1.6.5       \n[61] svglite_2.1.3      rstudioapi_0.17.1  jsonlite_1.8.9     R6_2.5.1          \n[65] fs_1.6.5           systemfonts_1.1.0 \n```\n\n\n:::\n:::\n\n:::\n\n#### 9. GitHub Repository\n\n::: {.callout-tip collapse=\"true\"}\n##### Expand for GitHub Repo\n\nThe complete code for this analysis is available in [`tt_2025_24.qmd`](https://github.com/poncest/personal-website/blob/master/data_visualizations/TidyTuesday/2025/tt_2025_24.qmd).\n\nFor the full repository, [click here](https://github.com/poncest/personal-website/).\n:::\n\n#### 10. References\n\n::: {.callout-tip collapse=\"true\"}\n##### Expand for References\n\n1.  Data Sources:\n\n-   TidyTuesday 2025 Week 24: [API Specs](https://github.com/rfordatascience/tidytuesday/blob/main/data/2025/2025-06-17\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}