---
title: "The Arcane Hierarchy: D&D Spellcasting Classes Compared"
subtitle: "While Wizards master the most spells overall, Clerics maintain the largest collection of unique divine magic, highlighting distinct magical specializations across classes."
description: "An analysis of D&D spellcasting classes examining spell distribution and progression patterns, revealing the unique balance between versatility and specialization among magical practitioners."
author: "Steven Ponce"
date: "2024-12-08" 
categories: [TidyTuesday, Data Visualization, R Programming]  
tags: [D&D, RPG Games, ggplot2, patchwork, data-viz, spells, fantasy-gaming, class-analysis, tidyverse, spell-progression]
image: "thumbnails/tt_2024_51.png"

format:
  html:
    toc: true
    toc-depth: 5
    code-link: true
    code-fold: true
    code-tools: true
    code-summary: "Show code"
    self-contained: true
    theme: 
      light: [flatly, assets/styling/custom_styles.scss]
      dark: [darkly, assets/styling/custom_styles_dark.scss]

editor_options: 
  chunk_output_type: inline

execute: 
  freeze: true                                                  
  cache: true                                                   
  error: false
  message: false
  warning: false
  eval: true

filters:
  - social-share
share:
  permalink: "https://stevenponce.netlify.app/data_visualizations/TidyTuesday/2024/tt_2024_51.html"
  description: "DnD Magic Analysis: Comparing Wizards versatility vs Clerics unique spells. A data story on spellcasting class specializations. #DnD #DataViz #rstats"
  twitter: true
  linkedin: true
  email: true
  facebook: false
  reddit: false
  stumble: false
  tumblr: false
  mastodon: true
  bsky: true
---

![Dual-panel visualization comparing Dungeons & Dragons (D&D) Free Rules 2024 spellcasting classes. The left panel features a horizontal bar chart highlighting the number of class-exclusive spells, with Clerics having the most (21 spells), followed by Wizards (16 spells), and other classes having significantly fewer (1-4 spells). The right panel contains faceted line charts showing spell progression patterns across levels 0â€“9 for each class, arranged in descending order of total spells. Wizards peak at around 30 spells at level 2, with other classes showing distinct progression patterns that reflect their magical capabilities.](tt_2024_51.png){#fig-1}


### <mark> __Steps to Create this Graphic__ </mark>

#### 1. Load Packages & Setup 

```{r}
#| label: load
#| warning: false
#| message: false      
#| results: "hide"     

## 1. LOAD PACKAGES & SETUP ----
suppressPackageStartupMessages({
    pacman::p_load(
    tidyverse,      # Easily Install and Load the 'Tidyverse'
    ggtext,         # Improved Text Rendering Support for 'ggplot2'
    showtext,       # Using Fonts More Easily in R Graphs
    janitor,        # Simple Tools for Examining and Cleaning Dirty Data
    skimr,          # Compact and Flexible Summaries of Data
    scales,         # Scale Functions for Visualization
    glue,           # Interpreted String Literals
    here,           # A Simpler Way to Find Your Files
    camcorder,      # Record Your Plot History 
    patchwork,      # The Composer of Plots
    marquee,        # Markdown Parser and Renderer for R Graphics 
    gghighlight     # Highlight Lines and Points in 'ggplot2'
    )   
})

suppressMessages(source(here::here("_setup.R")))

### |- figure size ----
camcorder::gg_record(
  dir    = here::here("temp_plots"),
  device = "png",
  width  =  12,
  height =  8,
  units  = "in",
  dpi    = 320
)

### |- resolution ----
showtext_opts(dpi = 320, regular.wt = 300, bold.wt = 800)
```

#### 2. Read in the Data 

```{r}
#| label: read
#| include: true
#| eval: true
#| warning: false

# tt <- tidytuesdayR::tt_load(2024, week = 50)
#
# parfumo_data_raw  <- tt$parfumo_data |> clean_names()
#
# tidytuesdayR::readme(tt)
# rm(tt)

# Option 2: Read directly from GitHub
spells_raw <- spells <- readr::read_csv(
  'https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2024/2024-12-17/spells.csv') |> 
  clean_names()
```

#### 3. Examine the Data

```{r}
#| label: examine
#| include: true
#| eval: true
#| results: 'hide'
#| warning: false

glimpse(spells_raw)
skim(spells_raw)
```

#### 4. Tidy Data 

```{r}
#| label: tidy
#| warning: false

### |- tidy data ----

## Plot 1: Exclusive Spells Data ----
exclusive_df <- spells_raw |>
    # Calculate class availability
    mutate(
        available_to = rowSums(select(spells_raw, bard:wizard))
    ) |>
    # Get exclusive spells
    filter(available_to == 1) |>  
    select(bard:wizard) |>
    # Calculate totals
    summarise(across(everything(), sum)) |>
    # Reshape to long format
    pivot_longer(
        everything(),
        names_to = "class",
        values_to = "exclusive_spells"
    ) |>
    # Format and calculate percentages
    mutate(
        class = str_to_title(class),
        total_spells = sum(exclusive_spells),
        pct = exclusive_spells / total_spells,
        label = scales::percent(pct, accuracy = 0.1),
        class = fct_reorder(class, exclusive_spells, .desc = TRUE)
    )

## Plot 2: Progression Data ----
progression_df <- spells_raw |>
    # Initial selection and reshape
    select(level, bard:wizard) |>
    pivot_longer(
        -level,
        names_to = "class",
        values_to = "has_spell"
    ) |>
    # Process available spells
    filter(has_spell) |>
    # Count spells per class and level
    group_by(class, level) |>
    summarise(
        count = n(),
        .groups = "drop"
    ) |>
    # Calculate totals and format
    group_by(class) |>
    mutate(
        total_spells = sum(count)
    ) |>
    ungroup() |>
    # Format and order class factor
    mutate(
        class = str_to_title(class),
        # Order by total spells descending
        class = fct_reorder(class, total_spells, .desc = TRUE)
    )
```


#### 5. Visualization Parameters 

```{r}
#| label: params
#| include: true
#| warning: false

### |-  plot aesthetics ----
bkg_col      <- "#f5f5f2"
title_col    <- "gray20"
subtitle_col <- "gray30"
text_col     <- "gray30"
caption_col  <- "gray40"
col_palette  <- "#AB4459"        

# icons
tt <- str_glue("#TidyTuesday: { 2024 } Week { 51 } &bull; Source: D&D Free Rules (2024), Spell Descriptions<br>")
li <- str_glue("<span style='font-family:fa6-brands'>&#xf08c;</span>")
gh <- str_glue("<span style='font-family:fa6-brands'>&#xf09b;</span>")
bs <- str_glue("<span style='font-family:fa6-brands'>&#xe671; </span>")

# text
title_text    <- str_glue("The Arcane Hierarchy: D&D Spellcasting Classes Compared")
subtitle_text <- "While **_Wizards_** master the most spells overall, **_Clerics_** maintain the largest collection of unique divine magic, highlighting distinct magical specializations across classes."
caption_text  <- str_glue("{tt} {li} stevenponce &bull; {bs} sponce1 &bull; {gh} poncest &bull; #rstats #ggplot2")

### |-  fonts ----
setup_fonts()

### |-  plot theme ----
theme_set(theme_minimal(base_size = 14, base_family = "text"))

theme_update(
    plot.title.position   = "plot",
    plot.caption.position = "plot",
    legend.position       = "plot",
    plot.background       = element_rect(fill = bkg_col, color = bkg_col),
    panel.background      = element_rect(fill = bkg_col, color = bkg_col),
    plot.margin           = margin(t = 10, r = 20, b = 10, l = 20),
    axis.title.x          = element_text(margin = margin(10, 0, 0, 0), size = rel(1.05),
                                         color = text_col, family = "text", face = "bold", hjust = 0.5),
    axis.title.y          = element_text(margin = margin(0, 10, 0, 0), size = rel(1.05),
                                         color = text_col, family = "text", face = "bold", hjust = 0.5),
    axis.line.x           = element_line(color = "#252525", linewidth = .2),
    axis.title            = element_text(size = rel(0.93), face = "bold", color = text_col),
    axis.text             = element_text(size = rel(0.79), color = text_col),
    legend.title          = element_blank(),
    legend.text           = element_text(size = rel(0.71), color = text_col),
    panel.grid.major.x    = element_blank(),
    panel.grid.major.y    = element_line(color = "gray90", linewidth = 0.2),
    panel.grid.minor      = element_blank(),
    strip.text            = element_textbox(size     = rel(0.9),
                                            face     = 'bold',
                                            color    = text_col,
                                            hjust    = 0.5,
                                            halign   = 0.5,
                                            r        = unit(3, "pt"),
                                            width    = unit(6, "npc"),
                                            padding  = margin(2, 0, 2, 0),
                                            margin   = margin(3, 3, 3, 3),
                                            fill     = "transparent"),
    panel.spacing         = unit(1.5, 'lines')
)
```


#### 6. Plot 

```{r}
#| label: plot
#| warning: false

### |-  Plot 1 ----
exclusive_plot <- ggplot(exclusive_df,
                         aes(y = fct_reorder(class, exclusive_spells), x = exclusive_spells)) +
    # Geoms
    geom_bar(stat = "identity", 
             fill = col_palette[1],
             alpha = 0.8,
             width = 0.75
    ) +
    geom_text(
        aes(label = sprintf("%d spells", exclusive_spells),),
        # hjust = -0.2,
        size = 3.5,
        color = if_else(exclusive_df$exclusive_spells < 15, text_col, "#fafafa"),
        hjust = if_else(exclusive_df$exclusive_spells < 15, -0.2, 1.2),
    ) +
    
    # Scales
    scale_x_continuous(
        expand = expansion(mult = c(0, 0.05)),
        breaks = seq(0, 25, by = 5)
    ) +
    scale_y_discrete() +
    coord_cartesian(clip = 'off') +
    
    # Labs
    labs(
        title = "Class-Exclusive Spells in D&D",
        subtitle = "Distribution of spells unique to each character class",
        x = "Number of Exclusive Spells",
        y = NULL
    ) +
    
    # Theme
    theme(
        plot.title = element_text(
            family = "title", 
            size   = rel(1.4), 
            face   = "bold",
            color  = title_col,
            margin = margin(b = 10)
        ),
        plot.subtitle = element_text(
            family = "text",
            size   = rel(0.9),
            color  = subtitle_col,
            margin = margin(b = 5)
        ),
        panel.grid.minor = element_blank(),
        panel.grid.major.y = element_blank(),
    ) 
  
### |-  Plot 2 ----
progression_plot <- ggplot(progression_df,
                           aes(x = level, y = count, group = class)) +
    # Geoms
    geom_line(size = 0.3, alpha = 0.2) +
    geom_point(size = 1, alpha = 0.2) +
    gghighlight(
        use_direct_label = FALSE,
        unhighlighted_params = list(
            size = 0.3,
            alpha = 0.2,
            color = 'gray20'
        )
    ) +
    geom_line(color = col_palette[1], size = 1.2) +
    geom_point(color = col_palette[1], size = 2.5) +
    
    # Scales
    scale_x_continuous(breaks = seq(0, 9, by = 3)) +
    scale_y_continuous(breaks = seq(0, 35, by = 10)) +
    coord_cartesian(clip = 'off') +
    
    # Labs
    labs(
        title = "Spell Progression Patterns by Character Class",
        subtitle = "Each class shows distinct patterns in spell availability across levels",
        x = "Spell Level",
        y = "Number of Available Spells"
    ) +
    
    # Facet
    facet_wrap(~class, ncol = 4) +
    
    # Theme
    theme(
        plot.title = element_text(
            family = "title", 
            size   = rel(1.4), 
            face   = "bold",
            color  = title_col,
            margin = margin(b = 10)
        ),
        plot.subtitle = element_text(
            family = "text",
            size   = rel(0.9),
            color  = subtitle_col,
            margin = margin(b = 15)
        )
    ) 

### |-  combined plots ----
combined_plot <- (
    exclusive_plot + plot_spacer() + progression_plot + 
        plot_layout(widths = c(0.6, 0.02, 1.2))  
)

combined_plot <- combined_plot +
    plot_annotation(
        title    = title_text,
        subtitle = subtitle_text,
        caption  = caption_text,
        theme = theme(
            plot.title = element_text(
                family = "title", 
                size   = rel(2.3), 
                face   = "bold",
                color  = title_col,
                margin = margin(b = 10)
            ),
            plot.subtitle = element_marquee(
                family = "text",
                lineheight = 1.1,
                width  = 1,
                size   = rel(1.1),
                color  = subtitle_col,
                margin = margin(b = 5)
            ),
            plot.caption = element_markdown(
                family = "caption",
                size   = rel(0.65),
                color  = caption_col,
                hjust  = 0.5,
                margin = margin(t = 5)
            ),
            plot.margin = margin(10, 10, 10, 10),
            plot.background = element_rect(fill = bkg_col, color = bkg_col),
            panel.background = element_rect(fill = bkg_col, color = bkg_col)
        )
    ) 
```



#### 7. Save

```{r}
#| label: save
#| warning: false

### |-  plot image ----  

source(here::here("R/image_utils.R"))
save_plot_patchwork(combined_plot, type = "tidytuesday", year = 2024, week = 51, width = 12, height = 8)
```



#### 8. Session Info

::: {.callout-tip collapse="true"}
##### Expand for Session Info

```{r, echo = FALSE}
#| eval: true
#| warning: false

sessionInfo()
```
:::



#### 9. GitHub Repository

::: {.callout-tip collapse="true"}
##### Expand for GitHub Repo
 
The complete code for this analysis is available in [`tt_2024_51.qmd`](https://github.com/poncest/personal-website/blob/master/data_visualizations/TidyTuesday/2024/tt_2024_51.qmd).

For the full repository, [click here](https://github.com/poncest/personal-website/).
:::
