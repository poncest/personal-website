---
title: "Evolution of MTA Art Materials (1980-2020)"
subtitle: "Tracking material preferences across four decades of transit art"
description: "An analysis of MTA's permanent art catalog using gghighlight to reveal how material preferences evolved from 1980-2020. Mosaic & Tile dominated early installations, Glass surged dramatically in the 2000s, and Steel & Iron emerged as a modern choice."
author: "Steven Ponce"
date: "2025-07-22" 
categories: ["TidyTuesday", "Data Visualization", "R Programming", "2025"]
tags: [
  "gghighlight",
  "faceted-visualization", 
  "time-series",
  "material-trends",
  "transit-art",
  "MTA",
  "New-York",
  "art-analysis",
  "ggplot2",
  "data-storytelling",
  "public-art"
]
image: "thumbnails/tt_2025_29.png"
format:
  html:
    toc: true
    toc-depth: 5
    code-link: true
    code-fold: true
    code-tools: true
    code-summary: "Show code"
    self-contained: true
    theme: 
      light: [flatly, assets/styling/custom_styles.scss]
      dark: [darkly, assets/styling/custom_styles_dark.scss]
editor_options: 
  chunk_output_type: inline
execute: 
  freeze: true                                    
  cache: true                                       
  error: false
  message: false
  warning: false
  eval: true
---

![Faceted line chart showing MTA art material usage from 1980-2020. Seven panels display trends for different materials: Mosaic & Tile shows steady usage with peaks around 1990 and 2014; Glass has dramatic spikes in 2002 and 2010; Steel & Iron emerge mainly after 2005; Bronze & Copper peaks around 1988; Ceramic, Paint & Pigments, and Stone show minimal, sporadic usage throughout the period.](tt_2025_29.png){#fig-1}

### <mark> **Steps to Create this Graphic** </mark>

#### 1. Load Packages & Setup

```{r}
#| label: load
#| warning: false
#| message: false      
#| results: "hide"     

## 1. LOAD PACKAGES & SETUP ----
suppressPackageStartupMessages({
if (!require("pacman")) install.packages("pacman")
pacman::p_load(
    tidyverse,  # Easily Install and Load the 'Tidyverse'
    ggtext,     # Improved Text Rendering Support for 'ggplot2'
    showtext,   # Using Fonts More Easily in R Graphs
    janitor,    # Simple Tools for Examining and Cleaning Dirty Data
    scales,     # Scale Functions for Visualization
    glue,       # Interpreted String Literals
    gghighlight # Highlight Lines and Points in 'ggplot2'
  )})

### |- figure size ----
camcorder::gg_record(
  dir    = here::here("temp_plots"),
  device = "png",
  width  = 8,
  height = 8,
  units  = "in",
  dpi    = 320
)

# Source utility functions
suppressMessages(source(here::here("R/utils/fonts.R")))
source(here::here("R/utils/social_icons.R"))
source(here::here("R/utils/image_utils.R"))
source(here::here("R/themes/base_theme.R"))
```

#### 2. Read in the Data

```{r}
#| label: read
#| include: true
#| eval: true
#| warning: false

tt <- tidytuesdayR::tt_load(2025, week = 29)

mta_art <- tt$mta_art |> clean_names()
station_lines <- tt$station_lines |> clean_names()

tidytuesdayR::readme(tt)
rm(tt)
```

#### 3. Examine the Data

```{r}
#| label: examine
#| include: true
#| eval: true
#| results: 'hide'
#| warning: false

glimpse(mta_art)
glimpse(station_lines)
```

#### 4. Tidy Data

```{r}
#| label: tidy
#| warning: false

# Define a function to categorize materials
categorize_material <- function(art_material_string) {
  case_when(
    str_detect(str_to_lower(art_material_string), "mosaic|tile") ~ "Mosaic & Tile",
    str_detect(str_to_lower(art_material_string), "bronze|brass|copper") ~ "Bronze & Copper",
    str_detect(str_to_lower(art_material_string), "glass|stained") ~ "Glass",
    str_detect(str_to_lower(art_material_string), "ceramic|porcelain|terra") ~ "Ceramic",
    str_detect(str_to_lower(art_material_string), "steel|iron|metal") ~ "Steel & Iron",
    str_detect(str_to_lower(art_material_string), "stone|granite|marble") ~ "Stone",
    str_detect(str_to_lower(art_material_string), "paint|acrylic|oil") ~ "Paint & Pigments",
    TRUE ~ "Other Materials"
  )
}

# Process the raw data
mta_art_cleaned <- mta_art |>
  filter(!is.na(art_date), !is.na(art_material)) |>
  mutate(
    material_category = categorize_material(art_material)
  ) |>
  filter(
    material_category != "Other Materials",
    !is.na(material_category)
  )

# Calculate material totals for proper ordering
material_totals <- mta_art_cleaned |>
  count(material_category, sort = TRUE)

# Prepare time series data
timeseries_data <- mta_art_cleaned |>
  mutate(
    # Create 2-year time bins
    year_bin = 2 * floor(art_date / 2),
    # Convert to ordered factor using levels from material_totals
    material_category = factor(material_category, levels = material_totals$material_category)
  ) |>
  # Count installations by time period and material
  count(year_bin, material_category, name = "installations") |>
  # Fill in missing combinations with zeros
  complete(
    year_bin = seq(min(year_bin), max(year_bin), by = 2),
    material_category,
    fill = list(installations = 0)
  )
```

#### 5. Visualization Parameters

```{r}
#| label: params
#| include: true
#| warning: false

### |-  plot aesthetics ----
highlight_color <- "#4A9782"

colors <- get_theme_colors(
  palette = c(
      "Mosaic & Tile" = highlight_color,
      "Glass" = highlight_color, 
      "Bronze & Copper" = highlight_color,
      "Ceramic" = highlight_color,
      "Steel & Iron" = highlight_color,
      "Stone" = highlight_color,
      "Paint & Pigments" = highlight_color

  )
)

### |- titles and caption ----
title_text <- str_glue("Evolution of MTA Art Materials (1980-2020)")
subtitle_text <- str_glue("Tracking material preferences across four decades of transit art")

caption_text <- create_social_caption(
  tt_year = 2025,
  tt_week = 29,
  source_text =  "MTA Permanent Art Catalog: Beginning 1980"
)

### |-  fonts ----
setup_fonts()
fonts <- get_font_families()

### |-  plot theme ----

# Start with base theme
base_theme <- create_base_theme(colors)

# Add weekly-specific theme elements
weekly_theme <- extend_weekly_theme(
  base_theme,
  theme(
    axis.line = element_blank(), 
    axis.ticks = element_blank(), 
    
    # Grid elements
    panel.grid.major.y = element_line(color = "gray90",linetype = "solid", linewidth = 0.3),
    panel.grid.minor.y = element_blank(), 
    panel.grid.major.x = element_blank(), 
    panel.grid.minor.x = element_blank(), 
  
    # Axis elements
    axis.text = element_text(color = colors$text, size = rel(0.7)),
    axis.title.x = element_text(color = colors$text, face = "bold", size = rel(0.8), margin = margin(t = 15)),
    axis.title.y = element_text(color = colors$text, face = "bold", size = rel(0.8), margin = margin(r = 10)),

    # Legend elements
    legend.position = "plot",
    legend.title = element_text(family = fonts$tsubtitle, color = colors$text, size = rel(0.8), face = "bold"),
    legend.text = element_text(family = fonts$tsubtitle, color = colors$text, size = rel(0.7)),

    # Plot margin
    plot.margin = margin(t = 15, r = 15, b = 15, l = 15),
  )
)

# Set theme
theme_set(weekly_theme)
```

#### 6. Plot

```{r}
#| label: plot
#| warning: false

p <- timeseries_data |>
  ggplot(aes(x = year_bin, y = installations, color = material_category)) +

  # Geoms
  geom_line(size = 1.3, alpha = 0.9) +
  gghighlight(
    use_direct_label = FALSE,
    unhighlighted_params = list(
      linewidth = 0.3,
      alpha = 0.75,
      color = "gray60"
    )
  ) +
  # Scales
  scale_color_manual(
    values = c(
      "Mosaic & Tile" = highlight_color,
      "Glass" = highlight_color,
      "Bronze & Copper" = highlight_color,
      "Ceramic" = highlight_color,
      "Steel & Iron" = highlight_color,
      "Stone" = highlight_color,
      "Paint & Pigments" = highlight_color
    ),
    guide = "none"
  ) +
  scale_x_continuous(
    breaks = seq(1980, 2020, 20),
    expand = expansion(mult = c(0.01, 0.01))
  ) +
  scale_y_continuous(
    expand = expansion(mult = c(0.0, 0.1))
  ) +
  # Labs
  labs(
    title = title_text,
    subtitle = subtitle_text,
    caption = caption_text,
    x = NULL,
    y = "Number of Installations"
  ) +
  # Facets
  facet_wrap(~material_category,
    scales = "free_y", ncol = 3
  ) +
  # Theme
  theme(
    plot.title = element_text(
      size = rel(1.7),
      family = fonts$title,
      face = "bold",
      color = colors$title,
      lineheight = 1.1,
      margin = margin(t = 5, b = 5)
    ),
    plot.subtitle = element_text(
      size = rel(0.95),
      family = fonts$subtitle,
      color = alpha(colors$subtitle, 0.9),
      lineheight = 1.2,
      margin = margin(t = 5, b = 20)
    ),
    plot.caption = element_markdown(
      size = rel(0.65),
      family = fonts$caption,
      color = colors$caption,
      hjust = 0,
      margin = margin(t = 15, b = 5, l = 0),
      lineheight = 1.3
    ),
    strip.text = element_text(
      size = 12,
      face = "bold",
      color = "gray20",
      family = fonts$body_bold,
      margin = margin(t = 5, b = 5)
    ),
    strip.background = element_rect(
      fill = "gray95",
      color = "white",
      linewidth = 0.5
    ),
    panel.spacing = unit(1.5, "lines"),
  )
```

#### 7. Save

```{r}
#| label: save
#| warning: false

### |-  plot image ----  
save_plot(
  plot = p, 
  type = "tidytuesday", 
  year = 2025, 
  week = 29, 
  width  = 8,
  height = 8
)
```

#### 8. Session Info

::: {.callout-tip collapse="true"}
##### Expand for Session Info

```{r, echo = FALSE}
#| eval: true
#| warning: false

sessionInfo()
```
:::

#### 9. GitHub Repository

::: {.callout-tip collapse="true"}
##### Expand for GitHub Repo

The complete code for this analysis is available in [`tt_2025_29.qmd`](https://github.com/poncest/personal-website/blob/master/data_visualizations/TidyTuesday/2025/tt_2025_29.qmd).

For the full repository, [click here](https://github.com/poncest/personal-website/).
:::

#### 10. References

::: {.callout-tip collapse="true"}
##### Expand for References

1.  Data Sources:

-   TidyTuesday 2025 Week 29: \[MTA Permanent Art Catalog\](https://github.com/rfordatascience/tidytuesday/blob/main/data/2025/2025-07-22)
:::
