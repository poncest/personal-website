---
title: "Radial Warmth: San Juan's Temperature Profile"
subtitle: "Monthly Temperature Patterns in San Juan, Puerto Rico (2014-2024)"
description: "Exploring San Juan's temperature patterns through a circular heatmap visualization. This radial chart reveals the seasonal cycle of temperatures in Puerto Rico's capital from 2014-2024, highlighting the consistent tropical climate with subtle variations across months and years." 
author: "Steven Ponce"
date: "2025-04-03" 
categories: ["30DayChartChallenge", "Data Visualization", "R Programming", "2025"]
tags: [
 "ggplot2", "circular visualization", "weather data", "climate patterns", "heatmap", "NOAA", "Puerto Rico", "tropical climate", "seasonal patterns", "temperature analysis", "radial chart"
  ]
image: "thumbnails/30dcc_2025_03.png"
format:
  html:
    toc: true
    toc-depth: 5
    code-link: true
    code-fold: true
    code-tools: true
    code-summary: "Show code"
    self-contained: true
    theme: 
      light: [flatly, assets/styling/custom_styles.scss]
      dark: [darkly, assets/styling/custom_styles_dark.scss]
editor_options: 
  chunk_output_type: inline
execute: 
  freeze: true                                                  
  cache: true                                                   
  error: false
  message: false
  warning: false
  eval: true
filters:
  - social-share
share:
  permalink: "https://stevenponce.netlify.app/data_visualizations/TidyTuesday/2025/30dcc_2025_03.html"
  description: "Radial Warmth: Visualizing a decade of San Juan's temperature patterns in a circular heatmap for the #30DayChartChallenge. See how Puerto Rico's tropical climate cycles through the seasons."
  twitter: true
  linkedin: true
  email: true
  facebook: false
  reddit: false
  stumble: false
  tumblr: false
  mastodon: true
  bsky: true
---

![A circular heatmap showing San Juan's monthly temperature patterns from 2014-2024. The visualization arranges months in a circle with years radiating outward. Temperature is displayed through a purple-to-yellow color gradient, with cooler winter temperatures (December-February) in purple and warmer summer temperatures (July-September) in yellow. The pattern reveals San Juan's consistent tropical seasonal cycle.](30dcc_2025_03.png){#fig-1}

### <mark> **Steps to Create this Graphic** </mark>

#### 1. Load Packages & Setup

```{r}
#| label: load
#| warning: false
#| message: false      
#| results: "hide"     

## 1. LOAD PACKAGES & SETUP ----
suppressPackageStartupMessages({
pacman::p_load(
  tidyverse,      # Easily Install and Load the 'Tidyverse'
  ggtext,         # Improved Text Rendering Support for 'ggplot2'
  showtext,       # Using Fonts More Easily in R Graphs
  janitor,        # Simple Tools for Examining and Cleaning Dirty Data
  skimr,          # Compact and Flexible Summaries of Data
  scales,         # Scale Functions for Visualization
  lubridate,      # Make Dealing with Dates a Little Easier
  viridis,        # Color palettes
  fs,             # For file handling
  camcorder       # Record Your Plot History
)
})

### |- figure size ----
gg_record(
    dir    = here::here("temp_plots"),
    device = "png",
    width  =  7,
    height =  8,
    units  = "in",
    dpi    = 320
)

# Source utility functions
suppressMessages(source(here::here("R/utils/fonts.R")))
source(here::here("R/utils/social_icons.R"))
source(here::here("R/utils/image_utils.R"))
source(here::here("R/themes/base_theme.R"))
```

#### 2. Read in the Data

```{r}
#| label: read
#| include: true
#| eval: true
#| warning: false

# Directory where all CSV files are stored
data_dir <- here::here('data/30DayChartChallenge/2025/')

# Get a list of all CSV files for San Juan from 2014-2024
sj_files <- fs::dir_ls(data_dir, regexp = "78526011641_20[0-9]{2}\\.csv$")

# Function to read and process each file
process_file <- function(file_path) {
  # Extract year from filename
  year <- str_extract(file_path, "20[0-9]{2}")
  
  # Read file and add year column
  read_csv(file_path) |>
    clean_names() |>
    mutate(file_year = year)
}

# Read and combine all files
pri_temperature_all <- map_df(sj_files, process_file)
```

#### 3. Examine the Data

```{r}
#| label: examine
#| include: true
#| eval: true
#| results: 'hide'
#| warning: false

glimpse(pri_temperature_all)
skim(pri_temperature_all)
```

#### 4. Tidy Data

```{r}
#| label: tidy
#| warning: false

### |- Tidy ----
# Process temperature data
san_juan_temp <- pri_temperature_all |>
  # Extract date information
  mutate(
    year = year(date),
    month = month(date),
    month_name = month(date, label = TRUE, abbr = TRUE)
  ) |>
  # Select relevant columns
  select(date, year, month, month_name, temp)

# Calculate monthly averages
monthly_temp <- san_juan_temp |>
  group_by(year, month, month_name) |>
  summarize(
    avg_temp = mean(temp, na.rm = TRUE),
    .groups = "drop"
  ) |>
  # Round temperature
  mutate(avg_temp = round(avg_temp, 1))

# Filter for complete years
years_to_include <- 2014:2024
monthly_temp <- monthly_temp |>
  filter(year %in% years_to_include)

# Prepare data for visualization
monthly_temp <- monthly_temp |>
  mutate(
    # Convert to factors to ensure proper ordering
    month_name = factor(month_name, levels = month.abb),
    year = as.factor(year)
  )

# Set temperature scale
temp_min <- floor(min(monthly_temp$avg_temp, na.rm = TRUE))
temp_max <- ceiling(max(monthly_temp$avg_temp, na.rm = TRUE))
```

#### 5. Visualization Parameters

```{r}
#| label: params
#| include: true
#| warning: false

### |- plot aesthetics ---- 
colors <- get_theme_colors(palette = NULL)

### |-  titles and caption ----
# text
title_text    <- str_glue("Radial Warmth: San Juan's Temperature Profile") 
subtitle_text <- str_glue("Monthly Temperature Patterns in San Juan, Puerto Rico (2014-2024)")

# Create caption
caption_text <- create_dcc_caption(
  dcc_year = 2025,
  dcc_day = 03,
  source_text =  "NOAA" 
)

### |-  fonts ----
setup_fonts()
fonts <- get_font_families()

### |-  plot theme ----

# Start with base theme
base_theme <- create_base_theme(colors)

# Add weekly-specific theme elements
weekly_theme <- extend_weekly_theme(
  base_theme,
  theme(
    # Text styling 
    plot.title = element_text(face = "bold", family = fonts$title, size = rel(1.14), margin = margin(b = 10)),
    plot.subtitle = element_text(family = fonts$subtitle, color = colors$text, size = rel(0.78), margin = margin(b = 20)),
    
    # Axis elements
    axis.title.y = element_text(color = colors$text, size = rel(0.8),
                              hjust = 1, vjust = 0.5, angle = 90),
    axis.title.x = element_blank(),
    axis.text.x = element_text(color = colors$text, size = rel(0.7)),
    axis.text.y = ggtext::element_markdown(),
  
    # Grid elements
    panel.grid.major = element_blank(),
    panel.grid.minor = element_blank(),
 
    # Legend elements
    legend.position = "bottom",
    legend.title = element_text(family = fonts$text, size = rel(0.8)),
    legend.text = element_text(family = fonts$text, size = rel(0.7)),
    
    # Plot margins 
    plot.margin = margin(t = 10, r = 15, b = 10, l = 15),
  )
)

# Set theme
theme_set(weekly_theme)
```

#### 6. Plot

```{r}
#| label: plot
#| warning: false

### |-  Plot ----
p <- ggplot(monthly_temp, aes(x = month_name, y = year, fill = avg_temp)) +
  # Geoms
  geom_tile(color = "white", size = 0.1) +
  # Scales
  coord_polar() +
  scale_fill_viridis(
    option = "plasma",
    name = "Temperature (Â°F)",
    limits = c(temp_min, temp_max),
    breaks = seq(temp_min, temp_max, by = 2)
  ) +
  # Labs
  labs(
    title = title_text,
    subtitle = subtitle_text,
    caption = caption_text,
    x = NULL,
    y = NULL
  ) +
  # Theme
  theme(
    plot.title = element_text(
      size          = rel(1.6),
      family        = fonts$title,
      face          = "bold",
      color         = colors$title,
      margin        = margin(t = 5, b = 5)
    ),
    plot.subtitle   = element_markdown(
      size          = rel(0.9),
      family        = fonts$subtitle,
      color         = colors$subtitle,
      lineheight    = 1.1,
      margin        = margin(t = 5, b = 20)
    ),
    plot.caption    = element_markdown(
      size          = rel(.6),
      family        = fonts$caption,
      color         = colors$caption,
      lineheight    = 0.65,
      hjust         = 0.5,
      halign        = 0.5,
      margin        = margin(t = 10, b = 5)
    ),
  )
```

#### 7. Save

```{r}
#| label: save
#| warning: false

### |-  plot image ----  

save_plot(
  p, 
  type = "30daychartchallenge", 
  year = 2025, 
  day = 03, 
  width = 7, 
  height = 8
  )
```

#### 8. Session Info

::: {.callout-tip collapse="true"}
##### Expand for Session Info

```{r, echo = FALSE}
#| eval: true
#| warning: false

sessionInfo()
```
:::

#### 9. GitHub Repository

::: {.callout-tip collapse="true"}
##### Expand for GitHub Repo

The complete code for this analysis is available in [`30dcc_2025_03.qmd`](https://github.com/poncest/personal-website/blob/master/data_visualizations/TidyTuesday/2025/30dcc_2025_03.qmd).

For the full repository, [click here](https://github.com/poncest/personal-website/).
:::


#### 10. References
::: {.callout-tip collapse="true"}
##### Expand for References

1. Data Sources:
   - NOAA - National Centers for Environmental Information, Global Surface Summary of the Day - GSOD [SAN JUAN L M MARIN INTERNATIONAL AIRPORT, PR US (78526011641.csv), 2014 - 2024](https://www.ncei.noaa.gov/access/search/data-search/global-summary-of-the-day?dataTypes=TEMP&pageNum=1&bbox=18.516,-67.951,17.883,-65.221&place=Country:241&startDate=2014-01-01T00:00:00&endDate=2024-12-03T23:59:59&stations=78526011641)
   
2. Citation:
   - NOAA National Centers of Environmental Information. 1999. Global Surface Summary of the Day - GSOD. 1.0. [SAN JUAN L M MARIN INTERNATIONAL AIRPORT, PR US (78526011641.csv), 2014 - 2024]. NOAA National Centers for Environmental Information. Accessed [2025-03-21].

:::
